{
"version":3,
"file":"module$node_modules$elliptic$lib$elliptic$ec$key.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/elliptic/lib/elliptic/ec/key.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$elliptic$lib$elliptic$ec$key\"] = function(global,require,module,exports) {\n'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","KeyPair","ec","options","pub","priv","_importPrivate","privEnc","_importPublic","pubEnc","BN","assert","utils","fromPublic","KeyPair.fromPublic","enc","fromPrivate","KeyPair.fromPrivate","prototype","validate","KeyPair.prototype.validate","getPublic","isInfinity","result","reason","mul","curve","n","KeyPair.prototype.getPublic","compact","g","encode","getPrivate","KeyPair.prototype.getPrivate","toString","KeyPair.prototype._importPrivate","key","umod","KeyPair.prototype._importPublic","x","y","type","point","decodePoint","derive","KeyPair.prototype.derive","getX","sign","KeyPair.prototype.sign","msg","verify","KeyPair.prototype.verify","signature","inspect","KeyPair.prototype.inspect"]
}
