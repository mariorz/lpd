{
"version":3,
"file":"module$node_modules$qrcode$lib$core$numeric_data.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,gDAAf,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7GC,QAASA,YAAY,CAACC,IAAD,CAAO,CAC1B,IAAA,CAAKC,IAAL,CAAYC,IAAZ,CAAiBC,OACjB,KAAA,CAAKH,IAAL,CAAYA,IAAA,CAAKI,QAAL,EAFc,CAF5B,IAAIF,KAAON,OAAA,CAAQ,0CAAR,CAOXG,YAAA,CAAYM,aAAZ,CAA4BC,QAAuB,CAACC,MAAD,CAAS,CAC1D,MAAO,GAAP,CAAYC,IAAA,CAAKC,KAAL,CAAWF,MAAX,CAAoB,CAApB,CAAZ,EAAuCA,MAAD,CAAU,CAAV,CAAiBA,MAAjB,CAA0B,CAA1B,CAA+B,CAA/B,CAAmC,CAAnC,CAAwC,CAA9E,CAD0D,CAI5DR,YAAA,CAAYW,SAAZ,CAAsBC,SAAtB,CAAkCC,QAAmB,EAAG,CACtD,MAAO,KAAP,CAAYZ,IAAZ,CAAiBO,MADqC,CAIxDR,YAAA,CAAYW,SAAZ,CAAsBL,aAAtB,CAAsCQ,QAAuB,EAAG,CAC9D,MAAOd,YAAA,CAAYM,aAAZ,CAA0B,IAA1B,CAA+BL,IAA/B,CAAoCO,MAApC,CADuD,CAIhER;WAAA,CAAYW,SAAZ,CAAsBI,KAAtB,CAA8BC,QAAe,CAACC,SAAD,CAAY,CAAA,IACnDC,CAIJ,KAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB,CAAhB,EAAqB,IAArB,CAA0BjB,IAA1B,CAA+BO,MAA/B,CAAuCU,CAAvC,EAA4C,CAA5C,CAA+C,CAC7C,IAAAC,MAAQ,IAAA,CAAKlB,IAAL,CAAUmB,MAAV,CAAiBF,CAAjB,CAAoB,CAApB,CACRG,MAAA,CAAQC,QAAA,CAASH,KAAT,CAAgB,EAAhB,CAERF,UAAA,CAAUM,GAAV,CAAcF,KAAd,CAAqB,EAArB,CAJ6C,CAS/C,IAAIG,aAAe,IAAfA,CAAoBvB,IAApBuB,CAAyBhB,MAAzBgB,CAAkCN,CACnB,EAAnB,CAAIM,YAAJ,GACEL,KAGA,CAHQ,IAAA,CAAKlB,IAAL,CAAUmB,MAAV,CAAiBF,CAAjB,CAGR,CAFAG,KAEA,CAFQC,QAAA,CAASH,KAAT,CAAgB,EAAhB,CAER,CAAAF,SAAA,CAAUM,GAAV,CAAcF,KAAd,CAAoC,CAApC,CAAqBG,YAArB,CAAwC,CAAxC,CAJF,CAfuD,CAuBzD1B,OAAA,CAAOC,OAAP,CAAiBC,WA3C4F;",
"sources":["node_modules/qrcode/lib/core/numeric-data.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$qrcode$lib$core$numeric_data\"] = function(global,require,module,exports) {\nvar Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  var i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  var remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n\n};"],
"names":["shadow$provide","global","require","module","exports","NumericData","data","mode","Mode","NUMERIC","toString","getBitsLength","NumericData.getBitsLength","length","Math","floor","prototype","getLength","NumericData.prototype.getLength","NumericData.prototype.getBitsLength","write","NumericData.prototype.write","bitBuffer","i","group","substr","value","parseInt","put","remainingNum"]
}
