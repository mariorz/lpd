{"version":3,"sources":["revert/utils.cljs"],"mappings":"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","names":["revert.utils/weth-address","revert.utils/_max-bn","a","b","js/module$node_modules$bignumber_DOT_js$bignumber","revert.utils/max-bn","numbers","cljs.core.reduce","revert.utils/bn?","n","revert.utils/bn","revert.utils/fu","u","units","bignumber.core/pow","bignumber.core//","revert.utils/pu","bign","bignumber.core/*","revert.utils/ethfu","js/module$node_modules$ethers$lib$index.utils","revert.utils/ethpu","revert.utils/ebn->bn","revert.utils/ts->datetime","ts","js/Date","revert.utils/datetime->ts","dt","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","revert.utils/update-values","seq163309","G__163310","cljs.core/first","cljs.core/next","G__163311","self__4723__auto__","m","f","args","p__163312","vec__163313","cljs.core.nth","r","k","v","cljs.core.assoc","cljs.core.apply","revert.utils/make-unix-ts","js/Math","js/Date.now","revert.utils/seconds->days","seconds","revert.utils/set-query-string!","url","js/window.location.protocol","js/window.location.host","js/window.location.pathname","url'","js/window.history","cljs.core/clj->js","revert.utils/set-hash!","loc","js/window.location","revert.utils/str->int","s","cljs.reader.read_string","revert.utils/deep-merge","seq163317","self__4724__auto__","cljs.core/seq","maps","xs","p1__163316#","cljs.core/some","cljs.core/map?","cljs.core/record?","cljs.core/merge-with","cljs.core/last","revert.utils/dejs","form","clojure.walk/postwalk","x","revert.utils/price-change","new-price","old-price","bignumber.core/-","p__163318","p__163319","vec__163320","vec__163323","revert.utils/price-divergence","token0-init","token0-current","token1-init","token1-current","price0-change","price1-change","bignumber.core/abs"],"sourcesContent":["(ns revert.utils\n  (:require [cljs.reader :as reader]\n            [ethers :as ethers]\n            [bignumber.core]\n            [goog.string :as string]\n            [goog.uri.utils :as uri]\n            [bignumber.js :as BigNumber]\n            [bignumber.core :as bn]))\n\n\n\n(def weth-address \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\")\n\n\n(defn _max-bn\n  [a b]\n  (.max BigNumber a b))\n\n(defn max-bn\n  [numbers]\n  (reduce _max-bn numbers))\n\n(defn bn?\n  [n]\n  (.isBigNumber BigNumber n))\n\n\n\n(defn bn [n] (BigNumber. (str n)))\n\n(defn fu\n  [n u]\n  (let [units (bignumber.core/pow (BigNumber. 10) u)]\n    (. (bignumber.core// n units) toString)))\n\n(defn pu\n  [n u]\n  (let [units (bignumber.core/pow (BigNumber. 10) u)\n        bign (BigNumber. n)]\n    (bignumber.core/* bign units)))\n\n(defn ethfu\n  [n u]\n  (. ethers/utils formatUnits n u))\n\n(defn ethpu\n  [n u]\n  (. ethers/utils parseUnits n u))\n\n\n(defn ebn->bn\n  [n u]\n  (bn (ethfu n u)))\n\n\n(defn ts->datetime\n  [ts]\n  (js/Date. (* 1000 ts)))\n\n(defn datetime->ts\n  [dt]\n  (/ (.getTime dt) 1000))\n\n\n\n(defn update-values [m f & args]\n  (reduce (fn [r [k v]] (assoc r k (apply f v args))) {} m))\n\n\n\n(defn make-unix-ts\n  []\n  (. js/Math floor (/ (js/Date.now) 1000)))\n\n(defn seconds->days\n  [seconds]\n  (/ seconds (* 60 60 24)))\n\n\n(defn set-query-string!\n  [v]\n  (let [url (str js/window.location.protocol\n                 \"//\"\n                 js/window.location.host\n                 js/window.location.pathname\n                 )\n        url' (str url \"?\" v)]\n    (. js/window.history pushState (clj->js {:path url'}) nil url')))\n\n\n\n(defn set-hash! [loc]\n  (set! (.-hash js/window.location) loc))\n\n\n(defn str->int\n  [s]\n  (reader/read-string s))\n\n;;https://dnaeon.github.io/recursively-merging-maps-in-clojure/\n(defn deep-merge\n  \"Recursively merges maps.\"\n  [& maps]\n  (letfn [(m [& xs]\n            (if (some #(and (map? %) (not (record? %))) xs)\n              (apply merge-with m xs)\n              (last xs)))]\n    (reduce m maps)))\n\n\n(defn dejs\n  [form]\n  (clojure.walk/postwalk\n   (fn [x] (if (bn? x) (str x) x)) form))\n\n(defn price-change\n  [new-price old-price]\n  (bn/* (bn/- (bn// new-price old-price) 1)\n        100))\n\n\n(defn price-divergence\n  \"Returns the difference between percentace change\n  in prices for token0 and token1\"\n  [[token0-init token0-current]\n   [token1-init token1-current]]\n  (let [price0-change (price-change token0-current token0-init)\n        price1-change (price-change token1-current token1-init)]\n    (bn/abs (bn/- price0-change price1-change))))\n\n\n"]}