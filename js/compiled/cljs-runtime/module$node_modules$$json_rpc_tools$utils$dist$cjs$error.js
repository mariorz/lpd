shadow$provide.module$node_modules$$json_rpc_tools$utils$dist$cjs$error=function(global,require,module,exports){function isServerErrorCode(code){return code<=constants_1.SERVER_ERROR_CODE_RANGE[0]&&code>=constants_1.SERVER_ERROR_CODE_RANGE[1]}function isReservedErrorCode(code){return constants_1.RESERVED_ERROR_CODES.includes(code)}function isValidErrorCode(code){return isServerErrorCode(code)||isReservedErrorCode(code)}function getErrorByCode(code){const match=Object.values(constants_1.STANDARD_ERROR_MAP).find(e=>
e.code===code);return match?match:constants_1.STANDARD_ERROR_MAP[constants_1.INTERNAL_ERROR]}Object.defineProperty(exports,"__esModule",{value:!0});exports.validateJsonRpcError=exports.getErrorByCode=exports.getError=exports.isValidErrorCode=exports.isReservedErrorCode=exports.isServerErrorCode=void 0;const constants_1=require("module$node_modules$$json_rpc_tools$utils$dist$cjs$constants");exports.isServerErrorCode=isServerErrorCode;exports.isReservedErrorCode=isReservedErrorCode;exports.isValidErrorCode=
isValidErrorCode;exports.getError=function(type){return Object.keys(constants_1.STANDARD_ERROR_MAP).includes(type)?constants_1.STANDARD_ERROR_MAP[type]:constants_1.STANDARD_ERROR_MAP[constants_1.INTERNAL_ERROR]};exports.getErrorByCode=getErrorByCode;exports.validateJsonRpcError=function(response){if("undefined"===typeof response.error.code)return{valid:!1,error:"Missing code for JSON-RPC error"};if("undefined"===typeof response.error.message)return{valid:!1,error:"Missing message for JSON-RPC error"};
if(!isValidErrorCode(response.error.code))return{valid:!1,error:`Invalid error code for JSON-RPC error code: ${response.error.code}`};if(isReservedErrorCode(response.error.code)){const error=getErrorByCode(response.error.code);if(error.message!==constants_1.STANDARD_ERROR_MAP[constants_1.INTERNAL_ERROR].message&&response.error.message===error.message)return{valid:!1,error:`Invalid error message for JSON-RPC error code: ${response.error.code}`}}return{valid:!0}}}
//# sourceMappingURL=module$node_modules$$json_rpc_tools$utils$dist$cjs$error.js.map
