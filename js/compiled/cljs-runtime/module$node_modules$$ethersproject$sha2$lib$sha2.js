shadow$provide.module$node_modules$$ethersproject$sha2$lib$sha2=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.computeHmac=exports.sha512=exports.sha256=exports.ripemd160=void 0;var crypto_1=require("module$node_modules$crypto_browserify$index"),bytes_1=require("module$node_modules$$ethersproject$bytes$lib$index"),types_1=require("module$node_modules$$ethersproject$sha2$lib$types"),
logger_1=require("module$node_modules$$ethersproject$logger$lib$index");global=require("module$node_modules$$ethersproject$sha2$lib$_version");var logger=new logger_1.Logger(global.version);exports.ripemd160=function(data){return"0x"+crypto_1.createHash("ripemd160").update(Buffer.from(bytes_1.arrayify(data))).digest("hex")};exports.sha256=function(data){return"0x"+crypto_1.createHash("sha256").update(Buffer.from(bytes_1.arrayify(data))).digest("hex")};exports.sha512=function(data){return"0x"+crypto_1.createHash("sha512").update(Buffer.from(bytes_1.arrayify(data))).digest("hex")};
exports.computeHmac=function(algorithm,key,data){types_1.SupportedAlgorithm[algorithm]||logger.throwError("unsupported algorithm - "+algorithm,logger_1.Logger.errors.UNSUPPORTED_OPERATION,{operation:"computeHmac",algorithm});return"0x"+crypto_1.createHmac(algorithm,Buffer.from(bytes_1.arrayify(key))).update(Buffer.from(bytes_1.arrayify(data))).digest("hex")}}
//# sourceMappingURL=module$node_modules$$ethersproject$sha2$lib$sha2.js.map
