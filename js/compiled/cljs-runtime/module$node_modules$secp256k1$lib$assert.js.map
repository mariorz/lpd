{
"version":3,
"file":"module$node_modules$secp256k1$lib$assert.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,wCAAf,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACrG,IAAIC,OAASH,OAAA,CAAQ,kCAAR,CAATG,CAA2BA,MAC/B,aACA,KAAIC,SAAWC,MAAXD,CAAkBE,SAAlBF,CAA4BA,QAGhCF,QAAA,CAAQK,OAAR,CAAkBC,QAAS,CAACC,KAAD,CAAQC,OAAR,CAAiB,CAC1C,GAAI,CAACC,KAAA,CAAMJ,OAAN,CAAcE,KAAd,CAAL,CAA2B,KAAMG,UAAA,CAAUF,OAAV,CAAN,CADe,CAI5CR,QAAA,CAAQW,SAAR,CAAoBC,QAAS,CAACL,KAAD,CAAQC,OAAR,CAAiB,CAC5C,GAA6B,kBAA7B,GAAIN,QAAA,CAASW,IAAT,CAAcN,KAAd,CAAJ,CAAiD,KAAMG,UAAA,CAAUF,OAAV,CAAN,CADL,CAI9CR,QAAA,CAAQc,QAAR,CAAmBC,QAAS,CAACR,KAAD,CAAQC,OAAR,CAAiB,CAC3C,GAAI,CAACP,MAAA,CAAOa,QAAP,CAAgBP,KAAhB,CAAL,CAA6B,KAAMG,UAAA,CAAUF,OAAV,CAAN;AADc,CAI7CR,QAAA,CAAQgB,UAAR,CAAqBC,QAAS,CAACV,KAAD,CAAQC,OAAR,CAAiB,CAC7C,GAA6B,mBAA7B,GAAIN,QAAA,CAASW,IAAT,CAAcN,KAAd,CAAJ,CAAkD,KAAMG,UAAA,CAAUF,OAAV,CAAN,CADL,CAI/CR,QAAA,CAAQkB,QAAR,CAAmBC,QAAS,CAACZ,KAAD,CAAQC,OAAR,CAAiB,CAC3C,GAA6B,iBAA7B,GAAIN,QAAA,CAASW,IAAT,CAAcN,KAAd,CAAJ,CAAgD,KAAMG,UAAA,CAAUF,OAAV,CAAN,CADL,CAI7CR,QAAA,CAAQoB,QAAR,CAAmBC,QAAS,CAACd,KAAD,CAAQC,OAAR,CAAiB,CAC3C,GAA6B,iBAA7B,GAAIN,QAAA,CAASW,IAAT,CAAcN,KAAd,CAAJ,CAAgD,KAAMG,UAAA,CAAUF,OAAV,CAAN,CADL,CAK7CR,QAAA,CAAQsB,cAAR,CAAyBC,QAAS,CAACC,MAAD,CAASC,MAAT,CAAiBjB,OAAjB,CAA0B,CAC1D,GAAIgB,MAAJ,CAAWC,MAAX,GAAsBA,MAAtB,CAA8B,KAAMC,WAAA,CAAWlB,OAAX,CAAN,CAD4B,CAI5DR,QAAA,CAAQ2B,eAAR,CAA0BC,QAAS,CAACJ,MAAD,CAASK,OAAT,CAAkBC,OAAlB;AAA2BtB,OAA3B,CAAoC,CACrE,GAAIgB,MAAJ,CAAWC,MAAX,GAAsBI,OAAtB,EAAiCL,MAAjC,CAAwCC,MAAxC,GAAmDK,OAAnD,CAA4D,KAAMJ,WAAA,CAAWlB,OAAX,CAAN,CADS,CAIvER,QAAA,CAAQ+B,cAAR,CAAyBC,QAAS,CAACzB,KAAD,CAAQC,OAAR,CAAiB,CACjD,GAAqB,CAArB,GAAID,KAAJ,CAAUkB,MAAV,CAAwB,KAAMC,WAAA,CAAWlB,OAAX,CAAN,CADyB,CAInDR,QAAA,CAAQiC,kBAAR,CAA6BC,QAAS,CAACC,MAAD,CAASC,CAAT,CAAYC,CAAZ,CAAe7B,OAAf,CAAwB,CAC5D,GAAI2B,MAAJ,EAAcC,CAAd,EAAmBD,MAAnB,EAA6BE,CAA7B,CAAgC,KAAMX,WAAA,CAAWlB,OAAX,CAAN,CAD4B,CA3CuC;",
"sources":["node_modules/secp256k1/lib/assert.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$secp256k1$lib$assert\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict'\nvar toString = Object.prototype.toString\n\n// TypeError\nexports.isArray = function (value, message) {\n  if (!Array.isArray(value)) throw TypeError(message)\n}\n\nexports.isBoolean = function (value, message) {\n  if (toString.call(value) !== '[object Boolean]') throw TypeError(message)\n}\n\nexports.isBuffer = function (value, message) {\n  if (!Buffer.isBuffer(value)) throw TypeError(message)\n}\n\nexports.isFunction = function (value, message) {\n  if (toString.call(value) !== '[object Function]') throw TypeError(message)\n}\n\nexports.isNumber = function (value, message) {\n  if (toString.call(value) !== '[object Number]') throw TypeError(message)\n}\n\nexports.isObject = function (value, message) {\n  if (toString.call(value) !== '[object Object]') throw TypeError(message)\n}\n\n// RangeError\nexports.isBufferLength = function (buffer, length, message) {\n  if (buffer.length !== length) throw RangeError(message)\n}\n\nexports.isBufferLength2 = function (buffer, length1, length2, message) {\n  if (buffer.length !== length1 && buffer.length !== length2) throw RangeError(message)\n}\n\nexports.isLengthGTZero = function (value, message) {\n  if (value.length === 0) throw RangeError(message)\n}\n\nexports.isNumberInInterval = function (number, x, y, message) {\n  if (number <= x || number >= y) throw RangeError(message)\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","toString","Object","prototype","isArray","exports.isArray","value","message","Array","TypeError","isBoolean","exports.isBoolean","call","isBuffer","exports.isBuffer","isFunction","exports.isFunction","isNumber","exports.isNumber","isObject","exports.isObject","isBufferLength","exports.isBufferLength","buffer","length","RangeError","isBufferLength2","exports.isBufferLength2","length1","length2","isLengthGTZero","exports.isLengthGTZero","isNumberInInterval","exports.isNumberInInterval","number","x","y"]
}
