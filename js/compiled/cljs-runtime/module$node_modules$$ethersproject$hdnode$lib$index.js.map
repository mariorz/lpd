{
"version":3,
"file":"module$node_modules$$ethersproject$hdnode$lib$index.js",
"lineCount":19,
"mappings":"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",
"sources":["node_modules/@ethersproject/hdnode/lib/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$ethersproject$hdnode$lib$index\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.mnemonicToSeed = exports.HDNode = exports.defaultPath = void 0;\nvar basex_1 = require(\"@ethersproject/basex\");\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\nvar strings_1 = require(\"@ethersproject/strings\");\nvar pbkdf2_1 = require(\"@ethersproject/pbkdf2\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar signing_key_1 = require(\"@ethersproject/signing-key\");\nvar sha2_1 = require(\"@ethersproject/sha2\");\nvar transactions_1 = require(\"@ethersproject/transactions\");\nvar wordlists_1 = require(\"@ethersproject/wordlists\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar N = bignumber_1.BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nvar MasterSecret = strings_1.toUtf8Bytes(\"Bitcoin seed\");\nvar HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return bytes_1.hexZeroPad(bytes_1.hexlify(value), 32);\n}\nfunction base58check(data) {\n    return basex_1.Base58.encode(bytes_1.concat([data, bytes_1.hexDataSlice(sha2_1.sha256(sha2_1.sha256(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists_1.wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        var words = wordlists_1.wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nvar _constructorGuard = {};\nexports.defaultPath = \"m/44'/60'/0'/0/0\";\n;\nvar HDNode = /** @class */ (function () {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    function HDNode(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        var _newTarget = this.constructor;\n        logger.checkNew(_newTarget, HDNode);\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            var signingKey = new signing_key_1.SigningKey(privateKey);\n            properties_1.defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            properties_1.defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            properties_1.defineReadOnly(this, \"privateKey\", null);\n            properties_1.defineReadOnly(this, \"publicKey\", bytes_1.hexlify(publicKey));\n        }\n        properties_1.defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        properties_1.defineReadOnly(this, \"fingerprint\", bytes_1.hexDataSlice(sha2_1.ripemd160(sha2_1.sha256(this.publicKey)), 0, 4));\n        properties_1.defineReadOnly(this, \"address\", transactions_1.computeAddress(this.publicKey));\n        properties_1.defineReadOnly(this, \"chainCode\", chainCode);\n        properties_1.defineReadOnly(this, \"index\", index);\n        properties_1.defineReadOnly(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            properties_1.defineReadOnly(this, \"mnemonic\", null);\n            properties_1.defineReadOnly(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            properties_1.defineReadOnly(this, \"mnemonic\", null);\n            properties_1.defineReadOnly(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            properties_1.defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            properties_1.defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    Object.defineProperty(HDNode.prototype, \"extendedKey\", {\n        get: function () {\n            // We only support the mainnet values for now, but if anyone needs\n            // testnet values, let me know. I believe current senitment is that\n            // we should always use mainnet, and use BIP-44 to derive the network\n            //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n            //   - Testnet: public=0x043587CF, private=0x04358394\n            if (this.depth >= 256) {\n                throw new Error(\"Depth too large!\");\n            }\n            return base58check(bytes_1.concat([\n                ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n                bytes_1.hexlify(this.depth),\n                this.parentFingerprint,\n                bytes_1.hexZeroPad(bytes_1.hexlify(this.index), 4),\n                this.chainCode,\n                ((this.privateKey != null) ? bytes_1.concat([\"0x00\", this.privateKey]) : this.publicKey),\n            ]));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HDNode.prototype.neuter = function () {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    };\n    HDNode.prototype._derive = function (index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        var path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        var data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(bytes_1.arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(bytes_1.arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (var i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        var I = bytes_1.arrayify(sha2_1.computeHmac(sha2_1.SupportedAlgorithm.sha512, this.chainCode, data));\n        var IL = I.slice(0, 32);\n        var IR = I.slice(32);\n        // The private key\n        var ki = null;\n        // The public key\n        var Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(bignumber_1.BigNumber.from(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            var ek = new signing_key_1.SigningKey(bytes_1.hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        var mnemonicOrPath = path;\n        var srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    };\n    HDNode.prototype.derivePath = function (path) {\n        var components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        var result = this;\n        for (var i = 0; i < components.length; i++) {\n            var component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                var index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                var index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    };\n    HDNode._fromSeed = function (seed, mnemonic) {\n        var seedArray = bytes_1.arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        var I = bytes_1.arrayify(sha2_1.computeHmac(sha2_1.SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    };\n    HDNode.fromMnemonic = function (mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    };\n    HDNode.fromSeed = function (seed) {\n        return HDNode._fromSeed(seed, null);\n    };\n    HDNode.fromExtendedKey = function (extendedKey) {\n        var bytes = basex_1.Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        var depth = bytes[4];\n        var parentFingerprint = bytes_1.hexlify(bytes.slice(5, 9));\n        var index = parseInt(bytes_1.hexlify(bytes.slice(9, 13)).substring(2), 16);\n        var chainCode = bytes_1.hexlify(bytes.slice(13, 45));\n        var key = bytes.slice(45, 78);\n        switch (bytes_1.hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, bytes_1.hexlify(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNode(_constructorGuard, bytes_1.hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    };\n    return HDNode;\n}());\nexports.HDNode = HDNode;\nfunction mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    var salt = strings_1.toUtf8Bytes(\"mnemonic\" + password, strings_1.UnicodeNormalizationForm.NFKD);\n    return pbkdf2_1.pbkdf2(strings_1.toUtf8Bytes(mnemonic, strings_1.UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\nexports.mnemonicToSeed = mnemonicToSeed;\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    logger.checkNormalize();\n    var words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    var entropy = bytes_1.arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    var offset = 0;\n    for (var i = 0; i < words.length; i++) {\n        var index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (var bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    var entropyBits = 32 * words.length / 3;\n    var checksumBits = words.length / 3;\n    var checksumMask = getUpperMask(checksumBits);\n    var checksum = bytes_1.arrayify(sha2_1.sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return bytes_1.hexlify(entropy.slice(0, entropyBits / 8));\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nfunction entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = bytes_1.arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    var indices = [0];\n    var remainingBits = 11;\n    for (var i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    var checksumBits = entropy.length / 4;\n    var checksum = bytes_1.arrayify(sha2_1.sha256(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map(function (index) { return wordlist.getWord(index); }));\n}\nexports.entropyToMnemonic = entropyToMnemonic;\nfunction isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexports.isValidMnemonic = isValidMnemonic;\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","bytes32","value","bytes_1","hexZeroPad","hexlify","base58check","data","basex_1","Base58","encode","concat","hexDataSlice","sha2_1","sha256","getWordlist","wordlist","wordlists_1","wordlists","words","logger","throwArgumentError","mnemonicToSeed","mnemonic","password","salt","strings_1","toUtf8Bytes","UnicodeNormalizationForm","NFKD","pbkdf2_1","pbkdf2","mnemonicToEntropy","checkNormalize","split","length","Error","entropy","arrayify","Uint8Array","Math","ceil","offset","i","index","getWordIndex","normalize","bit","entropyBits","checksumBits","checksumMask","slice","entropyToMnemonic","indices","remainingBits","push","checksum","join","map","getWord","Object","defineProperty","isValidMnemonic","HDNode","defaultPath","bignumber_1","properties_1","signing_key_1","transactions_1","logger_1","_version_1","Logger","version","N","BigNumber","from","MasterSecret","_constructorGuard","constructorGuard","privateKey","publicKey","parentFingerprint","chainCode","depth","mnemonicOrPath","checkNew","constructor","signingKey","SigningKey","defineReadOnly","compressedPublicKey","ripemd160","computeAddress","path","prototype","get","enumerable","configurable","neuter","HDNode.prototype.neuter","_derive","HDNode.prototype._derive","String","HardenedBit","set","I","computeHmac","SupportedAlgorithm","sha512","IL","IR","Ki","ki","add","mod","ek","_addPoint","srcMnemonic","freeze","phrase","locale","fingerprint","derivePath","HDNode.prototype.derivePath","components","shift","result","component","match","parseInt","substring","_fromSeed","HDNode._fromSeed","seed","seedArray","fromMnemonic","HDNode.fromMnemonic","fromSeed","HDNode.fromSeed","fromExtendedKey","HDNode.fromExtendedKey","extendedKey","bytes","decode","key","error"]
}
