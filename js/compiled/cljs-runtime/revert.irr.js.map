{"version":3,"sources":["revert/irr.cljs"],"mappings":";AAIA,AAAA,AAAMA,AAAOC,AAAEC;AAAf,AAAmB,AAAKC;AAAL,AAAQ,AAAI,AAAG,AAAAC,AAAG,AAAGD,AAAED;AAAR,AAAA,AAAAE,AAAAA,AAACH,AAAAA,AAAAA;AAAY,AAACA,AAAAA,AAAAA,AAAEE,AAAAA,AAAKD;;;AACvD,AAAA,AAAMG,AAAeJ,AAAEC;AAAvB,AAA2B,AAAKI;AAAL,AAAY,AAAGA,AAAM,AAAG,AAACL,AAAAA,AAAAA,AAAEK,AAAAA,AAAO,AAAC,AAACN,AAAMC,AAAEC,AAAII;;;AAC3E,AAAA,AAAMC,AAAkBN,AAAEO;AAA1B,AAAqC,AAAKF;AAAL,AAAY,AAAG,AAACG,AAAS,AAACR,AAAAA,AAAAA,AAAEK,AAAAA,AAAQE;;;AACzE,AAAA,AAAME,AAAmBP,AAAEQ,AAAQC;AAAnC,AAA0C,AAAI,AAACA,AAAAA,AAAAA,AAAMT,AAAAA;AAAGA;;AAAE,AAAAU,AAAmB,AAACF,AAAAA,AAAAA,AAAQR,AAAAA;AAA5BW,AAA+BH;AAA/BI,AAAuCH;AAAvC,AAAA,AAAAC,AAAAC,AAAAC,AAAAF,AAAAC,AAAAC,AAACL,AAAAA,AAAAA;;;AAC3D,AAAA,AAAMM,AAAOf,AAAEK,AAAMJ,AAAGM;AAAxB,AAAmC,AAACE,AAAkBJ,AAAM,AAACD,AAAcJ,AAAEC,AAAI,AAACK,AAAiBN,AAAEO;;AACrG,AAAA,AAAA,AAAAS,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD;AAAN,AAAA;;;AAAA,AAAA,AAAA,AAAMA,AAEFE;AAFJ,AAEO,AAAA,AAAG,AAAA,AAAKA;;;AAFf,AAAA,AAAA,AAAMF,AAGFE,AAAEC;AAHN,AAGS,AAACC,AAAS,AAACC,AAAGH,AAAGC;;;AAH1B,AAAA,AAAA,AAAMH,AAIFE,AAAEC,AAAEG;AAJR,AAIW,AAAGA,AAAE,AAACD,AAAGH,AAAEC;;;AAJtB,AAAA,AAAA,AAAMH;;AAAN,AAKA,AAAA,AAAMO,AAAKL,AAAEC,AAAEK;AAAf,AAAmB,AAACC,AAAOC,AAAE,AAACC,AAAIX,AAAGE,AAAEC,AAAEK;;AAEzC,AAAA,AAAMI,AAAKT,AAAEK,AAAGrB;AAAhB,AAAuB,AAACU,AAAM,AAAKK;AAAL,AAAQ,AAACK,AAAI,AAACM,AAAOX,AAAGC,AAAEK;AAAjC,AAAA,AAAsCrB","names":["revert.irr/deriv","f","dx","x","G__112354","revert.irr/make-improver","guess","revert.irr/make-good-enough","tolerance","Math/abs","revert.irr/iterative-improve","improve","good?","G__112355","G__112356","G__112357","revert.irr/solve","var_args","G__112359","revert.irr/pv","js/Error","i","t","Math/pow","revert.irr.pv","c","revert.irr/npv","cf","cljs.core.reduce","cljs.core/+","cljs.core.map","revert.irr/irr","cljs.core.repeat"],"sourcesContent":["(ns revert.irr)\n\n\n\n(defn deriv [f dx] (fn [x] (/  (- (f (+ x dx)) (f x) ) dx)))\n(defn make-improver [f dx] (fn [guess] (- guess (/ (f guess) ((deriv f dx) guess)))))\n(defn make-good-enough [f tolerance] (fn [guess] (< (Math/abs (f guess)) tolerance)))\n(defn iterative-improve [x improve good?] (if (good? x) x (iterative-improve (improve x) improve good?)))\n(defn solve [f guess dx tolerance] (iterative-improve guess (make-improver f dx) (make-good-enough f tolerance)))\n(defn pv \n  ([] 0)\n  ([i] (/ (+ 1 i)))\n  ([i t] (Math/pow (pv i) t))\n  ([i t c] (* c (pv i t))))\n(defn npv [i t cf] (reduce + (map pv i t cf)))\n\n(defn irr [t cf guess] (solve (fn [i] (npv (repeat i) t cf)) guess 0.000001 0.00000001))\n"]}