shadow$provide.module$node_modules$$walletconnect$iso_crypto$dist$cjs$index=function(global,require,module,exports){function generateKey(length){return tslib_1.__awaiter(this,void 0,void 0,function*(){const bytes=isoCrypto.randomBytes((length||256)/8);return utils_1.convertBufferToArrayBuffer(encUtils.arrayToBuffer(bytes))})}function verifyHmac(payload,key){return tslib_1.__awaiter(this,void 0,void 0,function*(){var cipherText=encUtils.hexToArray(payload.data);const iv=encUtils.hexToArray(payload.iv);
var hmac=encUtils.hexToArray(payload.hmac);hmac=encUtils.arrayToHex(hmac,!1);cipherText=encUtils.concatArrays(cipherText,iv);cipherText=yield isoCrypto.hmacSha256Sign(key,cipherText);cipherText=encUtils.arrayToHex(cipherText,!1);return encUtils.removeHexPrefix(hmac)===encUtils.removeHexPrefix(cipherText)?!0:!1})}Object.defineProperty(exports,"__esModule",{value:!0});exports.decrypt=exports.encrypt=exports.verifyHmac=exports.generateKey=void 0;const tslib_1=require("module$node_modules$tslib$tslib"),
isoCrypto=tslib_1.__importStar(require("module$node_modules$$pedrouid$iso_crypto$dist$cjs$index")),encUtils=tslib_1.__importStar(require("module$node_modules$enc_utils$dist$cjs$index")),utils_1=require("module$node_modules$$walletconnect$utils$dist$cjs$index");exports.generateKey=generateKey;exports.verifyHmac=verifyHmac;exports.encrypt=function(data,key,providedIv){return tslib_1.__awaiter(this,void 0,void 0,function*(){var _key=encUtils.bufferToArray(utils_1.convertArrayBufferToBuffer(key)),ivArrayBuffer=
providedIv||(yield generateKey(128)),iv=encUtils.bufferToArray(utils_1.convertArrayBufferToBuffer(ivArrayBuffer));ivArrayBuffer=encUtils.arrayToHex(iv,!1);var contentString=JSON.stringify(data);contentString=encUtils.utf8ToArray(contentString);const cipherText=yield isoCrypto.aesCbcEncrypt(iv,_key,contentString);contentString=encUtils.arrayToHex(cipherText,!1);iv=encUtils.concatArrays(cipherText,iv);_key=yield isoCrypto.hmacSha256Sign(_key,iv);_key=encUtils.arrayToHex(_key,!1);return{data:contentString,
hmac:_key,iv:ivArrayBuffer}})};exports.decrypt=function(payload,key){return tslib_1.__awaiter(this,void 0,void 0,function*(){var _key=encUtils.bufferToArray(utils_1.convertArrayBufferToBuffer(key));if(!_key)throw Error("Missing key: required for decryption");if(!(yield verifyHmac(payload,_key)))return null;const cipherText=encUtils.hexToArray(payload.data),iv=encUtils.hexToArray(payload.iv);_key=yield isoCrypto.aesCbcDecrypt(iv,_key,cipherText);_key=encUtils.arrayToUtf8(_key);let data;try{data=JSON.parse(_key)}catch(error){return null}return data})}}
//# sourceMappingURL=module$node_modules$$walletconnect$iso_crypto$dist$cjs$index.js.map
