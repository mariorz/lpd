{
"version":3,
"file":"module$node_modules$is_typedarray$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,uCAAf,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkBpGC,QAASA,aAAY,CAACC,GAAD,CAAM,CACzB,MACKC,mBAAA,CAAmBD,GAAnB,CADL,EAEKE,iBAAA,CAAkBF,GAAlB,CAHoB,CAO3BC,QAASA,mBAAkB,CAACD,GAAD,CAAM,CAC/B,MACKA,IADL,WACoBG,UADpB,EAEKH,GAFL,WAEoBI,WAFpB,EAGKJ,GAHL,WAGoBK,WAHpB,EAIKL,GAJL,WAIoBM,WAJpB,EAKKN,GALL,WAKoBO,kBALpB,EAMKP,GANL,WAMoBQ,YANpB,EAOKR,GAPL,WAOoBS,YAPpB,EAQKT,GARL,WAQoBU,aARpB,EASKV,GATL,WASoBW,aAVW,CAcjCT,QAASA,kBAAiB,CAACF,GAAD,CAAM,CAC9B,MAAOY,MAAA,CAAMC,QAAA,CAASC,IAAT,CAAcd,GAAd,CAAN,CADuB;AAtChCH,MAAA,CAAOC,OAAP,CAAsBC,YACtBA,aAAA,CAAagB,MAAb,CAAsBd,kBACtBF,aAAA,CAAaiB,KAAb,CAAsBd,iBAEtB,KAAIW,SAAWI,MAAXJ,CAAkBK,SAAlBL,CAA4BA,QAAhC,CACID,MAAQ,CACR,qBAAsB,CAAA,CADd,CAER,sBAAuB,CAAA,CAFf,CAGR,sBAAuB,CAAA,CAHf,CAIR,sBAAuB,CAAA,CAJf,CAKR,6BAA8B,CAAA,CALtB,CAMR,uBAAwB,CAAA,CANhB,CAOR,uBAAwB,CAAA,CAPhB,CAQR,wBAAyB,CAAA,CARjB,CASR,wBAAyB,CAAA,CATjB,CANwF;",
"sources":["node_modules/is-typedarray/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$is_typedarray$index\"] = function(global,require,module,exports) {\nmodule.exports      = isTypedArray\nisTypedArray.strict = isStrictTypedArray\nisTypedArray.loose  = isLooseTypedArray\n\nvar toString = Object.prototype.toString\nvar names = {\n    '[object Int8Array]': true\n  , '[object Int16Array]': true\n  , '[object Int32Array]': true\n  , '[object Uint8Array]': true\n  , '[object Uint8ClampedArray]': true\n  , '[object Uint16Array]': true\n  , '[object Uint32Array]': true\n  , '[object Float32Array]': true\n  , '[object Float64Array]': true\n}\n\nfunction isTypedArray(arr) {\n  return (\n       isStrictTypedArray(arr)\n    || isLooseTypedArray(arr)\n  )\n}\n\nfunction isStrictTypedArray(arr) {\n  return (\n       arr instanceof Int8Array\n    || arr instanceof Int16Array\n    || arr instanceof Int32Array\n    || arr instanceof Uint8Array\n    || arr instanceof Uint8ClampedArray\n    || arr instanceof Uint16Array\n    || arr instanceof Uint32Array\n    || arr instanceof Float32Array\n    || arr instanceof Float64Array\n  )\n}\n\nfunction isLooseTypedArray(arr) {\n  return names[toString.call(arr)]\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","isTypedArray","arr","isStrictTypedArray","isLooseTypedArray","Int8Array","Int16Array","Int32Array","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","Float32Array","Float64Array","names","toString","call","strict","loose","Object","prototype"]
}
