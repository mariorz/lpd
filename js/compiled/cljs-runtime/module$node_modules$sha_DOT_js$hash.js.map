{
"version":3,
"file":"module$node_modules$sha_DOT_js$hash.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/sha_DOT_js/hash.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$sha_DOT_js$hash\"] = function(global,require,module,exports) {\nvar Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n\n};"],
"names":["shadow$provide","global","require","module","exports","Hash","blockSize","finalSize","_block","Buffer","alloc","_finalSize","_blockSize","_len","prototype","update","Hash.prototype.update","data","enc","from","block","length","accum","offset","assigned","remainder","Math","min","i","_update","digest","Hash.prototype.digest","rem","fill","bits","writeUInt32BE","lowBits","hash","_hash","toString","Hash.prototype._update","Error"]
}
