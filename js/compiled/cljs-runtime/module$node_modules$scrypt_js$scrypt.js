shadow$provide.module$node_modules$scrypt_js$scrypt=function(global,require,module,exports){(function(root){function SHA256(m){function blocks(p){let off=0,len=p.length;for(;64<=len;){let a=h0,b=h1,c=h2,d=h3,e=h4,f=h5,g=h6,h=h7;var u=void 0;let i;var j=void 0;for(i=0;16>i;i++)j=off+4*i,w[i]=(p[j]&255)<<24|(p[j+1]&255)<<16|(p[j+2]&255)<<8|p[j+3]&255;for(i=16;64>i;i++)u=w[i-2],j=(u>>>17|u<<15)^(u>>>19|u<<13)^u>>>10,u=w[i-15],u=(u>>>7|u<<25)^(u>>>18|u<<14)^u>>>3,w[i]=(j+w[i-7]|0)+(u+w[i-16]|0)|0;for(i=
0;64>i;i++)j=(((e>>>6|e<<26)^(e>>>11|e<<21)^(e>>>25|e<<7))+(e&f^~e&g)|0)+(h+(K[i]+w[i]|0)|0)|0,u=((a>>>2|a<<30)^(a>>>13|a<<19)^(a>>>22|a<<10))+(a&b^a&c^b&c)|0,h=g,g=f,f=e,e=d+j|0,d=c,c=b,b=a,a=j+u|0;h0=h0+a|0;h1=h1+b|0;h2=h2+c|0;h3=h3+d|0;h4=h4+e|0;h5=h5+f|0;h6=h6+g|0;h7=h7+h|0;off+=64;len-=64}}const K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,
4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);
let h0=1779033703,h1=3144134277,h2=1013904242,h3=2773480762,h4=1359893119,h5=2600822924,h6=528734635,h7=1541459225;const w=new Uint32Array(64);blocks(m);var i$jscomp$0=m.length%64;let bitLenHi=m.length/536870912|0,bitLenLo=m.length<<3,numZeros=56>i$jscomp$0?56:120;m=m.slice(m.length-i$jscomp$0,m.length);m.push(128);for(i$jscomp$0+=1;i$jscomp$0<numZeros;i$jscomp$0++)m.push(0);m.push(bitLenHi>>>24&255);m.push(bitLenHi>>>16&255);m.push(bitLenHi>>>8&255);m.push(bitLenHi>>>0&255);m.push(bitLenLo>>>24&
255);m.push(bitLenLo>>>16&255);m.push(bitLenLo>>>8&255);m.push(bitLenLo>>>0&255);blocks(m);return[h0>>>24&255,h0>>>16&255,h0>>>8&255,h0>>>0&255,h1>>>24&255,h1>>>16&255,h1>>>8&255,h1>>>0&255,h2>>>24&255,h2>>>16&255,h2>>>8&255,h2>>>0&255,h3>>>24&255,h3>>>16&255,h3>>>8&255,h3>>>0&255,h4>>>24&255,h4>>>16&255,h4>>>8&255,h4>>>0&255,h5>>>24&255,h5>>>16&255,h5>>>8&255,h5>>>0&255,h6>>>24&255,h6>>>16&255,h6>>>8&255,h6>>>0&255,h7>>>24&255,h7>>>16&255,h7>>>8&255,h7>>>0&255]}function PBKDF2_HMAC_SHA256_OneIter(password,
salt,dkLen){function incrementCounter(){for(let i=innerLen-1;i>=innerLen-4;i--){inner[i]++;if(255>=inner[i])break;inner[i]=0}}password=64>=password.length?password:SHA256(password);const innerLen=64+salt.length+4,inner=Array(innerLen),outerKey=Array(64);let i$jscomp$0,dk=[];for(i$jscomp$0=0;64>i$jscomp$0;i$jscomp$0++)inner[i$jscomp$0]=54;for(i$jscomp$0=0;i$jscomp$0<password.length;i$jscomp$0++)inner[i$jscomp$0]^=password[i$jscomp$0];for(i$jscomp$0=0;i$jscomp$0<salt.length;i$jscomp$0++)inner[64+i$jscomp$0]=
salt[i$jscomp$0];for(i$jscomp$0=innerLen-4;i$jscomp$0<innerLen;i$jscomp$0++)inner[i$jscomp$0]=0;for(i$jscomp$0=0;64>i$jscomp$0;i$jscomp$0++)outerKey[i$jscomp$0]=92;for(i$jscomp$0=0;i$jscomp$0<password.length;i$jscomp$0++)outerKey[i$jscomp$0]^=password[i$jscomp$0];for(;32<=dkLen;)incrementCounter(),dk=dk.concat(SHA256(outerKey.concat(SHA256(inner)))),dkLen-=32;0<dkLen&&(incrementCounter(),dk=dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0,dkLen)));return dk}function blockmix_salsa8(BY,Yi,
r,x,_X){let i$jscomp$0;arraycopy(BY,16*(2*r-1),_X,0,16);for(i$jscomp$0=0;i$jscomp$0<2*r;i$jscomp$0++){var S=BY,Si=16*i$jscomp$0,D=_X;for(let i=0;16>i;i++)D[i]^=S[Si+i];S=_X;Si=x;arraycopy(S,0,Si,0,16);for(D=8;0<D;D-=2)Si[4]^=R(Si[0]+Si[12],7),Si[8]^=R(Si[4]+Si[0],9),Si[12]^=R(Si[8]+Si[4],13),Si[0]^=R(Si[12]+Si[8],18),Si[9]^=R(Si[5]+Si[1],7),Si[13]^=R(Si[9]+Si[5],9),Si[1]^=R(Si[13]+Si[9],13),Si[5]^=R(Si[1]+Si[13],18),Si[14]^=R(Si[10]+Si[6],7),Si[2]^=R(Si[14]+Si[10],9),Si[6]^=R(Si[2]+Si[14],13),Si[10]^=
R(Si[6]+Si[2],18),Si[3]^=R(Si[15]+Si[11],7),Si[7]^=R(Si[3]+Si[15],9),Si[11]^=R(Si[7]+Si[3],13),Si[15]^=R(Si[11]+Si[7],18),Si[1]^=R(Si[0]+Si[3],7),Si[2]^=R(Si[1]+Si[0],9),Si[3]^=R(Si[2]+Si[1],13),Si[0]^=R(Si[3]+Si[2],18),Si[6]^=R(Si[5]+Si[4],7),Si[7]^=R(Si[6]+Si[5],9),Si[4]^=R(Si[7]+Si[6],13),Si[5]^=R(Si[4]+Si[7],18),Si[11]^=R(Si[10]+Si[9],7),Si[8]^=R(Si[11]+Si[10],9),Si[9]^=R(Si[8]+Si[11],13),Si[10]^=R(Si[9]+Si[8],18),Si[12]^=R(Si[15]+Si[14],7),Si[13]^=R(Si[12]+Si[15],9),Si[14]^=R(Si[13]+Si[12],13),
Si[15]^=R(Si[14]+Si[13],18);for(D=0;16>D;++D)S[D]+=Si[D];arraycopy(_X,0,BY,Yi+16*i$jscomp$0,16)}for(i$jscomp$0=0;i$jscomp$0<r;i$jscomp$0++)arraycopy(BY,Yi+32*i$jscomp$0,BY,16*i$jscomp$0,16);for(i$jscomp$0=0;i$jscomp$0<r;i$jscomp$0++)arraycopy(BY,Yi+16*(2*i$jscomp$0+1),BY,16*(i$jscomp$0+r),16)}function R(a,b){return a<<b|a>>>32-b}function arraycopy(src,srcPos,dest,destPos,length){for(;length--;)dest[destPos++]=src[srcPos++]}function checkBufferish(o){if(!o||"number"!==typeof o.length)return!1;for(let i=
0;i<o.length;i++){const v=o[i];if("number"!==typeof v||v%1||0>v||256<=v)return!1}return!0}function ensureInteger(value,name){if("number"!==typeof value||value%1)throw Error("invalid "+name);return value}function _scrypt(password,salt,N,r,p,dkLen,callback){N=ensureInteger(N,"N");r=ensureInteger(r,"r");p=ensureInteger(p,"p");dkLen=ensureInteger(dkLen,"dkLen");if(0===N||0!==(N&N-1))throw Error("N must be power of 2");if(N>1.67772159921875E7/r)throw Error("N too large");if(r>1.67772159921875E7/p)throw Error("r too large");
if(!checkBufferish(password))throw Error("password must be an array or buffer");password=Array.prototype.slice.call(password);if(!checkBufferish(salt))throw Error("salt must be an array or buffer");salt=Array.prototype.slice.call(salt);let b=PBKDF2_HMAC_SHA256_OneIter(password,salt,128*p*r);const B=new Uint32Array(32*p*r);for(salt=0;salt<B.length;salt++){const j=4*salt;B[salt]=(b[j+3]&255)<<24|(b[j+2]&255)<<16|(b[j+1]&255)<<8|(b[j+0]&255)<<0}const XY=new Uint32Array(64*r),V=new Uint32Array(32*r*N),
Yi=32*r,x=new Uint32Array(16),_X=new Uint32Array(16),totalOps=p*N*2;let currentOp=0,lastPercent10=null,stop=!1,state=0,i0=0,i1,Bi;const limit=callback?parseInt(1E3/r):4294967295,nextTick="undefined"!==typeof setImmediate?setImmediate:setTimeout,incrementalSMix=function(){if(stop)return callback(Error("cancelled"),currentOp/totalOps);switch(state){case 0:Bi=32*i0*r,arraycopy(B,Bi,XY,0,Yi),state=1,i1=0;case 1:var steps=N-i1;steps>limit&&(steps=limit);for(var i$jscomp$1=0;i$jscomp$1<steps;i$jscomp$1++)arraycopy(XY,
0,V,(i1+i$jscomp$1)*Yi,Yi),blockmix_salsa8(XY,Yi,r,x,_X);i1+=steps;currentOp+=steps;if(callback&&(steps=parseInt(1E3*currentOp/totalOps),steps!==lastPercent10)){if(stop=callback(null,currentOp/totalOps))break;lastPercent10=steps}if(i1<N)break;i1=0;state=2;case 2:steps=N-i1;steps>limit&&(steps=limit);for(let i$jscomp$0=0;i$jscomp$0<steps;i$jscomp$0++){i$jscomp$1=V;var Si=(XY[16*(2*r-1)]&N-1)*Yi,D=XY,len=Yi;for(let i=0;i<len;i++)D[i]^=i$jscomp$1[Si+i];blockmix_salsa8(XY,Yi,r,x,_X)}i1+=steps;currentOp+=
steps;if(callback&&(steps=parseInt(1E3*currentOp/totalOps),steps!==lastPercent10)){if(stop=callback(null,currentOp/totalOps))break;lastPercent10=steps}if(!(i1<N))if(arraycopy(XY,0,B,Bi,Yi),i0++,i0<p)state=0;else{b=[];for(steps=0;steps<B.length;steps++)b.push(B[steps]>>0&255),b.push(B[steps]>>8&255),b.push(B[steps]>>16&255),b.push(B[steps]>>24&255);steps=PBKDF2_HMAC_SHA256_OneIter(password,b,dkLen);callback&&callback(null,1,steps);return steps}}callback&&nextTick(incrementalSMix)};if(!callback)for(;;)if(salt=
incrementalSMix(),void 0!=salt)return salt;incrementalSMix()}const lib={scrypt:function(password,salt,N,r,p,dkLen,progressCallback){return new Promise(function(resolve,reject){let lastProgress=0;progressCallback&&progressCallback(0);_scrypt(password,salt,N,r,p,dkLen,function(error,progress,key){if(error)reject(error);else if(key)progressCallback&&1!==lastProgress&&progressCallback(1),resolve(new Uint8Array(key));else if(progressCallback&&progress!==lastProgress)return lastProgress=progress,progressCallback(progress)})})},
syncScrypt:function(password,salt,N,r,p,dkLen){return new Uint8Array(_scrypt(password,salt,N,r,p,dkLen))}};"undefined"!==typeof exports?module.exports=lib:"function"===typeof define&&define.amd?define(lib):root&&(root.scrypt&&(root._scrypt=root.scrypt),root.scrypt=lib)})(this)}
//# sourceMappingURL=module$node_modules$scrypt_js$scrypt.js.map
