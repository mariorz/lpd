{
"version":3,
"file":"module$node_modules$eth_rpc_errors$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,wCAAf,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE/F,OAAA,CAA8CF,OAAA,CAAQ,gDAAR,CAA5CG,OAAAA,CAAA,OAAAA,CAAA,gBAAkBC,QAAAA,CAAA,OAAAA,CAAA,qBACpB,KAAA,4BAEFJ,OAAA,CAAQ,8CAAR,CAFE,CACJK,eAAA,2BAAAA,CAAA,cAAgBC,4BAAAA,CAAA,2BAAAA,CAAA,kBAElB,KAAMC,UAAYP,OAAA,CAAQ,+CAAR,CACZQ;OAAAA,CAAcR,OAAA,CAAQ,wDAAR,CAEpBC,OAAA,CAAOC,OAAP,CAAiB,CACfK,UAAAA,SADe,CAEfJ,iBAAAA,MAFe,CAGfC,sBAAAA,OAHe,CAIfC,eAAAA,cAJe,CAKfC,mBAAAA,2BALe,CAQfE,YAAAA,OARe,CAToF;",
"sources":["node_modules/eth-rpc-errors/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$eth_rpc_errors$index\"] = function(global,require,module,exports) {\n\nconst { EthereumRpcError, EthereumProviderError } = require('./src/classes')\nconst {\n  serializeError, getMessageFromCode,\n} = require('./src/utils')\nconst ethErrors = require('./src/errors')\nconst ERROR_CODES = require('./src/errorCodes.json')\n\nmodule.exports = {\n  ethErrors,\n  EthereumRpcError,\n  EthereumProviderError,\n  serializeError,\n  getMessageFromCode,\n\n  /** @type ErrorCodes */\n  ERROR_CODES,\n}\n\n// Types\n\n/**\n * @typedef {Object} EthereumProviderErrorCodes\n * @property {number} userRejectedRequest\n * @property {number} unauthorized\n * @property {number} unsupportedMethod\n * @property {number} disconnected\n * @property {number} chainDisconnected\n */\n\n/**\n * @typedef {Object} EthereumRpcErrorCodes\n * @property {number} parse\n * @property {number} invalidRequest\n * @property {number} invalidParams\n * @property {number} methodNotFound\n * @property {number} limitExceeded\n * @property {number} internal\n * @property {number} invalidInput\n * @property {number} resourceNotFound\n * @property {number} resourceUnavailable\n * @property {number} transactionRejected\n * @property {number} methodNotSupported\n */\n\n/**\n * @typedef ErrorCodes\n * @property {EthereumRpcErrorCodes} rpc\n * @property {EthereumProviderErrorCodes} provider\n */\n\n};"],
"names":["shadow$provide","global","require","module","exports","EthereumRpcError","EthereumProviderError","serializeError","getMessageFromCode","ethErrors","ERROR_CODES"]
}
