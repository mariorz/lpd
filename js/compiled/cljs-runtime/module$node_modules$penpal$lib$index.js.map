{
"version":3,
"file":"module$node_modules$penpal$lib$index.js",
"lineCount":18,
"mappings":"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",
"sources":["node_modules/penpal/lib/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$penpal$lib$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ERR_NOT_IN_IFRAME = exports.ERR_CONNECTION_TIMEOUT = exports.ERR_CONNECTION_DESTROYED = void 0;\nvar HANDSHAKE = 'handshake';\nvar HANDSHAKE_REPLY = 'handshake-reply';\nvar CALL = 'call';\nvar REPLY = 'reply';\nvar FULFILLED = 'fulfilled';\nvar REJECTED = 'rejected';\nvar MESSAGE = 'message';\nvar DATA_CLONE_ERROR = 'DataCloneError';\nvar ERR_CONNECTION_DESTROYED = 'ConnectionDestroyed';\nexports.ERR_CONNECTION_DESTROYED = ERR_CONNECTION_DESTROYED;\nvar ERR_CONNECTION_TIMEOUT = 'ConnectionTimeout';\nexports.ERR_CONNECTION_TIMEOUT = ERR_CONNECTION_TIMEOUT;\nvar ERR_NOT_IN_IFRAME = 'NotInIframe';\nexports.ERR_NOT_IN_IFRAME = ERR_NOT_IN_IFRAME;\nvar DEFAULT_PORTS = {\n  'http:': '80',\n  'https:': '443'\n};\nvar URL_REGEX = /^(https?:)?\\/\\/([^/:]+)(:(\\d+))?/;\nvar Penpal = {\n  ERR_CONNECTION_DESTROYED: ERR_CONNECTION_DESTROYED,\n  ERR_CONNECTION_TIMEOUT: ERR_CONNECTION_TIMEOUT,\n  ERR_NOT_IN_IFRAME: ERR_NOT_IN_IFRAME,\n\n  /**\n   * Promise implementation.\n   * @type {Constructor}\n   */\n  Promise: function () {\n    try {\n      return window ? window.Promise : null;\n    } catch (e) {\n      return null;\n    }\n  }(),\n\n  /**\n   * Whether debug messages should be logged.\n   * @type {boolean}\n   */\n  debug: false\n};\n/**\n * @return {number} A unique ID (not universally unique)\n */\n\nvar generateId = function () {\n  var id = 0;\n  return function () {\n    return ++id;\n  };\n}();\n/**\n * Logs a message.\n * @param {...*} args One or more items to log\n */\n\n\nvar log = function log() {\n  if (Penpal.debug) {\n    var _console;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    (_console = console).log.apply(_console, ['[Penpal]'].concat(args)); // eslint-disable-line no-console\n\n  }\n};\n/**\n * Converts a URL into an origin.\n * @param {string} url\n * @return {string} The URL's origin\n */\n\n\nvar getOriginFromUrl = function getOriginFromUrl(url) {\n  var location = document.location;\n  var regexResult = URL_REGEX.exec(url);\n  var protocol;\n  var hostname;\n  var port;\n\n  if (regexResult) {\n    // It's an absolute URL. Use the parsed info.\n    // regexResult[1] will be undefined if the URL starts with //\n    protocol = regexResult[1] ? regexResult[1] : location.protocol;\n    hostname = regexResult[2];\n    port = regexResult[4];\n  } else {\n    // It's a relative path. Use the current location's info.\n    protocol = location.protocol;\n    hostname = location.hostname;\n    port = location.port;\n  } // If the port is the default for the protocol, we don't want to add it to the origin string\n  // or it won't match the message's event.origin.\n\n\n  var portSuffix = port && port !== DEFAULT_PORTS[protocol] ? \":\".concat(port) : '';\n  return \"\".concat(protocol, \"//\").concat(hostname).concat(portSuffix);\n};\n/**\n * A simplified promise class only used internally for when destroy() is called. This is\n * used to destroy connections synchronously while promises typically resolve asynchronously.\n *\n * @param {Function} executor\n * @returns {Object}\n * @constructor\n */\n\n\nvar DestructionPromise = function DestructionPromise(executor) {\n  var handlers = [];\n  executor(function () {\n    handlers.forEach(function (handler) {\n      handler();\n    });\n  });\n  return {\n    then: function then(handler) {\n      handlers.push(handler);\n    }\n  };\n};\n/**\n * Converts an error object into a plain object.\n * @param {Error} Error object.\n * @returns {Object}\n */\n\n\nvar serializeError = function serializeError(_ref) {\n  var name = _ref.name,\n      message = _ref.message,\n      stack = _ref.stack;\n  return {\n    name: name,\n    message: message,\n    stack: stack\n  };\n};\n/**\n * Converts a plain object into an error object.\n * @param {Object} Object with error properties.\n * @returns {Error}\n */\n\n\nvar deserializeError = function deserializeError(obj) {\n  var deserializedError = new Error();\n  Object.keys(obj).forEach(function (key) {\n    return deserializedError[key] = obj[key];\n  });\n  return deserializedError;\n};\n/**\n * Augments an object with methods that match those defined by the remote. When these methods are\n * called, a \"call\" message will be sent to the remote, the remote's corresponding method will be\n * executed, and the method's return value will be returned via a message.\n * @param {Object} callSender Sender object that should be augmented with methods.\n * @param {Object} info Information about the local and remote windows.\n * @param {Array} methodNames Names of methods available to be called on the remote.\n * @param {Promise} destructionPromise A promise resolved when destroy() is called on the penpal\n * connection.\n * @returns {Object} The call sender object with methods that may be called.\n */\n\n\nvar connectCallSender = function connectCallSender(callSender, info, methodNames, destructionPromise) {\n  var localName = info.localName,\n      local = info.local,\n      remote = info.remote,\n      remoteOrigin = info.remoteOrigin;\n  var destroyed = false;\n  log(\"\".concat(localName, \": Connecting call sender\"));\n\n  var createMethodProxy = function createMethodProxy(methodName) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      log(\"\".concat(localName, \": Sending \").concat(methodName, \"() call\"));\n\n      if (destroyed) {\n        var error = new Error(\"Unable to send \".concat(methodName, \"() call due \") + \"to destroyed connection\");\n        error.code = ERR_CONNECTION_DESTROYED;\n        throw error;\n      }\n\n      return new Penpal.Promise(function (resolve, reject) {\n        var id = generateId();\n\n        var handleMessageEvent = function handleMessageEvent(event) {\n          if (event.source === remote && event.origin === remoteOrigin && event.data.penpal === REPLY && event.data.id === id) {\n            log(\"\".concat(localName, \": Received \").concat(methodName, \"() reply\"));\n            local.removeEventListener(MESSAGE, handleMessageEvent);\n            var returnValue = event.data.returnValue;\n\n            if (event.data.returnValueIsError) {\n              returnValue = deserializeError(returnValue);\n            }\n\n            (event.data.resolution === FULFILLED ? resolve : reject)(returnValue);\n          }\n        };\n\n        local.addEventListener(MESSAGE, handleMessageEvent);\n        remote.postMessage({\n          penpal: CALL,\n          id: id,\n          methodName: methodName,\n          args: args\n        }, remoteOrigin);\n      });\n    };\n  };\n\n  destructionPromise.then(function () {\n    destroyed = true;\n  });\n  methodNames.reduce(function (api, methodName) {\n    api[methodName] = createMethodProxy(methodName);\n    return api;\n  }, callSender);\n};\n/**\n * Listens for \"call\" messages coming from the remote, executes the corresponding method, and\n * responds with the return value.\n * @param {Object} info Information about the local and remote windows.\n * @param {Object} methods The keys are the names of the methods that can be called by the remote\n * while the values are the method functions.\n * @param {Promise} destructionPromise A promise resolved when destroy() is called on the penpal\n * connection.\n * @returns {Function} A function that may be called to disconnect the receiver.\n */\n\n\nvar connectCallReceiver = function connectCallReceiver(info, methods, destructionPromise) {\n  var localName = info.localName,\n      local = info.local,\n      remote = info.remote,\n      remoteOrigin = info.remoteOrigin;\n  var destroyed = false;\n  log(\"\".concat(localName, \": Connecting call receiver\"));\n\n  var handleMessageEvent = function handleMessageEvent(event) {\n    if (event.source === remote && event.origin === remoteOrigin && event.data.penpal === CALL) {\n      var _event$data = event.data,\n          methodName = _event$data.methodName,\n          args = _event$data.args,\n          id = _event$data.id;\n      log(\"\".concat(localName, \": Received \").concat(methodName, \"() call\"));\n\n      if (methodName in methods) {\n        var createPromiseHandler = function createPromiseHandler(resolution) {\n          return function (returnValue) {\n            log(\"\".concat(localName, \": Sending \").concat(methodName, \"() reply\"));\n\n            if (destroyed) {\n              // It's possible to throw an error here, but it would need to be thrown asynchronously\n              // and would only be catchable using window.onerror. This is because the consumer\n              // is merely returning a value from their method and not calling any function\n              // that they could wrap in a try-catch. Even if the consumer were to catch the error,\n              // the value of doing so is questionable. Instead, we'll just log a message.\n              log(\"\".concat(localName, \": Unable to send \").concat(methodName, \"() reply due to destroyed connection\"));\n              return;\n            }\n\n            var message = {\n              penpal: REPLY,\n              id: id,\n              resolution: resolution,\n              returnValue: returnValue\n            };\n\n            if (resolution === REJECTED && returnValue instanceof Error) {\n              message.returnValue = serializeError(returnValue);\n              message.returnValueIsError = true;\n            }\n\n            try {\n              remote.postMessage(message, remoteOrigin);\n            } catch (err) {\n              // If a consumer attempts to send an object that's not cloneable (e.g., window),\n              // we want to ensure the receiver's promise gets rejected.\n              if (err.name === DATA_CLONE_ERROR) {\n                remote.postMessage({\n                  penpal: REPLY,\n                  id: id,\n                  resolution: REJECTED,\n                  returnValue: serializeError(err),\n                  returnValueIsError: true\n                }, remoteOrigin);\n              }\n\n              throw err;\n            }\n          };\n        };\n\n        new Penpal.Promise(function (resolve) {\n          return resolve(methods[methodName].apply(methods, args));\n        }).then(createPromiseHandler(FULFILLED), createPromiseHandler(REJECTED));\n      }\n    }\n  };\n\n  local.addEventListener(MESSAGE, handleMessageEvent);\n  destructionPromise.then(function () {\n    destroyed = true;\n    local.removeEventListener(MESSAGE, handleMessageEvent);\n  });\n};\n/**\n * @typedef {Object} Child\n * @property {Promise} promise A promise which will be resolved once a connection has\n * been established.\n * @property {HTMLIframeElement} iframe The created iframe element.\n * @property {Function} destroy A method that, when called, will remove the iframe element from\n * the DOM and clean up event listeners.\n */\n\n/**\n * Creates an iframe, loads a webpage into the URL, and attempts to establish communication with\n * the iframe.\n * @param {Object} options\n * @param {string} options.url The URL of the webpage that should be loaded into the created iframe.\n * @param {HTMLElement} [options.appendTo] The container to which the iframe should be appended.\n * @param {Object} [options.methods={}] Methods that may be called by the iframe.\n * @param {Number} [options.timeout] The amount of time, in milliseconds, Penpal should wait\n * for the child to respond before rejecting the connection promise.\n * @return {Child}\n */\n\n\nPenpal.connectToChild = function (_ref2) {\n  var url = _ref2.url,\n      appendTo = _ref2.appendTo,\n      _ref2$methods = _ref2.methods,\n      methods = _ref2$methods === void 0 ? {} : _ref2$methods,\n      timeout = _ref2.timeout;\n  var destroy;\n  var connectionDestructionPromise = new DestructionPromise(function (resolveConnectionDestructionPromise) {\n    destroy = resolveConnectionDestructionPromise;\n  });\n  var parent = window;\n  var iframe = document.createElement('iframe');\n  (appendTo || document.body).appendChild(iframe);\n  connectionDestructionPromise.then(function () {\n    if (iframe.parentNode) {\n      iframe.parentNode.removeChild(iframe);\n    }\n  });\n  var child = iframe.contentWindow || iframe.contentDocument.parentWindow;\n  var childOrigin = getOriginFromUrl(url);\n  var promise = new Penpal.Promise(function (resolveConnectionPromise, reject) {\n    var connectionTimeoutId;\n\n    if (timeout !== undefined) {\n      connectionTimeoutId = setTimeout(function () {\n        var error = new Error(\"Connection to child timed out after \".concat(timeout, \"ms\"));\n        error.code = ERR_CONNECTION_TIMEOUT;\n        reject(error);\n        destroy();\n      }, timeout);\n    } // We resolve the promise with the call sender. If the child reconnects (for example, after\n    // refreshing or navigating to another page that uses Penpal, we'll update the call sender\n    // with methods that match the latest provided by the child.\n\n\n    var callSender = {};\n    var receiverMethodNames;\n    var destroyCallReceiver;\n\n    var handleMessage = function handleMessage(event) {\n      if (event.source === child && event.origin === childOrigin && event.data.penpal === HANDSHAKE) {\n        log('Parent: Received handshake, sending reply');\n        event.source.postMessage({\n          penpal: HANDSHAKE_REPLY,\n          methodNames: Object.keys(methods)\n        }, event.origin);\n        var info = {\n          localName: 'Parent',\n          local: parent,\n          remote: child,\n          remoteOrigin: event.origin\n        }; // If the child reconnected, we need to destroy the previous call receiver before setting\n        // up a new one.\n\n        if (destroyCallReceiver) {\n          destroyCallReceiver();\n        } // When this promise is resolved, it will destroy the call receiver (stop listening to\n        // method calls from the child) and delete its methods off the call sender.\n\n\n        var callReceiverDestructionPromise = new DestructionPromise(function (resolveCallReceiverDestructionPromise) {\n          connectionDestructionPromise.then(resolveCallReceiverDestructionPromise);\n          destroyCallReceiver = resolveCallReceiverDestructionPromise;\n        });\n        connectCallReceiver(info, methods, callReceiverDestructionPromise); // If the child reconnected, we need to remove the methods from the previous call receiver\n        // off the sender.\n\n        if (receiverMethodNames) {\n          receiverMethodNames.forEach(function (receiverMethodName) {\n            delete callSender[receiverMethodName];\n          });\n        }\n\n        receiverMethodNames = event.data.methodNames;\n        connectCallSender(callSender, info, receiverMethodNames, connectionDestructionPromise);\n        clearTimeout(connectionTimeoutId);\n        resolveConnectionPromise(callSender);\n      }\n    };\n\n    parent.addEventListener(MESSAGE, handleMessage);\n    connectionDestructionPromise.then(function () {\n      parent.removeEventListener(MESSAGE, handleMessage);\n      var error = new Error('Connection destroyed');\n      error.code = ERR_CONNECTION_DESTROYED;\n      reject(error);\n    });\n    log('Parent: Loading iframe');\n    iframe.src = url;\n  });\n  return {\n    promise: promise,\n    iframe: iframe,\n    destroy: destroy\n  };\n};\n/**\n * @typedef {Object} Parent\n * @property {Promise} promise A promise which will be resolved once a connection has\n * been established.\n */\n\n/**\n * Attempts to establish communication with the parent window.\n * @param {Object} options\n * @param {string} [options.parentOrigin=*] Valid parent origin used to restrict communication.\n * @param {Object} [options.methods={}] Methods that may be called by the parent window.\n * @param {Number} [options.timeout] The amount of time, in milliseconds, Penpal should wait\n * for the parent to respond before rejecting the connection promise.\n * @return {Parent}\n */\n\n\nPenpal.connectToParent = function () {\n  var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref3$parentOrigin = _ref3.parentOrigin,\n      parentOrigin = _ref3$parentOrigin === void 0 ? '*' : _ref3$parentOrigin,\n      _ref3$methods = _ref3.methods,\n      methods = _ref3$methods === void 0 ? {} : _ref3$methods,\n      timeout = _ref3.timeout;\n\n  if (window === window.top) {\n    var error = new Error('connectToParent() must be called within an iframe');\n    error.code = ERR_NOT_IN_IFRAME;\n    throw error;\n  }\n\n  var destroy;\n  var connectionDestructionPromise = new DestructionPromise(function (resolveConnectionDestructionPromise) {\n    destroy = resolveConnectionDestructionPromise;\n  });\n  var child = window;\n  var parent = child.parent;\n  var promise = new Penpal.Promise(function (resolveConnectionPromise, reject) {\n    var connectionTimeoutId;\n\n    if (timeout !== undefined) {\n      connectionTimeoutId = setTimeout(function () {\n        var error = new Error(\"Connection to parent timed out after \".concat(timeout, \"ms\"));\n        error.code = ERR_CONNECTION_TIMEOUT;\n        reject(error);\n        destroy();\n      }, timeout);\n    }\n\n    var handleMessageEvent = function handleMessageEvent(event) {\n      if ((parentOrigin === '*' || parentOrigin === event.origin) && event.source === parent && event.data.penpal === HANDSHAKE_REPLY) {\n        log('Child: Received handshake reply');\n        child.removeEventListener(MESSAGE, handleMessageEvent);\n        var info = {\n          localName: 'Child',\n          local: child,\n          remote: parent,\n          remoteOrigin: event.origin\n        };\n        var callSender = {};\n        connectCallReceiver(info, methods, connectionDestructionPromise);\n        connectCallSender(callSender, info, event.data.methodNames, connectionDestructionPromise);\n        clearTimeout(connectionTimeoutId);\n        resolveConnectionPromise(callSender);\n      }\n    };\n\n    child.addEventListener(MESSAGE, handleMessageEvent);\n    connectionDestructionPromise.then(function () {\n      child.removeEventListener(MESSAGE, handleMessageEvent);\n      var error = new Error('Connection destroyed');\n      error.code = ERR_CONNECTION_DESTROYED;\n      reject(error);\n    });\n    log('Child: Sending handshake');\n    parent.postMessage({\n      penpal: HANDSHAKE,\n      methodNames: Object.keys(methods)\n    }, parentOrigin);\n  });\n  return {\n    promise: promise,\n    destroy: destroy\n  };\n};\n\nvar _default = Penpal;\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","ERR_NOT_IN_IFRAME","ERR_CONNECTION_TIMEOUT","ERR_CONNECTION_DESTROYED","DEFAULT_PORTS","URL_REGEX","window","Promise","e","Penpal","debug","generateId","id","log","_console","_len","arguments","length","args","Array","_key","console","apply","concat","getOriginFromUrl","url","location","document","regexResult","exec","protocol","hostname","port","portSuffix","DestructionPromise","executor","handlers","forEach","handler","then","push","serializeError","_ref","name","message","stack","deserializeError","obj","deserializedError","Error","keys","key","connectCallSender","callSender","info","methodNames","destructionPromise","localName","local","remote","remoteOrigin","destroyed","createMethodProxy","methodName","_len2","_key2","error","code","resolve","reject","addEventListener","MESSAGE","handleMessageEvent","event","source","origin","REPLY","data","penpal","removeEventListener","returnValue","returnValueIsError","FULFILLED","resolution","postMessage","CALL","reduce","api","connectCallReceiver","methods","_event$data","createPromiseHandler","REJECTED","err","DATA_CLONE_ERROR","connectToChild","Penpal.connectToChild","_ref2","appendTo","_ref2$methods","timeout","destroy","connectionDestructionPromise","resolveConnectionDestructionPromise","parent","iframe","createElement","body","appendChild","parentNode","removeChild","child","contentWindow","contentDocument","parentWindow","childOrigin","promise","resolveConnectionPromise","connectionTimeoutId","undefined","setTimeout","receiverMethodNames","destroyCallReceiver","handleMessage","HANDSHAKE","HANDSHAKE_REPLY","callReceiverDestructionPromise","resolveCallReceiverDestructionPromise","receiverMethodName","clearTimeout","src","connectToParent","Penpal.connectToParent","_ref3","_ref3$parentOrigin","parentOrigin","_ref3$methods","top"]
}
