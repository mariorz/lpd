shadow$provide.module$node_modules$eth_rpc_errors$src$classes=function(global,require,module,exports){function stringifyReplacer(_,value){if("[Circular]"!==value)return value}var safeStringify=require("module$node_modules$fast_safe_stringify$index"),EthereumRpcError=function(code,message,data){if(!Number.isInteger(code))throw Error('"code" must be an integer.');if(!message||"string"!==typeof message)throw Error('"message" must be a nonempty string.');message=Error.call(this,message);this.message=
message.message;"stack"in message&&(this.stack=message.stack);this.code=code;void 0!==data&&(this.data=data)};$jscomp.inherits(EthereumRpcError,Error);EthereumRpcError.prototype.serialize=function(){var serialized={code:this.code,message:this.message};void 0!==this.data&&(serialized.data=this.data);this.stack&&(serialized.stack=this.stack);return serialized};EthereumRpcError.prototype.toString=function(){return safeStringify(this.serialize(),stringifyReplacer,2)};global=function(code,message,data){if(!(Number.isInteger(code)&&
1E3<=code&&4999>=code))throw Error('"code" must be an integer such that: 1000 \x3c\x3d code \x3c\x3d 4999');return EthereumRpcError.call(this,code,message,data)||this};$jscomp.inherits(global,EthereumRpcError);module.exports={EthereumRpcError:EthereumRpcError,EthereumProviderError:global}}
//# sourceMappingURL=module$node_modules$eth_rpc_errors$src$classes.js.map
