shadow$provide.module$node_modules$eth_json_rpc_filters$block_filter=function(global,require,module,exports){global=require("module$node_modules$eth_json_rpc_filters$base_filter");const getBlocksForRange=require("module$node_modules$eth_json_rpc_filters$getBlocksForRange"),{incrementHexInt}=require("module$node_modules$eth_json_rpc_filters$hexUtils");class BlockFilter extends global{constructor({provider}){super();this.type="block";this.provider=provider}async update({oldBlock,newBlock}){oldBlock=
incrementHexInt(oldBlock);newBlock=(await getBlocksForRange({provider:this.provider,fromBlock:oldBlock,toBlock:newBlock})).map(block=>block.hash);this.addResults(newBlock)}}module.exports=BlockFilter}
//# sourceMappingURL=module$node_modules$eth_json_rpc_filters$block_filter.js.map
