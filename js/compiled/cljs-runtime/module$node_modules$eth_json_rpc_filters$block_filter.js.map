{
"version":3,
"file":"module$node_modules$eth_json_rpc_filters$block_filter.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,qDAAf,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC5GC,MAAAA,CAAaH,OAAA,CAAQ,sDAAR,CACnB,OAAMI,kBAAoBJ,OAAA,CAAQ,4DAAR,CAA1B,CACM,CAAEK,eAAF,CAAA,CAAsBL,OAAA,CAAQ,mDAAR,CAE5B,MAAMM,YAAN,QAA0BH,OAA1B,CAEEI,WAAY,CAAC,CAAEC,QAAF,CAAD,CAAuB,CACjC,KAAA,EACA,KAAA,CAAKC,IAAL,CAAY,OACZ,KAAA,CAAKD,QAAL,CAAgBA,QAHiB,CAM7BE,YAAO,CAAC,CAAEC,QAAF,CAAYC,QAAZ,CAAD,CAAyB,CAE9BC,QAAAA;AAAYR,eAAA,CAAgBM,QAAhB,CAEZG,SAAAA,CAAc,CADAC,MAAMX,iBAAA,CAAkB,CAAEI,SAAU,IAAVA,CAAeA,QAAjB,CAA2BK,UAAAA,QAA3B,CAAsCG,QAFlEJ,QAE4B,CAAlB,CACN,EAAYK,GAAZ,CAAiBC,KAAD,EAAWA,KAAX,CAAiBC,IAAjC,CACpB,KAAA,CAAKC,UAAL,CAAgBN,QAAhB,CALoC,CARxC,CAkBAb,MAAA,CAAOC,OAAP,CAAiBI,WAvBiG;",
"sources":["node_modules/eth-json-rpc-filters/block-filter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$eth_json_rpc_filters$block_filter\"] = function(global,require,module,exports) {\nconst BaseFilter = require('./base-filter')\nconst getBlocksForRange = require('./getBlocksForRange')\nconst { incrementHexInt } = require('./hexUtils')\n\nclass BlockFilter extends BaseFilter {\n\n  constructor ({ provider, params }) {\n    super()\n    this.type = 'block'\n    this.provider = provider\n  }\n\n  async update ({ oldBlock, newBlock }) {\n    const toBlock = newBlock\n    const fromBlock = incrementHexInt(oldBlock)\n    const blockBodies = await getBlocksForRange({ provider: this.provider, fromBlock, toBlock })\n    const blockHashes = blockBodies.map((block) => block.hash)\n    this.addResults(blockHashes)\n  }\n\n}\n\nmodule.exports = BlockFilter\n\n};"],
"names":["shadow$provide","global","require","module","exports","BaseFilter","getBlocksForRange","incrementHexInt","BlockFilter","constructor","provider","type","update","oldBlock","newBlock","fromBlock","blockHashes","blockBodies","toBlock","map","block","hash","addResults"]
}
