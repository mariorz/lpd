{
"version":3,
"file":"module$node_modules$browserify_zlib$lib$binding.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/browserify-zlib/lib/binding.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$browserify_zlib$lib$binding\"] = function(global,require,module,exports) {\nvar process = require('process');\nvar Buffer = require('buffer').Buffer;\n'use strict';\n/* eslint camelcase: \"off\" */\n\nvar assert = require('assert');\n\nvar Zstream = require('pako/lib/zlib/zstream');\nvar zlib_deflate = require('pako/lib/zlib/deflate.js');\nvar zlib_inflate = require('pako/lib/zlib/inflate.js');\nvar constants = require('pako/lib/zlib/constants');\n\nfor (var key in constants) {\n  exports[key] = constants[key];\n}\n\n// zlib modes\nexports.NONE = 0;\nexports.DEFLATE = 1;\nexports.INFLATE = 2;\nexports.GZIP = 3;\nexports.GUNZIP = 4;\nexports.DEFLATERAW = 5;\nexports.INFLATERAW = 6;\nexports.UNZIP = 7;\n\nvar GZIP_HEADER_ID1 = 0x1f;\nvar GZIP_HEADER_ID2 = 0x8b;\n\n/**\n * Emulate Node's zlib C++ layer for use by the JS layer in index.js\n */\nfunction Zlib(mode) {\n  if (typeof mode !== 'number' || mode < exports.DEFLATE || mode > exports.UNZIP) {\n    throw new TypeError('Bad argument');\n  }\n\n  this.dictionary = null;\n  this.err = 0;\n  this.flush = 0;\n  this.init_done = false;\n  this.level = 0;\n  this.memLevel = 0;\n  this.mode = mode;\n  this.strategy = 0;\n  this.windowBits = 0;\n  this.write_in_progress = false;\n  this.pending_close = false;\n  this.gzip_id_bytes_read = 0;\n}\n\nZlib.prototype.close = function () {\n  if (this.write_in_progress) {\n    this.pending_close = true;\n    return;\n  }\n\n  this.pending_close = false;\n\n  assert(this.init_done, 'close before init');\n  assert(this.mode <= exports.UNZIP);\n\n  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {\n    zlib_deflate.deflateEnd(this.strm);\n  } else if (this.mode === exports.INFLATE || this.mode === exports.GUNZIP || this.mode === exports.INFLATERAW || this.mode === exports.UNZIP) {\n    zlib_inflate.inflateEnd(this.strm);\n  }\n\n  this.mode = exports.NONE;\n\n  this.dictionary = null;\n};\n\nZlib.prototype.write = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(true, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype.writeSync = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(false, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype._write = function (async, flush, input, in_off, in_len, out, out_off, out_len) {\n  assert.equal(arguments.length, 8);\n\n  assert(this.init_done, 'write before init');\n  assert(this.mode !== exports.NONE, 'already finalized');\n  assert.equal(false, this.write_in_progress, 'write already in progress');\n  assert.equal(false, this.pending_close, 'close is pending');\n\n  this.write_in_progress = true;\n\n  assert.equal(false, flush === undefined, 'must provide flush value');\n\n  this.write_in_progress = true;\n\n  if (flush !== exports.Z_NO_FLUSH && flush !== exports.Z_PARTIAL_FLUSH && flush !== exports.Z_SYNC_FLUSH && flush !== exports.Z_FULL_FLUSH && flush !== exports.Z_FINISH && flush !== exports.Z_BLOCK) {\n    throw new Error('Invalid flush value');\n  }\n\n  if (input == null) {\n    input = Buffer.alloc(0);\n    in_len = 0;\n    in_off = 0;\n  }\n\n  this.strm.avail_in = in_len;\n  this.strm.input = input;\n  this.strm.next_in = in_off;\n  this.strm.avail_out = out_len;\n  this.strm.output = out;\n  this.strm.next_out = out_off;\n  this.flush = flush;\n\n  if (!async) {\n    // sync version\n    this._process();\n\n    if (this._checkError()) {\n      return this._afterSync();\n    }\n    return;\n  }\n\n  // async version\n  var self = this;\n  process.nextTick(function () {\n    self._process();\n    self._after();\n  });\n\n  return this;\n};\n\nZlib.prototype._afterSync = function () {\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  return [avail_in, avail_out];\n};\n\nZlib.prototype._process = function () {\n  var next_expected_header_byte = null;\n\n  // If the avail_out is left at 0, then it means that it ran out\n  // of room.  If there was avail_out left over, then it means\n  // that all of the input was consumed.\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflate(this.strm, this.flush);\n      break;\n    case exports.UNZIP:\n      if (this.strm.avail_in > 0) {\n        next_expected_header_byte = this.strm.next_in;\n      }\n\n      switch (this.gzip_id_bytes_read) {\n        case 0:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID1) {\n            this.gzip_id_bytes_read = 1;\n            next_expected_header_byte++;\n\n            if (this.strm.avail_in === 1) {\n              // The only available byte was already read.\n              break;\n            }\n          } else {\n            this.mode = exports.INFLATE;\n            break;\n          }\n\n        // fallthrough\n        case 1:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID2) {\n            this.gzip_id_bytes_read = 2;\n            this.mode = exports.GUNZIP;\n          } else {\n            // There is no actual difference between INFLATE and INFLATERAW\n            // (after initialization).\n            this.mode = exports.INFLATE;\n          }\n\n          break;\n        default:\n          throw new Error('invalid number of gzip magic number bytes read');\n      }\n\n    // fallthrough\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n      this.err = zlib_inflate.inflate(this.strm, this.flush\n\n      // If data was encoded with dictionary\n      );if (this.err === exports.Z_NEED_DICT && this.dictionary) {\n        // Load it\n        this.err = zlib_inflate.inflateSetDictionary(this.strm, this.dictionary);\n        if (this.err === exports.Z_OK) {\n          // And try to decode again\n          this.err = zlib_inflate.inflate(this.strm, this.flush);\n        } else if (this.err === exports.Z_DATA_ERROR) {\n          // Both inflateSetDictionary() and inflate() return Z_DATA_ERROR.\n          // Make it possible for After() to tell a bad dictionary from bad\n          // input.\n          this.err = exports.Z_NEED_DICT;\n        }\n      }\n      while (this.strm.avail_in > 0 && this.mode === exports.GUNZIP && this.err === exports.Z_STREAM_END && this.strm.next_in[0] !== 0x00) {\n        // Bytes remain in input buffer. Perhaps this is another compressed\n        // member in the same archive, or just trailing garbage.\n        // Trailing zero bytes are okay, though, since they are frequently\n        // used for padding.\n\n        this.reset();\n        this.err = zlib_inflate.inflate(this.strm, this.flush);\n      }\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n};\n\nZlib.prototype._checkError = function () {\n  // Acceptable error states depend on the type of zlib stream.\n  switch (this.err) {\n    case exports.Z_OK:\n    case exports.Z_BUF_ERROR:\n      if (this.strm.avail_out !== 0 && this.flush === exports.Z_FINISH) {\n        this._error('unexpected end of file');\n        return false;\n      }\n      break;\n    case exports.Z_STREAM_END:\n      // normal statuses, not fatal\n      break;\n    case exports.Z_NEED_DICT:\n      if (this.dictionary == null) {\n        this._error('Missing dictionary');\n      } else {\n        this._error('Bad dictionary');\n      }\n      return false;\n    default:\n      // something else.\n      this._error('Zlib error');\n      return false;\n  }\n\n  return true;\n};\n\nZlib.prototype._after = function () {\n  if (!this._checkError()) {\n    return;\n  }\n\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  // call the write() cb\n  this.callback(avail_in, avail_out);\n\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype._error = function (message) {\n  if (this.strm.msg) {\n    message = this.strm.msg;\n  }\n  this.onerror(message, this.err\n\n  // no hope of rescue.\n  );this.write_in_progress = false;\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype.init = function (windowBits, level, memLevel, strategy, dictionary) {\n  assert(arguments.length === 4 || arguments.length === 5, 'init(windowBits, level, memLevel, strategy, [dictionary])');\n\n  assert(windowBits >= 8 && windowBits <= 15, 'invalid windowBits');\n  assert(level >= -1 && level <= 9, 'invalid compression level');\n\n  assert(memLevel >= 1 && memLevel <= 9, 'invalid memlevel');\n\n  assert(strategy === exports.Z_FILTERED || strategy === exports.Z_HUFFMAN_ONLY || strategy === exports.Z_RLE || strategy === exports.Z_FIXED || strategy === exports.Z_DEFAULT_STRATEGY, 'invalid strategy');\n\n  this._init(level, windowBits, memLevel, strategy, dictionary);\n  this._setDictionary();\n};\n\nZlib.prototype.params = function () {\n  throw new Error('deflateParams Not supported');\n};\n\nZlib.prototype.reset = function () {\n  this._reset();\n  this._setDictionary();\n};\n\nZlib.prototype._init = function (level, windowBits, memLevel, strategy, dictionary) {\n  this.level = level;\n  this.windowBits = windowBits;\n  this.memLevel = memLevel;\n  this.strategy = strategy;\n\n  this.flush = exports.Z_NO_FLUSH;\n\n  this.err = exports.Z_OK;\n\n  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP) {\n    this.windowBits += 16;\n  }\n\n  if (this.mode === exports.UNZIP) {\n    this.windowBits += 32;\n  }\n\n  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW) {\n    this.windowBits = -1 * this.windowBits;\n  }\n\n  this.strm = new Zstream();\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateInit2(this.strm, this.level, exports.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);\n      break;\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n    case exports.UNZIP:\n      this.err = zlib_inflate.inflateInit2(this.strm, this.windowBits);\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Init error');\n  }\n\n  this.dictionary = dictionary;\n\n  this.write_in_progress = false;\n  this.init_done = true;\n};\n\nZlib.prototype._setDictionary = function () {\n  if (this.dictionary == null) {\n    return;\n  }\n\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateSetDictionary(this.strm, this.dictionary);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to set dictionary');\n  }\n};\n\nZlib.prototype._reset = function () {\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n    case exports.GZIP:\n      this.err = zlib_deflate.deflateReset(this.strm);\n      break;\n    case exports.INFLATE:\n    case exports.INFLATERAW:\n    case exports.GUNZIP:\n      this.err = zlib_inflate.inflateReset(this.strm);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to reset stream');\n  }\n};\n\nexports.Zlib = Zlib;\n};"],
"names":["shadow$provide","global","require","module","exports","Zlib","mode","DEFLATE","UNZIP","TypeError","dictionary","flush","err","init_done","memLevel","level","windowBits","strategy","pending_close","write_in_progress","gzip_id_bytes_read","process","Buffer","assert","Zstream","zlib_deflate","zlib_inflate","constants","key","NONE","INFLATE","GZIP","GUNZIP","DEFLATERAW","INFLATERAW","prototype","close","Zlib.prototype.close","deflateEnd","strm","inflateEnd","write","Zlib.prototype.write","input","in_off","in_len","out","out_off","out_len","_write","writeSync","Zlib.prototype.writeSync","Zlib.prototype._write","async","equal","arguments","length","undefined","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Error","alloc","avail_in","next_in","avail_out","output","next_out","self","nextTick","_process","_after","_checkError","_afterSync","Zlib.prototype._afterSync","Zlib.prototype._process","next_expected_header_byte","deflate","GZIP_HEADER_ID1","GZIP_HEADER_ID2","inflate","Z_NEED_DICT","inflateSetDictionary","Z_OK","Z_DATA_ERROR","Z_STREAM_END","reset","Zlib.prototype._checkError","Z_BUF_ERROR","_error","Zlib.prototype._after","callback","Zlib.prototype._error","message","msg","onerror","init","Zlib.prototype.init","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","_init","_setDictionary","params","Zlib.prototype.params","Zlib.prototype.reset","_reset","Zlib.prototype._init","deflateInit2","Z_DEFLATED","inflateInit2","Zlib.prototype._setDictionary","deflateSetDictionary","Zlib.prototype._reset","deflateReset","inflateReset"]
}
