{
"version":3,
"file":"module$node_modules$hash_base$index.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/hash-base/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hash_base$index\"] = function(global,require,module,exports) {\n'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('readable-stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n\n};"],
"names":["shadow$provide","global","require","module","exports","HashBase","blockSize","Transform","call","_block","Buffer","allocUnsafe","_blockSize","_blockOffset","_length","_finalized","inherits","prototype","_transform","HashBase.prototype._transform","chunk","encoding","callback","error","update","err","_flush","HashBase.prototype._flush","push","digest","HashBase.prototype.update","data","isBuffer","val","TypeError","Error","from","block","offset","length","i","_update","j","carry","HashBase.prototype._update","HashBase.prototype.digest","_digest","undefined","toString","fill","HashBase.prototype._digest"]
}
