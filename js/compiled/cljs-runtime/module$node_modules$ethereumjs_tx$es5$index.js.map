{
"version":3,
"file":"module$node_modules$ethereumjs_tx$es5$index.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/ethereumjs-tx/es5/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ethereumjs_tx$es5$index\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ethUtil = require('ethereumjs-util');\nvar fees = require('ethereum-common/params.json');\nvar BN = ethUtil.BN;\n\n// secp256k1n/2\nvar N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n\n/**\n * Creates a new transaction object.\n *\n * @example\n * var rawTx = {\n *   nonce: '00',\n *   gasPrice: '09184e72a000',\n *   gasLimit: '2710',\n *   to: '0000000000000000000000000000000000000000',\n *   value: '00',\n *   data: '7f7465737432000000000000000000000000000000000000000000000000000000600057',\n *   v: '1c',\n *   r: '5e1d3a76fbf824220eafc8c79ad578ad2b67d01b0c2425eb1f1347e8f50882ab',\n *   s: '5bd428537f05f9830e93792f90ea6a3e2d1ee84952dd96edbae9f658f831ab13'\n * };\n * var tx = new Transaction(rawTx);\n *\n * @class\n * @param {Buffer | Array | Object} data a transaction can be initiailized with either a buffer containing the RLP serialized transaction or an array of buffers relating to each of the tx Properties, listed in order below in the exmple.\n *\n * Or lastly an Object containing the Properties of the transaction like in the Usage example.\n *\n * For Object and Arrays each of the elements can either be a Buffer, a hex-prefixed (0x) String , Number, or an object with a toBuffer method such as Bignum\n *\n * @property {Buffer} raw The raw rlp encoded transaction\n * @param {Buffer} data.nonce nonce number\n * @param {Buffer} data.gasLimit transaction gas limit\n * @param {Buffer} data.gasPrice transaction gas price\n * @param {Buffer} data.to to the to address\n * @param {Buffer} data.value the amount of ether sent\n * @param {Buffer} data.data this will contain the data of the message or the init of a contract\n * @param {Buffer} data.v EC signature parameter\n * @param {Buffer} data.r EC signature parameter\n * @param {Buffer} data.s EC recovery ID\n * @param {Number} data.chainId EIP 155 chainId - mainnet: 1, ropsten: 3\n * */\n\nvar Transaction = function () {\n  function Transaction(data) {\n    _classCallCheck(this, Transaction);\n\n    data = data || {};\n    // Define Properties\n    var fields = [{\n      name: 'nonce',\n      length: 32,\n      allowLess: true,\n      default: new Buffer([])\n    }, {\n      name: 'gasPrice',\n      length: 32,\n      allowLess: true,\n      default: new Buffer([])\n    }, {\n      name: 'gasLimit',\n      alias: 'gas',\n      length: 32,\n      allowLess: true,\n      default: new Buffer([])\n    }, {\n      name: 'to',\n      allowZero: true,\n      length: 20,\n      default: new Buffer([])\n    }, {\n      name: 'value',\n      length: 32,\n      allowLess: true,\n      default: new Buffer([])\n    }, {\n      name: 'data',\n      alias: 'input',\n      allowZero: true,\n      default: new Buffer([])\n    }, {\n      name: 'v',\n      allowZero: true,\n      default: new Buffer([0x1c])\n    }, {\n      name: 'r',\n      length: 32,\n      allowZero: true,\n      allowLess: true,\n      default: new Buffer([])\n    }, {\n      name: 's',\n      length: 32,\n      allowZero: true,\n      allowLess: true,\n      default: new Buffer([])\n    }];\n\n    /**\n     * Returns the rlp encoding of the transaction\n     * @method serialize\n     * @return {Buffer}\n     * @memberof Transaction\n     * @name serialize\n     */\n    // attached serialize\n    ethUtil.defineProperties(this, fields, data);\n\n    /**\n     * @property {Buffer} from (read only) sender address of this transaction, mathematically derived from other parameters.\n     * @name from\n     * @memberof Transaction\n     */\n    Object.defineProperty(this, 'from', {\n      enumerable: true,\n      configurable: true,\n      get: this.getSenderAddress.bind(this)\n    });\n\n    // calculate chainId from signature\n    var sigV = ethUtil.bufferToInt(this.v);\n    var chainId = Math.floor((sigV - 35) / 2);\n    if (chainId < 0) chainId = 0;\n\n    // set chainId\n    this._chainId = chainId || data.chainId || 0;\n    this._homestead = true;\n  }\n\n  /**\n   * If the tx's `to` is to the creation address\n   * @return {Boolean}\n   */\n\n\n  Transaction.prototype.toCreationAddress = function toCreationAddress() {\n    return this.to.toString('hex') === '';\n  };\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx\n   * @param {Boolean} [includeSignature=true] whether or not to inculde the signature\n   * @return {Buffer}\n   */\n\n\n  Transaction.prototype.hash = function hash(includeSignature) {\n    if (includeSignature === undefined) includeSignature = true;\n\n    // EIP155 spec:\n    // when computing the hash of a transaction for purposes of signing or recovering,\n    // instead of hashing only the first six elements (ie. nonce, gasprice, startgas, to, value, data),\n    // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0\n\n    var items = void 0;\n    if (includeSignature) {\n      items = this.raw;\n    } else {\n      if (this._chainId > 0) {\n        var raw = this.raw.slice();\n        this.v = this._chainId;\n        this.r = 0;\n        this.s = 0;\n        items = this.raw;\n        this.raw = raw;\n      } else {\n        items = this.raw.slice(0, 6);\n      }\n    }\n\n    // create hash\n    return ethUtil.rlphash(items);\n  };\n\n  /**\n   * returns the public key of the sender\n   * @return {Buffer}\n   */\n\n\n  Transaction.prototype.getChainId = function getChainId() {\n    return this._chainId;\n  };\n\n  /**\n   * returns the sender's address\n   * @return {Buffer}\n   */\n\n\n  Transaction.prototype.getSenderAddress = function getSenderAddress() {\n    if (this._from) {\n      return this._from;\n    }\n    var pubkey = this.getSenderPublicKey();\n    this._from = ethUtil.publicToAddress(pubkey);\n    return this._from;\n  };\n\n  /**\n   * returns the public key of the sender\n   * @return {Buffer}\n   */\n\n\n  Transaction.prototype.getSenderPublicKey = function getSenderPublicKey() {\n    if (!this._senderPubKey || !this._senderPubKey.length) {\n      if (!this.verifySignature()) throw new Error('Invalid Signature');\n    }\n    return this._senderPubKey;\n  };\n\n  /**\n   * Determines if the signature is valid\n   * @return {Boolean}\n   */\n\n\n  Transaction.prototype.verifySignature = function verifySignature() {\n    var msgHash = this.hash(false);\n    // All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    if (this._homestead && new BN(this.s).cmp(N_DIV_2) === 1) {\n      return false;\n    }\n\n    try {\n      var v = ethUtil.bufferToInt(this.v);\n      if (this._chainId > 0) {\n        v -= this._chainId * 2 + 8;\n      }\n      this._senderPubKey = ethUtil.ecrecover(msgHash, v, this.r, this.s);\n    } catch (e) {\n      return false;\n    }\n\n    return !!this._senderPubKey;\n  };\n\n  /**\n   * sign a transaction with a given a private key\n   * @param {Buffer} privateKey\n   */\n\n\n  Transaction.prototype.sign = function sign(privateKey) {\n    var msgHash = this.hash(false);\n    var sig = ethUtil.ecsign(msgHash, privateKey);\n    if (this._chainId > 0) {\n      sig.v += this._chainId * 2 + 8;\n    }\n    Object.assign(this, sig);\n  };\n\n  /**\n   * The amount of gas paid for the data in this tx\n   * @return {BN}\n   */\n\n\n  Transaction.prototype.getDataFee = function getDataFee() {\n    var data = this.raw[5];\n    var cost = new BN(0);\n    for (var i = 0; i < data.length; i++) {\n      data[i] === 0 ? cost.iaddn(fees.txDataZeroGas.v) : cost.iaddn(fees.txDataNonZeroGas.v);\n    }\n    return cost;\n  };\n\n  /**\n   * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   * @return {BN}\n   */\n\n\n  Transaction.prototype.getBaseFee = function getBaseFee() {\n    var fee = this.getDataFee().iaddn(fees.txGas.v);\n    if (this._homestead && this.toCreationAddress()) {\n      fee.iaddn(fees.txCreation.v);\n    }\n    return fee;\n  };\n\n  /**\n   * the up front amount that an account must have for this transaction to be valid\n   * @return {BN}\n   */\n\n\n  Transaction.prototype.getUpfrontCost = function getUpfrontCost() {\n    return new BN(this.gasLimit).imul(new BN(this.gasPrice)).iadd(new BN(this.value));\n  };\n\n  /**\n   * validates the signature and checks to see if it has enough gas\n   * @param {Boolean} [stringError=false] whether to return a string with a dscription of why the validation failed or return a Bloolean\n   * @return {Boolean|String}\n   */\n\n\n  Transaction.prototype.validate = function validate(stringError) {\n    var errors = [];\n    if (!this.verifySignature()) {\n      errors.push('Invalid Signature');\n    }\n\n    if (this.getBaseFee().cmp(new BN(this.gasLimit)) > 0) {\n      errors.push(['gas limit is too low. Need at least ' + this.getBaseFee()]);\n    }\n\n    if (stringError === undefined || stringError === false) {\n      return errors.length === 0;\n    } else {\n      return errors.join(' ');\n    }\n  };\n\n  return Transaction;\n}();\n\nmodule.exports = Transaction;\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","ethUtil","fees","BN","N_DIV_2","Transaction","data","instance","TypeError","fields","name","length","allowLess","default","alias","allowZero","defineProperties","Object","defineProperty","enumerable","configurable","get","getSenderAddress","bind","sigV","bufferToInt","v","chainId","Math","floor","_chainId","_homestead","prototype","toCreationAddress","Transaction.prototype.toCreationAddress","to","toString","hash","Transaction.prototype.hash","includeSignature","undefined","items","raw","slice","s","r","rlphash","getChainId","Transaction.prototype.getChainId","Transaction.prototype.getSenderAddress","_from","pubkey","getSenderPublicKey","publicToAddress","Transaction.prototype.getSenderPublicKey","_senderPubKey","verifySignature","Error","Transaction.prototype.verifySignature","msgHash","cmp","ecrecover","e","sign","Transaction.prototype.sign","privateKey","sig","ecsign","assign","getDataFee","Transaction.prototype.getDataFee","cost","i","iaddn","txDataZeroGas","txDataNonZeroGas","getBaseFee","Transaction.prototype.getBaseFee","fee","txGas","txCreation","getUpfrontCost","Transaction.prototype.getUpfrontCost","gasLimit","imul","gasPrice","iadd","value","validate","Transaction.prototype.validate","stringError","errors","push","join"]
}
