{
"version":3,
"file":"module$node_modules$elliptic$lib$elliptic$curve$mont.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/elliptic/lib/elliptic/curve/mont.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$elliptic$lib$elliptic$curve$mont\"] = function(global,require,module,exports) {\n'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","MontCurve","conf","Base","call","a","BN","toRed","red","b","i4","redInvm","two","a24","redMul","redAdd","Point","curve","x","z","BasePoint","one","zero","inherits","utils","prototype","validate","MontCurve.prototype.validate","point","normalize","x2","redSqr","rhs","y","redSqrt","cmp","decodePoint","MontCurve.prototype.decodePoint","bytes","enc","toArray","MontCurve.prototype.point","pointFromJSON","MontCurve.prototype.pointFromJSON","obj","fromJSON","precompute","Point.prototype.precompute","_encode","Point.prototype._encode","getX","p","byteLength","Point.fromJSON","inspect","Point.prototype.inspect","isInfinity","fromRed","toString","Point.prototype.isInfinity","cmpn","dbl","Point.prototype.dbl","aa","bb","redSub","c","nx","nz","add","Point.prototype.add","Error","diffAdd","Point.prototype.diffAdd","diff","da","d","cb","redISub","mul","Point.prototype.mul","k","t","clone","bits","iushrn","push","andln","i","length","mulAdd","Point.prototype.mulAdd","jumlAdd","Point.prototype.jumlAdd","eq","Point.prototype.eq","other","Point.prototype.normalize","Point.prototype.getX"]
}
