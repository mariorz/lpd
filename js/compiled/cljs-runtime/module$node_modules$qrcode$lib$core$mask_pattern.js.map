{
"version":3,
"file":"module$node_modules$qrcode$lib$core$mask_pattern.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/qrcode/lib/core/mask-pattern.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$qrcode$lib$core$mask_pattern\"] = function(global,require,module,exports) {\n/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nvar PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  var size = data.size\n  var points = 0\n  var sameCountCol = 0\n  var sameCountRow = 0\n  var lastCol = null\n  var lastRow = null\n\n  for (var row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (var col = 0; col < size; col++) {\n      var module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  var size = data.size\n  var points = 0\n\n  for (var row = 0; row < size - 1; row++) {\n    for (var col = 0; col < size - 1; col++) {\n      var last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  var size = data.size\n  var points = 0\n  var bitsCol = 0\n  var bitsRow = 0\n\n  for (var row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (var col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  var darkCount = 0\n  var modulesCount = data.data.length\n\n  for (var i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  var k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  var size = data.size\n\n  for (var col = 0; col < size; col++) {\n    for (var row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  var numPatterns = Object.keys(exports.Patterns).length\n  var bestPattern = 0\n  var lowerPenalty = Infinity\n\n  for (var p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    var penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","getMaskAt","maskPattern","i","j","Patterns","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","Math","floor","PATTERN101","PATTERN110","PATTERN111","Error","isValid","exports.isValid","mask","isNaN","from","exports.from","value","parseInt","undefined","getPenaltyN1","exports.getPenaltyN1","data","size","points","sameCountCol","sameCountRow","lastCol","lastRow","row","col","get","N1","getPenaltyN2","exports.getPenaltyN2","last","N2","getPenaltyN3","exports.getPenaltyN3","bitsCol","bitsRow","N3","getPenaltyN4","exports.getPenaltyN4","darkCount","modulesCount","length","N4","k","abs","ceil","applyMask","exports.applyMask","pattern","isReserved","xor","getBestMask","exports.getBestMask","setupFormatFunc","numPatterns","Object","keys","bestPattern","lowerPenalty","Infinity","p","penalty"]
}
