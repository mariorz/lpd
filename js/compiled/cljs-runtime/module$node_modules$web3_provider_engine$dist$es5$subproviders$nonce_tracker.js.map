{
"version":3,
"file":"module$node_modules$web3_provider_engine$dist$es5$subproviders$nonce_tracker.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAe,4EAAf,CAAiG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuBzIC,QAASA,wBAAuB,CAACC,IAAD,CAAO,CAC1BC,IACX,CAAKC,UAAL,CAAkB,EAFmB,CAtBvC,IAAIC,OAASP,OAAA,CAAQ,kCAAR,CAATO,CAA2BA,MAC/B,aAEIC,OAAAA,CAAWR,OAAA,CAAQ,+BAAR,CAAXQ,CAA2BA,QAE/B,KAAIC,YAAcT,OAAA,CAAQ,6CAAR,CAAlB,CAEIU,QAAUV,OAAA,CAAQ,gDAAR,CAEVW,QAAAA,CAAcX,OAAA,CAAQ,4EAAR,CAElB;IAAIY,mBAAqBZ,OAAA,CAAQ,wEAAR,CAArBY,CAAwDA,kBAE5DX,OAAA,CAAOC,OAAP,CAAiBC,uBAOjBK,OAAA,CAASL,uBAAT,CAAkCQ,OAAlC,CAOAR,wBAAA,CAAwBU,SAAxB,CAAkCC,aAAlC,CAAkDC,QAAS,CAACC,OAAD,CAAUC,IAAV,CAAgBC,GAAhB,CAAqB,CAC9E,IAAIb,KAAO,IAEX,QAAQW,OAAR,CAAgBG,MAAhB,EACE,KAAK,yBAAL,CACE,IAAIC,SAAWR,kBAAA,CAAmBI,OAAnB,CAAf,CACIK,QAAUL,OAAA,CAAQM,MAAR,CAAe,CAAf,CAAA,CAAkBC,WAAlB,EADd,CAEIC,aAAenB,IAAA,CAAKC,UAAL,CAAgBe,OAAhB,CAEF,UAAjB,GAAID,QAAJ,CAEMI,YAAJ,CACEN,GAAA,CAAI,IAAJ;AAAUM,YAAV,CADF,CAGEP,IAAA,CAAK,QAAS,CAACQ,GAAD,CAAMC,MAAN,CAAcC,EAAd,CAAkB,CAC9B,GAAIF,GAAJ,CAAS,MAAOE,GAAA,EAEiBC,KAAAA,EAAjC,GAAIvB,IAAA,CAAKC,UAAL,CAAgBe,OAAhB,CAAJ,GACEhB,IAAA,CAAKC,UAAL,CAAgBe,OAAhB,CADF,CAC6BK,MAD7B,CAIAC,GAAA,EAP8B,CAAhC,CALJ,CAgBEV,IAAA,EAGF,MAEF,MAAK,wBAAL,CAEEA,IAAA,CAAK,QAAS,CAACQ,GAAD,CAAMC,MAAN,CAAcC,EAAd,CAAkB,CAE9B,GAAIF,GAAJ,CAAS,MAAOE,GAAA,EAEZE,IAAAA,CAAQb,OAAA,CAAQM,MAAR,CAAe,CAAf,CACGZ,QAAA,CAAQoB,cAAR,CAAuBD,GAAvB,CACDtB,OAAA,CAAOwB,IAAP,CAAYrB,OAAA,CAAQoB,cAAR,CAAuBD,GAAvB,CAAZ,CAA2C,KAA3C,CACVG,OAAAA,CAAK,IAAIvB,WAAJ,CAAgBF,MAAA,CAAOwB,IAAP,CAAYrB,OAAA,CAAQoB,cAAR,CAAuBD,GAAvB,CAAZ,CAA2C,KAA3C,CAAhB,CAELR,IAAAA,CAAU,IAAVA,CAAiBW,MAAA,CAAGC,gBAAH,EAAA,CAAsBC,QAAtB,CAA+B,KAA/B,CAAA,CAAsCX,WAAtC,EAEjBY,OAAAA,CAAQzB,OAAA,CAAQ0B,WAAR,CAAoBJ,MAApB,CAAuBG,KAAvB,CACZA;MAAA,EAEIE,OAAAA,CAAWF,MAAA,CAAMD,QAAN,CAAe,EAAf,CACXG,OAAJ,CAAaC,MAAb,CAAsB,CAAtB,GAAyBD,MAAzB,CAAoC,GAApC,CAA0CA,MAA1C,CAIAhC,KAAA,CAAKC,UAAL,CAAgBe,GAAhB,CAAA,CAHW,IAGX,CAHkBgB,MAIlBV,GAAA,EApB8B,CAAhC,CAsBA,MAGF,MAAK,YAAL,CACEtB,IAAA,CAAKC,UAAL,CAAkB,EAClBW,KAAA,EACA,MAEF,SACEA,IAAA,EA5DJ,CAH8E,CA5ByD;",
"sources":["node_modules/web3-provider-engine/dist/es5/subproviders/nonce-tracker.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_provider_engine$dist$es5$subproviders$nonce_tracker\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n\"use strict\";\n\nvar inherits = require('util').inherits;\n\nvar Transaction = require('ethereumjs-tx');\n\nvar ethUtil = require('ethereumjs-util');\n\nvar Subprovider = require('./subprovider.js');\n\nvar blockTagForPayload = require('../util/rpc-cache-utils').blockTagForPayload;\n\nmodule.exports = NonceTrackerSubprovider; // handles the following RPC methods:\n//   eth_getTransactionCount (pending only)\n//\n// observes the following RPC methods:\n//   eth_sendRawTransaction\n//   evm_revert (to clear the nonce cache)\n\ninherits(NonceTrackerSubprovider, Subprovider);\n\nfunction NonceTrackerSubprovider(opts) {\n  var self = this;\n  self.nonceCache = {};\n}\n\nNonceTrackerSubprovider.prototype.handleRequest = function (payload, next, end) {\n  var self = this;\n\n  switch (payload.method) {\n    case 'eth_getTransactionCount':\n      var blockTag = blockTagForPayload(payload);\n      var address = payload.params[0].toLowerCase();\n      var cachedResult = self.nonceCache[address]; // only handle requests against the 'pending' blockTag\n\n      if (blockTag === 'pending') {\n        // has a result\n        if (cachedResult) {\n          end(null, cachedResult); // fallthrough then populate cache\n        } else {\n          next(function (err, result, cb) {\n            if (err) return cb();\n\n            if (self.nonceCache[address] === undefined) {\n              self.nonceCache[address] = result;\n            }\n\n            cb();\n          });\n        }\n      } else {\n        next();\n      }\n\n      return;\n\n    case 'eth_sendRawTransaction':\n      // allow the request to continue normally\n      next(function (err, result, cb) {\n        // only update local nonce if tx was submitted correctly\n        if (err) return cb(); // parse raw tx\n\n        var rawTx = payload.params[0];\n        var stripped = ethUtil.stripHexPrefix(rawTx);\n        var rawData = Buffer.from(ethUtil.stripHexPrefix(rawTx), 'hex');\n        var tx = new Transaction(Buffer.from(ethUtil.stripHexPrefix(rawTx), 'hex')); // extract address\n\n        var address = '0x' + tx.getSenderAddress().toString('hex').toLowerCase(); // extract nonce and increment\n\n        var nonce = ethUtil.bufferToInt(tx.nonce);\n        nonce++; // hexify and normalize\n\n        var hexNonce = nonce.toString(16);\n        if (hexNonce.length % 2) hexNonce = '0' + hexNonce;\n        hexNonce = '0x' + hexNonce; // dont update our record on the nonce until the submit was successful\n        // update cache\n\n        self.nonceCache[address] = hexNonce;\n        cb();\n      });\n      return;\n    // Clear cache on a testrpc revert\n\n    case 'evm_revert':\n      self.nonceCache = {};\n      next();\n      return;\n\n    default:\n      next();\n      return;\n  }\n};\n};"],
"names":["shadow$provide","global","require","module","exports","NonceTrackerSubprovider","opts","self","nonceCache","Buffer","inherits","Transaction","ethUtil","Subprovider","blockTagForPayload","prototype","handleRequest","NonceTrackerSubprovider.prototype.handleRequest","payload","next","end","method","blockTag","address","params","toLowerCase","cachedResult","err","result","cb","undefined","rawTx","stripHexPrefix","from","tx","getSenderAddress","toString","nonce","bufferToInt","hexNonce","length"]
}
