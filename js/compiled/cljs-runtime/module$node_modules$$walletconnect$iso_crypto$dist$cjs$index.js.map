{
"version":3,
"file":"module$node_modules$$walletconnect$iso_crypto$dist$cjs$index.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@walletconnect/iso-crypto/dist/cjs/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$walletconnect$iso_crypto$dist$cjs$index\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decrypt = exports.encrypt = exports.verifyHmac = exports.generateKey = void 0;\nconst tslib_1 = require(\"tslib\");\nconst isoCrypto = tslib_1.__importStar(require(\"@pedrouid/iso-crypto\"));\nconst encUtils = tslib_1.__importStar(require(\"enc-utils\"));\nconst utils_1 = require(\"@walletconnect/utils\");\nfunction generateKey(length) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        const _length = (length || 256) / 8;\n        const bytes = isoCrypto.randomBytes(_length);\n        const result = utils_1.convertBufferToArrayBuffer(encUtils.arrayToBuffer(bytes));\n        return result;\n    });\n}\nexports.generateKey = generateKey;\nfunction verifyHmac(payload, key) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        const cipherText = encUtils.hexToArray(payload.data);\n        const iv = encUtils.hexToArray(payload.iv);\n        const hmac = encUtils.hexToArray(payload.hmac);\n        const hmacHex = encUtils.arrayToHex(hmac, false);\n        const unsigned = encUtils.concatArrays(cipherText, iv);\n        const chmac = yield isoCrypto.hmacSha256Sign(key, unsigned);\n        const chmacHex = encUtils.arrayToHex(chmac, false);\n        if (encUtils.removeHexPrefix(hmacHex) === encUtils.removeHexPrefix(chmacHex)) {\n            return true;\n        }\n        return false;\n    });\n}\nexports.verifyHmac = verifyHmac;\nfunction encrypt(data, key, providedIv) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        const _key = encUtils.bufferToArray(utils_1.convertArrayBufferToBuffer(key));\n        const ivArrayBuffer = providedIv || (yield generateKey(128));\n        const iv = encUtils.bufferToArray(utils_1.convertArrayBufferToBuffer(ivArrayBuffer));\n        const ivHex = encUtils.arrayToHex(iv, false);\n        const contentString = JSON.stringify(data);\n        const content = encUtils.utf8ToArray(contentString);\n        const cipherText = yield isoCrypto.aesCbcEncrypt(iv, _key, content);\n        const cipherTextHex = encUtils.arrayToHex(cipherText, false);\n        const unsigned = encUtils.concatArrays(cipherText, iv);\n        const hmac = yield isoCrypto.hmacSha256Sign(_key, unsigned);\n        const hmacHex = encUtils.arrayToHex(hmac, false);\n        return {\n            data: cipherTextHex,\n            hmac: hmacHex,\n            iv: ivHex,\n        };\n    });\n}\nexports.encrypt = encrypt;\nfunction decrypt(payload, key) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        const _key = encUtils.bufferToArray(utils_1.convertArrayBufferToBuffer(key));\n        if (!_key) {\n            throw new Error(\"Missing key: required for decryption\");\n        }\n        const verified = yield verifyHmac(payload, _key);\n        if (!verified) {\n            return null;\n        }\n        const cipherText = encUtils.hexToArray(payload.data);\n        const iv = encUtils.hexToArray(payload.iv);\n        const buffer = yield isoCrypto.aesCbcDecrypt(iv, _key, cipherText);\n        const utf8 = encUtils.arrayToUtf8(buffer);\n        let data;\n        try {\n            data = JSON.parse(utf8);\n        }\n        catch (error) {\n            return null;\n        }\n        return data;\n    });\n}\nexports.decrypt = decrypt;\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","generateKey","length","tslib_1","__awaiter","bytes","isoCrypto","randomBytes","utils_1","result","convertBufferToArrayBuffer","encUtils","arrayToBuffer","verifyHmac","payload","key","cipherText","hexToArray","data","iv","hmac","hmacHex","arrayToHex","unsigned","concatArrays","chmac","hmacSha256Sign","chmacHex","removeHexPrefix","Object","defineProperty","value","decrypt","encrypt","__importStar","providedIv","_key","bufferToArray","convertArrayBufferToBuffer","ivArrayBuffer","ivHex","contentString","JSON","stringify","content","utf8ToArray","aesCbcEncrypt","cipherTextHex","Error","verified","buffer","aesCbcDecrypt","utf8","arrayToUtf8","parse","error"]
}
