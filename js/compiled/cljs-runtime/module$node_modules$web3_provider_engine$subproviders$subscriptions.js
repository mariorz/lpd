shadow$provide.module$node_modules$web3_provider_engine$subproviders$subscriptions=function(global,require,module,exports){global=require("module$node_modules$web3_provider_engine$subproviders$json_rpc_engine_middleware");const createSubscriptionManager=require("module$node_modules$eth_json_rpc_filters$subscriptionManager");class SubscriptionsSubprovider extends global{constructor(){super(({blockTracker,provider,engine})=>{const {events,middleware}=createSubscriptionManager({blockTracker,provider});
events.on("notification",data=>engine.emit("data",null,data));return middleware})}}module.exports=SubscriptionsSubprovider}
//# sourceMappingURL=module$node_modules$web3_provider_engine$subproviders$subscriptions.js.map
