shadow$provide.module$node_modules$$webcarrot$xirr$cjs$index=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.calculateResult=function(flowsFrom1,r){return flowsFrom1.reduce(function(result,_a){return result+_a.amount/Math.pow(r,_a.date)},0)};exports.calculateResultDerivation=function(flowsFrom1,r){return flowsFrom1.reduce(function(result,_a){var date=_a.date;return result-date*_a.amount/Math.pow(r,date+1)},0)};exports.calculate=function(flows,
guessRate,maxEpsilon,maxScans,maxIterations){void 0===guessRate&&(guessRate=.1);void 0===maxEpsilon&&(maxEpsilon=1E-10);void 0===maxScans&&(maxScans=200);void 0===maxIterations&&(maxIterations=20);if(-1===flows.findIndex(function(_a){return 0<_a.amount}))throw new RangeError("No positive amount was found in cash flows");if(-1===flows.findIndex(function(_a){return 0>_a.amount}))throw new RangeError("No negative amount was found in cash flows");if(-1>=guessRate)throw new RangeError("Guess rate is less than or equal to -1");
if(0>=maxEpsilon)throw new RangeError("Max epsilon is less than or equal to 0");if(10>maxScans)throw new RangeError("Max scans is lower than 10");if(10>maxIterations)throw new RangeError("Max iterations is lower than 10");var iterationScan=0,doLoop=!1,firstFlowAmount=flows[0].amount,flowsFrom1=flows.slice(1);do{1<=iterationScan&&(guessRate=-.99+.01*(iterationScan-1));var iteration=maxIterations;do{flows=firstFlowAmount+exports.calculateResult(flowsFrom1,guessRate+1);doLoop=guessRate-flows/exports.calculateResultDerivation(flowsFrom1,
guessRate+1);var rateEpsilon=Math.abs(doLoop-guessRate);guessRate=doLoop;doLoop=rateEpsilon>maxEpsilon&&Math.abs(flows)>maxEpsilon}while(doLoop&&--iteration);doLoop=doLoop||isNaN(guessRate)||!isFinite(guessRate)||isNaN(flows)||!isFinite(flows)}while(doLoop&&!(++iterationScan<maxScans));if(doLoop)throw Error("XIRR calculation failed. Try to increase one of: max epsilon, max scans, max iterations");return guessRate};exports.normalize=function(flows){flows=flows.map(function(_a){return{amount:_a.amount,
date:_a.date.getTime()}}).sort(function(a,b){return a.date-b.date});var firstDate=flows[0].date;return flows.map(function(_a){return{amount:_a.amount,date:(_a.date-firstDate)/31536E6}})};exports.xirr=function(flows,guessRate,maxEpsilon,maxScans,maxIterations){return exports.calculate(exports.normalize(flows),guessRate,maxEpsilon,maxScans,maxIterations)}}
//# sourceMappingURL=module$node_modules$$webcarrot$xirr$cjs$index.js.map
