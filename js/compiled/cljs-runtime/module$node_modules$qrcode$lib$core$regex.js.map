{
"version":3,
"file":"module$node_modules$qrcode$lib$core$regex.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,yCAAf,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOtGC,MAAA,CAJYA,kNAIJ,CAAMC,OAAN,CAAc,IAAd,CAAoB,KAApB,CAIRF,QAAA,CAAQG,KAAR,CAAgB,IAAIC,MAAJ,CAAWH,MAAX,CAAkB,GAAlB,CAChBD,QAAA,CAAQK,UAAR,CAAqB,uBACrBL,QAAA,CAAQM,IAAR,CAAe,IAAIF,MAAJ,CAJJ,4BAII,CAJ2BH,MAI3B,CAJmC,iBAInC,CAAiB,GAAjB,CACfD,QAAA,CAAQO,OAAR;AAAkB,SAClBP,QAAA,CAAQQ,YAAR,CAAuB,mBAEvB,KAAIC,WAAa,IAAIL,MAAJ,CAAW,GAAX,CAAiBH,MAAjB,CAAyB,GAAzB,CAAjB,CACIS,aAAe,UADnB,CAEIC,kBAAoB,uBAExBX,QAAA,CAAQY,SAAR,CAAoBC,QAAmB,CAACC,GAAD,CAAM,CAC3C,MAAOL,WAAA,CAAWM,IAAX,CAAgBD,GAAhB,CADoC,CAI7Cd,QAAA,CAAQgB,WAAR,CAAsBC,QAAqB,CAACH,GAAD,CAAM,CAC/C,MAAOJ,aAAA,CAAaK,IAAb,CAAkBD,GAAlB,CADwC,CAIjDd,QAAA,CAAQkB,gBAAR,CAA2BC,QAA0B,CAACL,GAAD,CAAM,CACzD,MAAOH,kBAAA,CAAkBI,IAAlB,CAAuBD,GAAvB,CADkD,CA7B2C;",
"sources":["node_modules/qrcode/lib/core/regex.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$qrcode$lib$core$regex\"] = function(global,require,module,exports) {\nvar numeric = '[0-9]+'\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+'\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nvar TEST_KANJI = new RegExp('^' + kanji + '$')\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$')\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","kanji","replace","KANJI","RegExp","BYTE_KANJI","BYTE","NUMERIC","ALPHANUMERIC","TEST_KANJI","TEST_NUMERIC","TEST_ALPHANUMERIC","testKanji","exports.testKanji","str","test","testNumeric","exports.testNumeric","testAlphanumeric","exports.testAlphanumeric"]
}
