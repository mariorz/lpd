{
"version":3,
"file":"module$node_modules$axios$lib$cancel$CancelToken.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,gDAAf,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAW7GC,QAASA,YAAW,CAACC,QAAD,CAAW,CAC7B,GAAwB,UAAxB,GAAI,MAAOA,SAAX,CACE,KAAM,KAAIC,SAAJ,CAAc,8BAAd,CAAN,CAGF,IAAIC,cACJ,KAAA,CAAKC,OAAL,CAAe,IAAIC,OAAJ,CAAYC,QAAwB,CAACC,OAAD,CAAU,CAC3DJ,cAAA,CAAiBI,OAD0C,CAA9C,CAIf,KAAIC,MAAQ,IACZP,SAAA,CAASQ,QAAe,CAACC,OAAD,CAAU,CAC5BF,KAAJ,CAAUG,MAAV,GAKAH,KACA,CADMG,MACN,CADe,IAAIC,MAAJ,CAAWF,OAAX,CACf,CAAAP,cAAA,CAAeK,KAAf,CAAqBG,MAArB,CANA,CADgC,CAAlC,CAX6B,CAR/B,IAAIC,OAASf,OAAA,CAAQ,6CAAR,CAiCbG,YAAA,CAAYa,SAAZ,CAAsBC,gBAAtB;AAAyCC,QAAyB,EAAG,CACnE,GAAI,IAAJ,CAASJ,MAAT,CACE,KAAM,KAAN,CAAWA,MAAX,CAFiE,CAUrEX,YAAA,CAAYgB,MAAZ,CAAqBC,QAAe,EAAG,CACrC,IAAIR,MAIJ,OAAO,CACLD,MAJUA,IAAIR,WAAJQ,CAAgBP,QAAiB,CAACiB,CAAD,CAAI,CAC/CT,MAAA,CAASS,CADsC,CAArCV,CAGL,CAEGC,MAFH,CAL8B,CAWvCX,OAAA,CAAOC,OAAP,CAAiBC,WAzD4F;",
"sources":["node_modules/axios/lib/cancel/CancelToken.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$axios$lib$cancel$CancelToken\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n};"],
"names":["shadow$provide","global","require","module","exports","CancelToken","executor","TypeError","resolvePromise","promise","Promise","promiseExecutor","resolve","token","cancel","message","reason","Cancel","prototype","throwIfRequested","CancelToken.prototype.throwIfRequested","source","CancelToken.source","c"]
}
