{
"version":3,
"file":"module$node_modules$web3_provider_engine$subproviders$nonce_tracker.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAe,mEAAf,CAAwF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAmBhIC,QAASA,wBAAuB,CAACC,IAAD,CAAM,CACvBC,IAEb,CAAKC,UAAL,CAAkB,EAHkB,CAlBtC,IAAIC,OAASP,OAAA,CAAQ,kCAAR,CAATO,CAA2BA,MACzBC,OAAAA,CAAWR,OAAA,CAAQ,+BAAR,CAAXQ,CAA2BA,QACjC,OAAMC,YAAcT,OAAA,CAAQ,6CAAR,CAApB,CACMU,QAAUV,OAAA,CAAQ,gDAAR,CACVW,QAAAA,CAAcX,OAAA,CAAQ,mEAAR,CACpB;MAAMY,mBAAqBZ,OAAA,CAAQ,+DAAR,CAArBY,CAAwDA,kBAE9DX,OAAA,CAAOC,OAAP,CAAiBC,uBASjBK,OAAA,CAASL,uBAAT,CAAkCQ,OAAlC,CAQAR,wBAAA,CAAwBU,SAAxB,CAAkCC,aAAlC,CAAkDC,QAAQ,CAACC,OAAD,CAAUC,IAAV,CAAgBC,GAAhB,CAAoB,CAC5E,MAAMb,KAAO,IAEb,QAAOW,OAAP,CAAeG,MAAf,EAEE,KAAK,yBAAL,CACE,IAAIC,SAAWR,kBAAA,CAAmBI,OAAnB,CAAf,CACIK,QAAUL,OAAA,CAAQM,MAAR,CAAe,CAAf,CAAA,CAAkBC,WAAlB,EADd,CAEIC,aAAenB,IAAA,CAAKC,UAAL,CAAgBe,OAAhB,CAEF,UAAjB,GAAID,QAAJ,CAEMI,YAAJ,CACEN,GAAA,CAAI,IAAJ;AAAUM,YAAV,CADF,CAIEP,IAAA,CAAK,QAAQ,CAACQ,GAAD,CAAMC,MAAN,CAAcC,EAAd,CAAiB,CAC5B,GAAIF,GAAJ,CAAS,MAAOE,GAAA,EACiBC,KAAAA,EAAjC,GAAIvB,IAAA,CAAKC,UAAL,CAAgBe,OAAhB,CAAJ,GACEhB,IAAA,CAAKC,UAAL,CAAgBe,OAAhB,CADF,CAC6BK,MAD7B,CAGAC,GAAA,EAL4B,CAA9B,CANJ,CAeEV,IAAA,EAEF,MAEF,MAAK,wBAAL,CAEEA,IAAA,CAAK,QAAQ,CAACQ,GAAD,CAAMC,MAAN,CAAcC,EAAd,CAAiB,CAE5B,GAAIF,GAAJ,CAAS,MAAOE,GAAA,EAEZE,IAAAA,CAAQb,OAAA,CAAQM,MAAR,CAAe,CAAf,CACGZ,QAAA,CAAQoB,cAAR,CAAuBD,GAAvB,CACDtB,OAAA,CAAOwB,IAAP,CAAYrB,OAAA,CAAQoB,cAAR,CAAuBD,GAAvB,CAAZ,CAA2C,KAA3C,CACVG,OAAAA,CAAK,IAAIvB,WAAJ,CAAgBF,MAAA,CAAOwB,IAAP,CAAYrB,OAAA,CAAQoB,cAAR,CAAuBD,GAAvB,CAAZ,CAA2C,KAA3C,CAAhB,CAELR,IAAAA,CAAU,IAAVA,CAAeW,MAAA,CAAGC,gBAAH,EAAA,CAAsBC,QAAtB,CAA+B,KAA/B,CAAA,CAAsCX,WAAtC,EAEfY,OAAAA,CAAQzB,OAAA,CAAQ0B,WAAR,CAAoBJ,MAApB,CAAuBG,KAAvB,CACZA;MAAA,EAEIE,OAAAA,CAAWF,MAAA,CAAMD,QAAN,CAAe,EAAf,CACXG,OAAJ,CAAaC,MAAb,CAAoB,CAApB,GAAuBD,MAAvB,CAAkC,GAAlC,CAAsCA,MAAtC,CAIAhC,KAAA,CAAKC,UAAL,CAAgBe,GAAhB,CAAA,CAHW,IAGX,CAHgBgB,MAIhBV,GAAA,EApB4B,CAA9B,CAsBA,MAGH,MAAK,YAAL,CACGtB,IAAA,CAAKC,UAAL,CAAkB,EAClBW,KAAA,EACA,MAEF,SACEA,IAAA,EA3DJ,CAH4E,CAzBkD;",
"sources":["node_modules/web3-provider-engine/subproviders/nonce-tracker.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_provider_engine$subproviders$nonce_tracker\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\nconst inherits = require('util').inherits\nconst Transaction = require('ethereumjs-tx')\nconst ethUtil = require('ethereumjs-util')\nconst Subprovider = require('./subprovider.js')\nconst blockTagForPayload = require('../util/rpc-cache-utils').blockTagForPayload\n\nmodule.exports = NonceTrackerSubprovider\n\n// handles the following RPC methods:\n//   eth_getTransactionCount (pending only)\n//\n// observes the following RPC methods:\n//   eth_sendRawTransaction\n//   evm_revert (to clear the nonce cache)\n\ninherits(NonceTrackerSubprovider, Subprovider)\n\nfunction NonceTrackerSubprovider(opts){\n  const self = this\n\n  self.nonceCache = {}\n}\n\nNonceTrackerSubprovider.prototype.handleRequest = function(payload, next, end){\n  const self = this\n\n  switch(payload.method) {\n\n    case 'eth_getTransactionCount':\n      var blockTag = blockTagForPayload(payload)\n      var address = payload.params[0].toLowerCase()\n      var cachedResult = self.nonceCache[address]\n      // only handle requests against the 'pending' blockTag\n      if (blockTag === 'pending') {\n        // has a result\n        if (cachedResult) {\n          end(null, cachedResult)\n        // fallthrough then populate cache\n        } else {\n          next(function(err, result, cb){\n            if (err) return cb()\n            if (self.nonceCache[address] === undefined) {\n              self.nonceCache[address] = result\n            }\n            cb()\n          })\n        }\n      } else {\n        next()\n      }\n      return\n\n    case 'eth_sendRawTransaction':\n      // allow the request to continue normally\n      next(function(err, result, cb){\n        // only update local nonce if tx was submitted correctly\n        if (err) return cb()\n        // parse raw tx\n        var rawTx = payload.params[0]\n        var stripped = ethUtil.stripHexPrefix(rawTx)\n        var rawData = Buffer.from(ethUtil.stripHexPrefix(rawTx), 'hex')\n        var tx = new Transaction(Buffer.from(ethUtil.stripHexPrefix(rawTx), 'hex'))\n        // extract address\n        var address = '0x'+tx.getSenderAddress().toString('hex').toLowerCase()\n        // extract nonce and increment\n        var nonce = ethUtil.bufferToInt(tx.nonce)\n        nonce++\n        // hexify and normalize\n        var hexNonce = nonce.toString(16)\n        if (hexNonce.length%2) hexNonce = '0'+hexNonce\n        hexNonce = '0x'+hexNonce\n        // dont update our record on the nonce until the submit was successful\n        // update cache\n        self.nonceCache[address] = hexNonce\n        cb()\n      })\n      return\n\n   // Clear cache on a testrpc revert\n   case 'evm_revert':\n      self.nonceCache = {}\n      next()\n      return\n\n    default:\n      next()\n      return\n\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","NonceTrackerSubprovider","opts","self","nonceCache","Buffer","inherits","Transaction","ethUtil","Subprovider","blockTagForPayload","prototype","handleRequest","NonceTrackerSubprovider.prototype.handleRequest","payload","next","end","method","blockTag","address","params","toLowerCase","cachedResult","err","result","cb","undefined","rawTx","stripHexPrefix","from","tx","getSenderAddress","toString","nonce","bufferToInt","hexNonce","length"]
}
