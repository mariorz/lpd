{
"version":3,
"file":"module$node_modules$$walletconnect$core$dist$cjs$index.js",
"lineCount":38,
"mappings":"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",
"sources":["node_modules/@walletconnect/core/dist/cjs/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$walletconnect$core$dist$cjs$index\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst utils_1 = require(\"@walletconnect/utils\");\nconst socket_transport_1 = tslib_1.__importDefault(require(\"@walletconnect/socket-transport\"));\nconst errors_1 = require(\"./errors\");\nconst events_1 = tslib_1.__importDefault(require(\"./events\"));\nconst storage_1 = tslib_1.__importDefault(require(\"./storage\"));\nclass Connector {\n    constructor(opts) {\n        this.protocol = \"wc\";\n        this.version = 1;\n        this._bridge = \"\";\n        this._key = null;\n        this._clientId = \"\";\n        this._clientMeta = null;\n        this._peerId = \"\";\n        this._peerMeta = null;\n        this._handshakeId = 0;\n        this._handshakeTopic = \"\";\n        this._connected = false;\n        this._accounts = [];\n        this._chainId = 0;\n        this._networkId = 0;\n        this._rpcUrl = \"\";\n        this._eventManager = new events_1.default();\n        this._clientMeta = utils_1.getClientMeta() || opts.connectorOpts.clientMeta || null;\n        this._cryptoLib = opts.cryptoLib;\n        this._sessionStorage = opts.sessionStorage || new storage_1.default();\n        this._qrcodeModal = opts.connectorOpts.qrcodeModal;\n        this._qrcodeModalOptions = opts.connectorOpts.qrcodeModalOptions;\n        if (!opts.connectorOpts.bridge && !opts.connectorOpts.uri && !opts.connectorOpts.session) {\n            throw new Error(errors_1.ERROR_MISSING_REQUIRED);\n        }\n        if (opts.connectorOpts.bridge) {\n            this.bridge = opts.connectorOpts.bridge;\n        }\n        if (opts.connectorOpts.uri) {\n            this.uri = opts.connectorOpts.uri;\n        }\n        const session = opts.connectorOpts.session || this._getStorageSession();\n        if (session) {\n            this.session = session;\n        }\n        if (this.handshakeId) {\n            this._subscribeToSessionResponse(this.handshakeId, \"Session request rejected\");\n        }\n        this._transport =\n            opts.transport ||\n                new socket_transport_1.default({\n                    protocol: this.protocol,\n                    version: this.version,\n                    url: this.bridge,\n                    subscriptions: [this.clientId],\n                });\n        this._subscribeToInternalEvents();\n        this._initTransport();\n        if (opts.connectorOpts.uri) {\n            this._subscribeToSessionRequest();\n        }\n        if (opts.pushServerOpts) {\n            this._registerPushServer(opts.pushServerOpts);\n        }\n    }\n    set bridge(value) {\n        if (!value) {\n            return;\n        }\n        this._bridge = value;\n    }\n    get bridge() {\n        return this._bridge;\n    }\n    set key(value) {\n        if (!value) {\n            return;\n        }\n        const key = utils_1.convertHexToArrayBuffer(value);\n        this._key = key;\n    }\n    get key() {\n        if (this._key) {\n            const key = utils_1.convertArrayBufferToHex(this._key, true);\n            return key;\n        }\n        return \"\";\n    }\n    set clientId(value) {\n        if (!value) {\n            return;\n        }\n        this._clientId = value;\n    }\n    get clientId() {\n        let clientId = this._clientId;\n        if (!clientId) {\n            clientId = this._clientId = utils_1.uuid();\n        }\n        return this._clientId;\n    }\n    set peerId(value) {\n        if (!value) {\n            return;\n        }\n        this._peerId = value;\n    }\n    get peerId() {\n        return this._peerId;\n    }\n    set clientMeta(value) {\n    }\n    get clientMeta() {\n        let clientMeta = this._clientMeta;\n        if (!clientMeta) {\n            clientMeta = this._clientMeta = utils_1.getClientMeta();\n        }\n        return clientMeta;\n    }\n    set peerMeta(value) {\n        this._peerMeta = value;\n    }\n    get peerMeta() {\n        const peerMeta = this._peerMeta;\n        return peerMeta;\n    }\n    set handshakeTopic(value) {\n        if (!value) {\n            return;\n        }\n        this._handshakeTopic = value;\n    }\n    get handshakeTopic() {\n        return this._handshakeTopic;\n    }\n    set handshakeId(value) {\n        if (!value) {\n            return;\n        }\n        this._handshakeId = value;\n    }\n    get handshakeId() {\n        return this._handshakeId;\n    }\n    get uri() {\n        const _uri = this._formatUri();\n        return _uri;\n    }\n    set uri(value) {\n        if (!value) {\n            return;\n        }\n        const { handshakeTopic, bridge, key } = this._parseUri(value);\n        this.handshakeTopic = handshakeTopic;\n        this.bridge = bridge;\n        this.key = key;\n    }\n    set chainId(value) {\n        this._chainId = value;\n    }\n    get chainId() {\n        const chainId = this._chainId;\n        return chainId;\n    }\n    set networkId(value) {\n        this._networkId = value;\n    }\n    get networkId() {\n        const networkId = this._networkId;\n        return networkId;\n    }\n    set accounts(value) {\n        this._accounts = value;\n    }\n    get accounts() {\n        const accounts = this._accounts;\n        return accounts;\n    }\n    set rpcUrl(value) {\n        this._rpcUrl = value;\n    }\n    get rpcUrl() {\n        const rpcUrl = this._rpcUrl;\n        return rpcUrl;\n    }\n    set connected(value) {\n    }\n    get connected() {\n        return this._connected;\n    }\n    set pending(value) {\n    }\n    get pending() {\n        return !!this._handshakeTopic;\n    }\n    get session() {\n        return {\n            connected: this.connected,\n            accounts: this.accounts,\n            chainId: this.chainId,\n            bridge: this.bridge,\n            key: this.key,\n            clientId: this.clientId,\n            clientMeta: this.clientMeta,\n            peerId: this.peerId,\n            peerMeta: this.peerMeta,\n            handshakeId: this.handshakeId,\n            handshakeTopic: this.handshakeTopic,\n        };\n    }\n    set session(value) {\n        if (!value) {\n            return;\n        }\n        this._connected = value.connected;\n        this.accounts = value.accounts;\n        this.chainId = value.chainId;\n        this.bridge = value.bridge;\n        this.key = value.key;\n        this.clientId = value.clientId;\n        this.clientMeta = value.clientMeta;\n        this.peerId = value.peerId;\n        this.peerMeta = value.peerMeta;\n        this.handshakeId = value.handshakeId;\n        this.handshakeTopic = value.handshakeTopic;\n    }\n    on(event, callback) {\n        const eventEmitter = {\n            event,\n            callback,\n        };\n        this._eventManager.subscribe(eventEmitter);\n    }\n    createInstantRequest(instantRequest) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this._key = yield this._generateKey();\n            const request = this._formatRequest({\n                method: \"wc_instantRequest\",\n                params: [\n                    {\n                        peerId: this.clientId,\n                        peerMeta: this.clientMeta,\n                        request: this._formatRequest(instantRequest),\n                    },\n                ],\n            });\n            this.handshakeId = request.id;\n            this.handshakeTopic = utils_1.uuid();\n            this._eventManager.trigger({\n                event: \"display_uri\",\n                params: [this.uri],\n            });\n            this.on(\"modal_closed\", () => {\n                throw new Error(errors_1.ERROR_QRCODE_MODAL_USER_CLOSED);\n            });\n            const endInstantRequest = () => {\n                this.killSession();\n            };\n            try {\n                const result = yield this._sendCallRequest(request);\n                if (result) {\n                    endInstantRequest();\n                }\n                return result;\n            }\n            catch (error) {\n                endInstantRequest();\n                throw error;\n            }\n        });\n    }\n    connect(opts) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this._qrcodeModal) {\n                throw new Error(errors_1.ERROR_QRCODE_MODAL_NOT_PROVIDED);\n            }\n            if (this.connected) {\n                return {\n                    chainId: this.chainId,\n                    accounts: this.accounts,\n                };\n            }\n            yield this.createSession(opts);\n            return new Promise((resolve, reject) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                this.on(\"modal_closed\", () => reject(new Error(errors_1.ERROR_QRCODE_MODAL_USER_CLOSED)));\n                this.on(\"connect\", (error, payload) => {\n                    if (error) {\n                        return reject(error);\n                    }\n                    resolve(payload.params[0]);\n                });\n            }));\n        });\n    }\n    createSession(opts) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this._connected) {\n                throw new Error(errors_1.ERROR_SESSION_CONNECTED);\n            }\n            if (this.pending) {\n                return;\n            }\n            this._key = yield this._generateKey();\n            const request = this._formatRequest({\n                method: \"wc_sessionRequest\",\n                params: [\n                    {\n                        peerId: this.clientId,\n                        peerMeta: this.clientMeta,\n                        chainId: opts && opts.chainId ? opts.chainId : null,\n                    },\n                ],\n            });\n            this.handshakeId = request.id;\n            this.handshakeTopic = utils_1.uuid();\n            this._sendSessionRequest(request, \"Session update rejected\", {\n                topic: this.handshakeTopic,\n            });\n            this._eventManager.trigger({\n                event: \"display_uri\",\n                params: [this.uri],\n            });\n        });\n    }\n    approveSession(sessionStatus) {\n        if (this._connected) {\n            throw new Error(errors_1.ERROR_SESSION_CONNECTED);\n        }\n        this.chainId = sessionStatus.chainId;\n        this.accounts = sessionStatus.accounts;\n        this.networkId = sessionStatus.networkId || 0;\n        this.rpcUrl = sessionStatus.rpcUrl || \"\";\n        const sessionParams = {\n            approved: true,\n            chainId: this.chainId,\n            networkId: this.networkId,\n            accounts: this.accounts,\n            rpcUrl: this.rpcUrl,\n            peerId: this.clientId,\n            peerMeta: this.clientMeta,\n        };\n        const response = {\n            id: this.handshakeId,\n            jsonrpc: \"2.0\",\n            result: sessionParams,\n        };\n        this._sendResponse(response);\n        this._connected = true;\n        this._setStorageSession();\n        this._eventManager.trigger({\n            event: \"connect\",\n            params: [\n                {\n                    peerId: this.peerId,\n                    peerMeta: this.peerMeta,\n                    chainId: this.chainId,\n                    accounts: this.accounts,\n                },\n            ],\n        });\n    }\n    rejectSession(sessionError) {\n        if (this._connected) {\n            throw new Error(errors_1.ERROR_SESSION_CONNECTED);\n        }\n        const message = sessionError && sessionError.message ? sessionError.message : errors_1.ERROR_SESSION_REJECTED;\n        const response = this._formatResponse({\n            id: this.handshakeId,\n            error: { message },\n        });\n        this._sendResponse(response);\n        this._connected = false;\n        this._eventManager.trigger({\n            event: \"disconnect\",\n            params: [{ message }],\n        });\n        this._removeStorageSession();\n    }\n    updateSession(sessionStatus) {\n        if (!this._connected) {\n            throw new Error(errors_1.ERROR_SESSION_DISCONNECTED);\n        }\n        this.chainId = sessionStatus.chainId;\n        this.accounts = sessionStatus.accounts;\n        this.networkId = sessionStatus.networkId || 0;\n        this.rpcUrl = sessionStatus.rpcUrl || \"\";\n        const sessionParams = {\n            approved: true,\n            chainId: this.chainId,\n            networkId: this.networkId,\n            accounts: this.accounts,\n            rpcUrl: this.rpcUrl,\n        };\n        const request = this._formatRequest({\n            method: \"wc_sessionUpdate\",\n            params: [sessionParams],\n        });\n        this._sendSessionRequest(request, \"Session update rejected\");\n        this._eventManager.trigger({\n            event: \"session_update\",\n            params: [\n                {\n                    chainId: this.chainId,\n                    accounts: this.accounts,\n                },\n            ],\n        });\n        this._manageStorageSession();\n    }\n    killSession(sessionError) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const message = sessionError ? sessionError.message : \"Session Disconnected\";\n            const sessionParams = {\n                approved: false,\n                chainId: null,\n                networkId: null,\n                accounts: null,\n            };\n            const request = this._formatRequest({\n                method: \"wc_sessionUpdate\",\n                params: [sessionParams],\n            });\n            yield this._sendRequest(request);\n            this._handleSessionDisconnect(message);\n        });\n    }\n    sendTransaction(tx) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this._connected) {\n                throw new Error(errors_1.ERROR_SESSION_DISCONNECTED);\n            }\n            const parsedTx = utils_1.parseTransactionData(tx);\n            const request = this._formatRequest({\n                method: \"eth_sendTransaction\",\n                params: [parsedTx],\n            });\n            const result = yield this._sendCallRequest(request);\n            return result;\n        });\n    }\n    signTransaction(tx) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this._connected) {\n                throw new Error(errors_1.ERROR_SESSION_DISCONNECTED);\n            }\n            const parsedTx = utils_1.parseTransactionData(tx);\n            const request = this._formatRequest({\n                method: \"eth_signTransaction\",\n                params: [parsedTx],\n            });\n            const result = yield this._sendCallRequest(request);\n            return result;\n        });\n    }\n    signMessage(params) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this._connected) {\n                throw new Error(errors_1.ERROR_SESSION_DISCONNECTED);\n            }\n            const request = this._formatRequest({\n                method: \"eth_sign\",\n                params,\n            });\n            const result = yield this._sendCallRequest(request);\n            return result;\n        });\n    }\n    signPersonalMessage(params) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this._connected) {\n                throw new Error(errors_1.ERROR_SESSION_DISCONNECTED);\n            }\n            params = utils_1.parsePersonalSign(params);\n            const request = this._formatRequest({\n                method: \"personal_sign\",\n                params,\n            });\n            const result = yield this._sendCallRequest(request);\n            return result;\n        });\n    }\n    signTypedData(params) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this._connected) {\n                throw new Error(errors_1.ERROR_SESSION_DISCONNECTED);\n            }\n            const request = this._formatRequest({\n                method: \"eth_signTypedData\",\n                params,\n            });\n            const result = yield this._sendCallRequest(request);\n            return result;\n        });\n    }\n    updateChain(chainParams) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this._connected) {\n                throw new Error(\"Session currently disconnected\");\n            }\n            const request = this._formatRequest({\n                method: \"wallet_updateChain\",\n                params: [chainParams],\n            });\n            const result = yield this._sendCallRequest(request);\n            return result;\n        });\n    }\n    unsafeSend(request, options) {\n        this._sendRequest(request, options);\n        return new Promise((resolve, reject) => {\n            this._subscribeToResponse(request.id, (error, payload) => {\n                if (error) {\n                    reject(error);\n                    return;\n                }\n                if (!payload) {\n                    throw new Error(errors_1.ERROR_MISSING_JSON_RPC);\n                }\n                resolve(payload);\n            });\n        });\n    }\n    sendCustomRequest(request, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this._connected) {\n                throw new Error(errors_1.ERROR_SESSION_DISCONNECTED);\n            }\n            switch (request.method) {\n                case \"eth_accounts\":\n                    return this.accounts;\n                case \"eth_chainId\":\n                    return utils_1.convertNumberToHex(this.chainId);\n                case \"eth_sendTransaction\":\n                case \"eth_signTransaction\":\n                    if (request.params) {\n                        request.params[0] = utils_1.parseTransactionData(request.params[0]);\n                    }\n                    break;\n                case \"personal_sign\":\n                    if (request.params) {\n                        request.params = utils_1.parsePersonalSign(request.params);\n                    }\n                    break;\n                default:\n                    break;\n            }\n            const formattedRequest = this._formatRequest(request);\n            const result = yield this._sendCallRequest(formattedRequest, options);\n            return result;\n        });\n    }\n    approveRequest(response) {\n        if (utils_1.isJsonRpcResponseSuccess(response)) {\n            const formattedResponse = this._formatResponse(response);\n            this._sendResponse(formattedResponse);\n        }\n        else {\n            throw new Error(errors_1.ERROR_MISSING_RESULT);\n        }\n    }\n    rejectRequest(response) {\n        if (utils_1.isJsonRpcResponseError(response)) {\n            const formattedResponse = this._formatResponse(response);\n            this._sendResponse(formattedResponse);\n        }\n        else {\n            throw new Error(errors_1.ERROR_MISSING_ERROR);\n        }\n    }\n    _sendRequest(request, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const callRequest = this._formatRequest(request);\n            const encryptionPayload = yield this._encrypt(callRequest);\n            const topic = typeof (options === null || options === void 0 ? void 0 : options.topic) !== \"undefined\" ? options.topic : this.peerId;\n            const payload = JSON.stringify(encryptionPayload);\n            const silent = typeof (options === null || options === void 0 ? void 0 : options.forcePushNotification) !== \"undefined\"\n                ? !options.forcePushNotification\n                : utils_1.isSilentPayload(callRequest);\n            this._transport.send(payload, topic, silent);\n        });\n    }\n    _sendResponse(response) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const encryptionPayload = yield this._encrypt(response);\n            const topic = this.peerId;\n            const payload = JSON.stringify(encryptionPayload);\n            const silent = true;\n            this._transport.send(payload, topic, silent);\n        });\n    }\n    _sendSessionRequest(request, errorMsg, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this._sendRequest(request, options);\n            this._subscribeToSessionResponse(request.id, errorMsg);\n        });\n    }\n    _sendCallRequest(request, options) {\n        this._sendRequest(request, options);\n        this._eventManager.trigger({\n            event: \"call_request_sent\",\n            params: [{ request, options }],\n        });\n        if (utils_1.isMobile() && utils_1.signingMethods.includes(request.method)) {\n            const mobileLinkUrl = utils_1.getLocal(utils_1.mobileLinkChoiceKey);\n            if (mobileLinkUrl) {\n                window.location.href = mobileLinkUrl.href;\n            }\n        }\n        return this._subscribeToCallResponse(request.id);\n    }\n    _formatRequest(request) {\n        if (typeof request.method === \"undefined\") {\n            throw new Error(errors_1.ERROR_MISSING_METHOD);\n        }\n        const formattedRequest = {\n            id: typeof request.id === \"undefined\" ? utils_1.payloadId() : request.id,\n            jsonrpc: \"2.0\",\n            method: request.method,\n            params: typeof request.params === \"undefined\" ? [] : request.params,\n        };\n        return formattedRequest;\n    }\n    _formatResponse(response) {\n        if (typeof response.id === \"undefined\") {\n            throw new Error(errors_1.ERROR_MISSING_ID);\n        }\n        const baseResponse = { id: response.id, jsonrpc: \"2.0\" };\n        if (utils_1.isJsonRpcResponseError(response)) {\n            const error = utils_1.formatRpcError(response.error);\n            const errorResponse = Object.assign(Object.assign(Object.assign({}, baseResponse), response), { error });\n            return errorResponse;\n        }\n        else if (utils_1.isJsonRpcResponseSuccess(response)) {\n            const successResponse = Object.assign(Object.assign({}, baseResponse), response);\n            return successResponse;\n        }\n        throw new Error(errors_1.ERROR_INVALID_RESPONSE);\n    }\n    _handleSessionDisconnect(errorMsg) {\n        const message = errorMsg || \"Session Disconnected\";\n        if (!this._connected) {\n            if (this._qrcodeModal) {\n                this._qrcodeModal.close();\n            }\n            utils_1.removeLocal(utils_1.mobileLinkChoiceKey);\n        }\n        if (this._connected) {\n            this._connected = false;\n        }\n        if (this._handshakeId) {\n            this._handshakeId = 0;\n        }\n        if (this._handshakeTopic) {\n            this._handshakeTopic = \"\";\n        }\n        this._eventManager.trigger({\n            event: \"disconnect\",\n            params: [{ message }],\n        });\n        this._removeStorageSession();\n        this._transport.close();\n    }\n    _handleSessionResponse(errorMsg, sessionParams) {\n        if (sessionParams) {\n            if (sessionParams.approved) {\n                if (!this._connected) {\n                    this._connected = true;\n                    if (sessionParams.chainId) {\n                        this.chainId = sessionParams.chainId;\n                    }\n                    if (sessionParams.accounts) {\n                        this.accounts = sessionParams.accounts;\n                    }\n                    if (sessionParams.peerId && !this.peerId) {\n                        this.peerId = sessionParams.peerId;\n                    }\n                    if (sessionParams.peerMeta && !this.peerMeta) {\n                        this.peerMeta = sessionParams.peerMeta;\n                    }\n                    this._eventManager.trigger({\n                        event: \"connect\",\n                        params: [\n                            {\n                                peerId: this.peerId,\n                                peerMeta: this.peerMeta,\n                                chainId: this.chainId,\n                                accounts: this.accounts,\n                            },\n                        ],\n                    });\n                }\n                else {\n                    if (sessionParams.chainId) {\n                        this.chainId = sessionParams.chainId;\n                    }\n                    if (sessionParams.accounts) {\n                        this.accounts = sessionParams.accounts;\n                    }\n                    this._eventManager.trigger({\n                        event: \"session_update\",\n                        params: [\n                            {\n                                chainId: this.chainId,\n                                accounts: this.accounts,\n                            },\n                        ],\n                    });\n                }\n                this._manageStorageSession();\n            }\n            else {\n                this._handleSessionDisconnect(errorMsg);\n            }\n        }\n        else {\n            this._handleSessionDisconnect(errorMsg);\n        }\n    }\n    _handleIncomingMessages(socketMessage) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const activeTopics = [this.clientId, this.handshakeTopic];\n            if (!activeTopics.includes(socketMessage.topic)) {\n                return;\n            }\n            let encryptionPayload;\n            try {\n                encryptionPayload = JSON.parse(socketMessage.payload);\n            }\n            catch (error) {\n                return;\n            }\n            const payload = yield this._decrypt(encryptionPayload);\n            if (payload) {\n                this._eventManager.trigger(payload);\n            }\n        });\n    }\n    _subscribeToSessionRequest() {\n        this._transport.subscribe(this.handshakeTopic);\n    }\n    _subscribeToResponse(id, callback) {\n        this.on(`response:${id}`, callback);\n    }\n    _subscribeToSessionResponse(id, errorMsg) {\n        this._subscribeToResponse(id, (error, payload) => {\n            if (error) {\n                this._handleSessionResponse(error.message);\n                return;\n            }\n            if (payload.result) {\n                this._handleSessionResponse(errorMsg, payload.result);\n            }\n            else if (payload.error && payload.error.message) {\n                this._handleSessionResponse(payload.error.message);\n            }\n            else {\n                this._handleSessionResponse(errorMsg);\n            }\n        });\n    }\n    _subscribeToCallResponse(id) {\n        return new Promise((resolve, reject) => {\n            this._subscribeToResponse(id, (error, payload) => {\n                if (error) {\n                    reject(error);\n                    return;\n                }\n                if (payload.result) {\n                    resolve(payload.result);\n                }\n                else if (payload.error && payload.error.message) {\n                    reject(new Error(payload.error.message));\n                }\n                else {\n                    reject(new Error(errors_1.ERROR_INVALID_RESPONSE));\n                }\n            });\n        });\n    }\n    _subscribeToInternalEvents() {\n        this.on(\"display_uri\", () => {\n            if (this._qrcodeModal) {\n                this._qrcodeModal.open(this.uri, () => {\n                    this._eventManager.trigger({\n                        event: \"modal_closed\",\n                        params: [],\n                    });\n                }, this._qrcodeModalOptions);\n            }\n        });\n        this.on(\"connect\", () => {\n            if (this._qrcodeModal) {\n                this._qrcodeModal.close();\n            }\n        });\n        this.on(\"wc_sessionRequest\", (error, payload) => {\n            if (error) {\n                this._eventManager.trigger({\n                    event: \"error\",\n                    params: [\n                        {\n                            code: \"SESSION_REQUEST_ERROR\",\n                            message: error.toString(),\n                        },\n                    ],\n                });\n            }\n            this.handshakeId = payload.id;\n            this.peerId = payload.params[0].peerId;\n            this.peerMeta = payload.params[0].peerMeta;\n            const internalPayload = Object.assign(Object.assign({}, payload), { method: \"session_request\" });\n            this._eventManager.trigger(internalPayload);\n        });\n        this.on(\"wc_sessionUpdate\", (error, payload) => {\n            if (error) {\n                this._handleSessionResponse(error.message);\n            }\n            this._handleSessionResponse(\"Session disconnected\", payload.params[0]);\n        });\n    }\n    _initTransport() {\n        this._transport.on(\"message\", (socketMessage) => this._handleIncomingMessages(socketMessage));\n        this._transport.on(\"open\", () => this._eventManager.trigger({ event: \"transport_open\", params: [] }));\n        this._transport.on(\"close\", () => this._eventManager.trigger({ event: \"transport_close\", params: [] }));\n        this._transport.on(\"error\", () => this._eventManager.trigger({\n            event: \"transport_error\",\n            params: [\"Websocket connection failed\"],\n        }));\n        this._transport.open();\n    }\n    _formatUri() {\n        const protocol = this.protocol;\n        const handshakeTopic = this.handshakeTopic;\n        const version = this.version;\n        const bridge = encodeURIComponent(this.bridge);\n        const key = this.key;\n        const uri = `${protocol}:${handshakeTopic}@${version}?bridge=${bridge}&key=${key}`;\n        return uri;\n    }\n    _parseUri(uri) {\n        const result = utils_1.parseWalletConnectUri(uri);\n        if (result.protocol === this.protocol) {\n            if (!result.handshakeTopic) {\n                throw Error(\"Invalid or missing handshakeTopic parameter value\");\n            }\n            const handshakeTopic = result.handshakeTopic;\n            if (!result.bridge) {\n                throw Error(\"Invalid or missing bridge url parameter value\");\n            }\n            const bridge = decodeURIComponent(result.bridge);\n            if (!result.key) {\n                throw Error(\"Invalid or missing key parameter value\");\n            }\n            const key = result.key;\n            return { handshakeTopic, bridge, key };\n        }\n        else {\n            throw new Error(errors_1.ERROR_INVALID_URI);\n        }\n    }\n    _generateKey() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this._cryptoLib) {\n                const result = yield this._cryptoLib.generateKey();\n                return result;\n            }\n            return null;\n        });\n    }\n    _encrypt(data) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const key = this._key;\n            if (this._cryptoLib && key) {\n                const result = yield this._cryptoLib.encrypt(data, key);\n                return result;\n            }\n            return null;\n        });\n    }\n    _decrypt(payload) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const key = this._key;\n            if (this._cryptoLib && key) {\n                const result = yield this._cryptoLib.decrypt(payload, key);\n                return result;\n            }\n            return null;\n        });\n    }\n    _getStorageSession() {\n        let result = null;\n        if (this._sessionStorage) {\n            result = this._sessionStorage.getSession();\n        }\n        return result;\n    }\n    _setStorageSession() {\n        if (this._sessionStorage) {\n            this._sessionStorage.setSession(this.session);\n        }\n    }\n    _removeStorageSession() {\n        if (this._sessionStorage) {\n            this._sessionStorage.removeSession();\n        }\n    }\n    _manageStorageSession() {\n        if (this._connected) {\n            this._setStorageSession();\n        }\n        else {\n            this._removeStorageSession();\n        }\n    }\n    _registerPushServer(pushServerOpts) {\n        if (!pushServerOpts.url || typeof pushServerOpts.url !== \"string\") {\n            throw Error(\"Invalid or missing pushServerOpts.url parameter value\");\n        }\n        if (!pushServerOpts.type || typeof pushServerOpts.type !== \"string\") {\n            throw Error(\"Invalid or missing pushServerOpts.type parameter value\");\n        }\n        if (!pushServerOpts.token || typeof pushServerOpts.token !== \"string\") {\n            throw Error(\"Invalid or missing pushServerOpts.token parameter value\");\n        }\n        const pushSubscription = {\n            bridge: this.bridge,\n            topic: this.clientId,\n            type: pushServerOpts.type,\n            token: pushServerOpts.token,\n            peerName: \"\",\n            language: pushServerOpts.language || \"\",\n        };\n        this.on(\"connect\", (error, payload) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (error) {\n                throw error;\n            }\n            if (pushServerOpts.peerMeta) {\n                const peerName = payload.params[0].peerMeta.name;\n                pushSubscription.peerName = peerName;\n            }\n            try {\n                const response = yield fetch(`${pushServerOpts.url}/new`, {\n                    method: \"POST\",\n                    headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(pushSubscription),\n                });\n                const json = yield response.json();\n                if (!json.success) {\n                    throw Error(\"Failed to register in Push Server\");\n                }\n            }\n            catch (error) {\n                throw Error(\"Failed to register in Push Server\");\n            }\n        }));\n    }\n}\nexports.default = Connector;\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","utils_1","socket_transport_1","__importDefault","errors_1","events_1","storage_1","Connector","constructor","opts","protocol","version","_bridge","_key","_clientId","_clientMeta","_peerId","_peerMeta","_handshakeId","_handshakeTopic","_connected","_accounts","_networkId","_chainId","_rpcUrl","_eventManager","default","getClientMeta","connectorOpts","clientMeta","_cryptoLib","cryptoLib","_sessionStorage","sessionStorage","_qrcodeModal","qrcodeModal","_qrcodeModalOptions","qrcodeModalOptions","bridge","uri","session","Error","ERROR_MISSING_REQUIRED","_getStorageSession","handshakeId","_subscribeToSessionResponse","_transport","transport","url","subscriptions","clientId","_subscribeToInternalEvents","_initTransport","_subscribeToSessionRequest","pushServerOpts","_registerPushServer","key","convertHexToArrayBuffer","convertArrayBufferToHex","uuid","_uri","_formatUri","handshakeTopic","_parseUri","connected","accounts","chainId","peerId","peerMeta","on","event","callback","subscribe","eventEmitter","createInstantRequest","instantRequest","__awaiter","_generateKey","request","_formatRequest","method","params","id","trigger","ERROR_QRCODE_MODAL_USER_CLOSED","endInstantRequest","killSession","result","_sendCallRequest","error","connect","ERROR_QRCODE_MODAL_NOT_PROVIDED","createSession","Promise","resolve","reject","payload","ERROR_SESSION_CONNECTED","pending","_sendSessionRequest","topic","approveSession","sessionStatus","networkId","rpcUrl","_sendResponse","response","jsonrpc","sessionParams","approved","_setStorageSession","rejectSession","sessionError","message","ERROR_SESSION_REJECTED","_formatResponse","_removeStorageSession","updateSession","ERROR_SESSION_DISCONNECTED","_manageStorageSession","_sendRequest","_handleSessionDisconnect","sendTransaction","tx","parsedTx","parseTransactionData","signTransaction","signMessage","signPersonalMessage","parsePersonalSign","signTypedData","updateChain","chainParams","unsafeSend","options","_subscribeToResponse","ERROR_MISSING_JSON_RPC","sendCustomRequest","convertNumberToHex","formattedRequest","approveRequest","isJsonRpcResponseSuccess","formattedResponse","ERROR_MISSING_RESULT","rejectRequest","isJsonRpcResponseError","ERROR_MISSING_ERROR","callRequest","encryptionPayload","_encrypt","JSON","stringify","silent","forcePushNotification","isSilentPayload","send","errorMsg","isMobile","signingMethods","includes","mobileLinkUrl","getLocal","mobileLinkChoiceKey","window","location","href","_subscribeToCallResponse","ERROR_MISSING_METHOD","payloadId","ERROR_MISSING_ID","baseResponse","formatRpcError","errorResponse","assign","successResponse","ERROR_INVALID_RESPONSE","close","removeLocal","_handleSessionResponse","_handleIncomingMessages","socketMessage","activeTopics","parse","_decrypt","open","code","toString","internalPayload","encodeURIComponent","parseWalletConnectUri","decodeURIComponent","ERROR_INVALID_URI","generateKey","data","encrypt","decrypt","getSession","setSession","removeSession","type","token","pushSubscription","peerName","language","name","json","fetch","headers","Accept","body","success"]
}
