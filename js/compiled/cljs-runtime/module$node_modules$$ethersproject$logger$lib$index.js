shadow$provide.module$node_modules$$ethersproject$logger$lib$index=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Logger=exports.ErrorCode=exports.LogLevel=void 0;var _permanentCensorErrors=!1,_censorErrors=!1,LogLevels={debug:1,"default":2,info:2,warning:3,error:4,off:5},_logLevel=LogLevels["default"],_version_1=require("module$node_modules$$ethersproject$logger$lib$_version"),_globalLogger=null,_normalizeError=function(){try{var missing_1=
[];["NFD","NFC","NFKD","NFKC"].forEach(function(form){try{if("test"!=="test".normalize(form))throw Error("bad normalize");}catch(error){missing_1.push(form)}});if(missing_1.length)throw Error("missing "+missing_1.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw Error("broken implementation");}catch(error){return error.message}return null}(),LogLevel;(function(LogLevel){LogLevel.DEBUG="DEBUG";LogLevel.INFO="INFO";LogLevel.WARNING="WARNING";LogLevel.ERROR=
"ERROR";LogLevel.OFF="OFF"})(LogLevel=exports.LogLevel||(exports.LogLevel={}));var ErrorCode;(function(ErrorCode){ErrorCode.UNKNOWN_ERROR="UNKNOWN_ERROR";ErrorCode.NOT_IMPLEMENTED="NOT_IMPLEMENTED";ErrorCode.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION";ErrorCode.NETWORK_ERROR="NETWORK_ERROR";ErrorCode.SERVER_ERROR="SERVER_ERROR";ErrorCode.TIMEOUT="TIMEOUT";ErrorCode.BUFFER_OVERRUN="BUFFER_OVERRUN";ErrorCode.NUMERIC_FAULT="NUMERIC_FAULT";ErrorCode.MISSING_NEW="MISSING_NEW";ErrorCode.INVALID_ARGUMENT=
"INVALID_ARGUMENT";ErrorCode.MISSING_ARGUMENT="MISSING_ARGUMENT";ErrorCode.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT";ErrorCode.CALL_EXCEPTION="CALL_EXCEPTION";ErrorCode.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS";ErrorCode.NONCE_EXPIRED="NONCE_EXPIRED";ErrorCode.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED";ErrorCode.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT"})(ErrorCode=exports.ErrorCode||(exports.ErrorCode={}));global=function(){function Logger(version){Object.defineProperty(this,"version",
{enumerable:!0,value:version,writable:!1})}Logger.prototype._log=function(logLevel,args){var level=logLevel.toLowerCase();null==LogLevels[level]&&this.throwArgumentError("invalid log level name","logLevel",logLevel);_logLevel>LogLevels[level]||console.log.apply(console,args)};Logger.prototype.debug=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];this._log(Logger.levels.DEBUG,args)};Logger.prototype.info=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=
arguments[_i];this._log(Logger.levels.INFO,args)};Logger.prototype.warn=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];this._log(Logger.levels.WARNING,args)};Logger.prototype.makeError=function(message,code,params){if(_censorErrors)return this.makeError("censored error",code,{});code||(code=Logger.errors.UNKNOWN_ERROR);params||(params={});var messageDetails=[];Object.keys(params).forEach(function(key){try{messageDetails.push(key+"\x3d"+JSON.stringify(params[key]))}catch(error){messageDetails.push(key+
"\x3d"+JSON.stringify(params[key].toString()))}});messageDetails.push("code\x3d"+code);messageDetails.push("version\x3d"+this.version);var reason=message;messageDetails.length&&(message+=" ("+messageDetails.join(", ")+")");var error$jscomp$0=Error(message);error$jscomp$0.reason=reason;error$jscomp$0.code=code;Object.keys(params).forEach(function(key){error$jscomp$0[key]=params[key]});return error$jscomp$0};Logger.prototype.throwError=function(message,code,params){throw this.makeError(message,code,
params);};Logger.prototype.throwArgumentError=function(message,name,value){return this.throwError(message,Logger.errors.INVALID_ARGUMENT,{argument:name,value})};Logger.prototype.assert=function(condition,message,code,params){condition||this.throwError(message,code,params)};Logger.prototype.assertArgument=function(condition,message,name,value){condition||this.throwArgumentError(message,name,value)};Logger.prototype.checkNormalize=function(message){_normalizeError&&this.throwError("platform missing String.prototype.normalize",
Logger.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:_normalizeError})};Logger.prototype.checkSafeUint53=function(value,message){"number"===typeof value&&(null==message&&(message="value not safe"),(0>value||9007199254740991<=value)&&this.throwError(message,Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value}),value%1&&this.throwError(message,Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value}))};Logger.prototype.checkArgumentCount=
function(count,expectedCount,message){message=message?": "+message:"";count<expectedCount&&this.throwError("missing argument"+message,Logger.errors.MISSING_ARGUMENT,{count,expectedCount});count>expectedCount&&this.throwError("too many arguments"+message,Logger.errors.UNEXPECTED_ARGUMENT,{count,expectedCount})};Logger.prototype.checkNew=function(target,kind){target!==Object&&null!=target||this.throwError("missing new",Logger.errors.MISSING_NEW,{name:kind.name})};Logger.prototype.checkAbstract=function(target,
kind){target===kind?this.throwError("cannot instantiate abstract class "+JSON.stringify(kind.name)+" directly; use a sub-class",Logger.errors.UNSUPPORTED_OPERATION,{name:target.name,operation:"new"}):(target===Object||null==target)&&this.throwError("missing new",Logger.errors.MISSING_NEW,{name:kind.name})};Logger.globalLogger=function(){_globalLogger||(_globalLogger=new Logger(_version_1.version));return _globalLogger};Logger.setCensorship=function(censorship,permanent){!censorship&&permanent&&this.globalLogger().throwError("cannot permanently disable censorship",
Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"});if(_permanentCensorErrors){if(!censorship)return;this.globalLogger().throwError("error censorship permanent",Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}_censorErrors=!!censorship;_permanentCensorErrors=!!permanent};Logger.setLogLevel=function(logLevel){var level=LogLevels[logLevel.toLowerCase()];null==level?Logger.globalLogger().warn("invalid log level - "+logLevel):_logLevel=level};Logger.from=function(version){return new Logger(version)};
Logger.errors=ErrorCode;Logger.levels=LogLevel;return Logger}();exports.Logger=global}
//# sourceMappingURL=module$node_modules$$ethersproject$logger$lib$index.js.map
