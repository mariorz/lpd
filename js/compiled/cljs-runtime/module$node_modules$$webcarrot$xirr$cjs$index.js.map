{
"version":3,
"file":"module$node_modules$$webcarrot$xirr$cjs$index.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@webcarrot/xirr/cjs/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$webcarrot$xirr$cjs$index\"] = function(global,require,module,exports) {\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.calculateResult = function (flowsFrom1, r) {\r\n    return flowsFrom1.reduce(function (result, _a) {\r\n        var date = _a.date, amount = _a.amount;\r\n        return result + amount / Math.pow(r, date);\r\n    }, 0.0);\r\n};\r\nexports.calculateResultDerivation = function (flowsFrom1, r) {\r\n    return flowsFrom1.reduce(function (result, _a) {\r\n        var date = _a.date, amount = _a.amount;\r\n        return result - (date * amount) / Math.pow(r, date + 1.0);\r\n    }, 0.0);\r\n};\r\nexports.calculate = function (flows, guessRate, maxEpsilon, maxScans, maxIterations) {\r\n    if (guessRate === void 0) { guessRate = 0.1; }\r\n    if (maxEpsilon === void 0) { maxEpsilon = 1e-10; }\r\n    if (maxScans === void 0) { maxScans = 200; }\r\n    if (maxIterations === void 0) { maxIterations = 20; }\r\n    if (flows.findIndex(function (_a) {\r\n        var amount = _a.amount;\r\n        return amount > 0;\r\n    }) === -1) {\r\n        throw new RangeError(\"No positive amount was found in cash flows\");\r\n    }\r\n    if (flows.findIndex(function (_a) {\r\n        var amount = _a.amount;\r\n        return amount < 0;\r\n    }) === -1) {\r\n        throw new RangeError(\"No negative amount was found in cash flows\");\r\n    }\r\n    if (guessRate <= -1) {\r\n        throw new RangeError(\"Guess rate is less than or equal to -1\");\r\n    }\r\n    if (maxEpsilon <= 0) {\r\n        throw new RangeError(\"Max epsilon is less than or equal to 0\");\r\n    }\r\n    if (maxScans < 10) {\r\n        throw new RangeError(\"Max scans is lower than 10\");\r\n    }\r\n    if (maxIterations < 10) {\r\n        throw new RangeError(\"Max iterations is lower than 10\");\r\n    }\r\n    var resultRate = guessRate;\r\n    var resultValue;\r\n    var iterationScan = 0;\r\n    var doLoop = false;\r\n    var firstFlowAmount = flows[0].amount;\r\n    var flowsFrom1 = flows.slice(1);\r\n    do {\r\n        if (iterationScan >= 1) {\r\n            resultRate = -0.99 + (iterationScan - 1) * 0.01;\r\n        }\r\n        var iteration = maxIterations;\r\n        do {\r\n            resultValue =\r\n                firstFlowAmount + exports.calculateResult(flowsFrom1, resultRate + 1);\r\n            var newRate = resultRate -\r\n                resultValue / exports.calculateResultDerivation(flowsFrom1, resultRate + 1);\r\n            var rateEpsilon = Math.abs(newRate - resultRate);\r\n            resultRate = newRate;\r\n            doLoop = rateEpsilon > maxEpsilon && Math.abs(resultValue) > maxEpsilon;\r\n        } while (doLoop && --iteration);\r\n        doLoop =\r\n            doLoop ||\r\n                isNaN(resultRate) ||\r\n                !isFinite(resultRate) ||\r\n                isNaN(resultValue) ||\r\n                !isFinite(resultValue);\r\n    } while (doLoop && !(++iterationScan < maxScans));\r\n    if (doLoop) {\r\n        throw new Error(\"XIRR calculation failed. Try to increase one of: max epsilon, max scans, max iterations\");\r\n    }\r\n    return resultRate;\r\n};\r\nvar D_N = 365.0 * 86400000;\r\nexports.normalize = function (flows) {\r\n    var flowsN = flows\r\n        .map(function (_a) {\r\n        var amount = _a.amount, date = _a.date;\r\n        return ({\r\n            amount: amount,\r\n            date: date.getTime()\r\n        });\r\n    })\r\n        .sort(function (a, b) { return a.date - b.date; });\r\n    var firstDate = flowsN[0].date;\r\n    return flowsN.map(function (_a) {\r\n        var amount = _a.amount, date = _a.date;\r\n        return ({\r\n            amount: amount,\r\n            date: (date - firstDate) / D_N\r\n        });\r\n    });\r\n};\r\nexports.xirr = function (flows, guessRate, maxEpsilon, maxScans, maxIterations) {\r\n    return exports.calculate(exports.normalize(flows), guessRate, maxEpsilon, maxScans, maxIterations);\r\n};\r\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","calculateResult","exports.calculateResult","flowsFrom1","r","reduce","result","_a","amount","Math","pow","date","calculateResultDerivation","exports.calculateResultDerivation","calculate","exports.calculate","flows","guessRate","maxEpsilon","maxScans","maxIterations","findIndex","RangeError","iterationScan","doLoop","firstFlowAmount","slice","resultRate","iteration","resultValue","newRate","rateEpsilon","abs","isNaN","isFinite","Error","normalize","exports.normalize","flowsN","map","getTime","sort","a","b","firstDate","D_N","xirr","exports.xirr"]
}
