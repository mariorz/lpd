shadow$provide.module$node_modules$enc_utils$dist$cjs$index=function(global,require,module,exports){function bufferToArray(buf){return new Uint8Array(buf)}function bufferToHex(buf,prefixed=!1){buf=buf.toString("hex");return prefixed?addHexPrefix(buf):buf}function bufferToUtf8(buf){return buf.toString("utf8")}function bufferToNumber(buf){return buf.readUIntBE(0,buf.length)}function arrayToBuffer(arr){return typedarray_to_buffer_1.default(arr)}function arrayToHex(arr,prefixed=!1){return bufferToHex(arrayToBuffer(arr),
prefixed)}function arrayToUtf8(arr){return bufferToUtf8(arrayToBuffer(arr))}function arrayToNumber(arr){return bufferToNumber(arrayToBuffer(arr))}function arrayToBinary(arr){return Array.from(arr).map(numberToBinary).join("")}function hexToBuffer(hex){return Buffer.from(removeHexPrefix(hex),"hex")}function hexToArray(hex){return bufferToArray(hexToBuffer(hex))}function hexToBinary(hex){return arrayToBinary(hexToArray(hex))}function utf8ToBuffer(utf8){return Buffer.from(utf8,"utf8")}function utf8ToArray(utf8){return bufferToArray(utf8ToBuffer(utf8))}
function numberToBinary(num){num=(num>>>0).toString(2);return sanitizeBytes(num)}function binaryToBuffer(bin){return arrayToBuffer(binaryToArray(bin))}function binaryToArray(bin){return new Uint8Array(splitBytes(bin).map(x=>parseInt(x,2)))}function binaryToHex(bin,prefixed){return arrayToHex(binaryToArray(bin),prefixed)}function isBinaryString(str){return"string"===typeof str&&(new RegExp(/^[01]+$/)).test(str)&&0===str.length%8?!0:!1}function isHexString(str,length){return"string"!==typeof str||!str.match(/^0x[0-9A-Fa-f]*$/)||
length&&str.length!==2+2*length?!1:!0}function isBuffer(val){return Buffer.isBuffer(val)}function isTypedArray(val){return is_typedarray_1.default.strict(val)&&!isBuffer(val)}function isArrayBuffer(val){return!isTypedArray(val)&&!isBuffer(val)&&"undefined"!==typeof val.byteLength}function calcByteLength(length,byteSize=8){const remainder=length%byteSize;return remainder?(length-remainder)/byteSize*byteSize+byteSize:length}function splitBytes(str,byteSize=8){str=sanitizeBytes(str).match(new RegExp(`.{${byteSize}}`,
"gi"));return Array.from(str||[])}function swapBytes(str){return splitBytes(str).map(reverseString).join("")}function sanitizeBytes(str,byteSize=8,padding="0"){return padLeft(str,calcByteLength(str.length,byteSize),padding)}function padLeft(str,length,padding="0"){return padString(str,length,!0,padding)}function removeHexPrefix(hex){return hex.replace(/^0x/,"")}function addHexPrefix(hex){return hex.startsWith("0x")?hex:`0x${hex}`}function reverseString(str){return str.split("").reverse().join("")}
function padString(str,length,left,padding="0"){length-=str.length;let result=str;0<length&&(padding=padding.repeat(length),result=left?padding+str:str+padding);return result}var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});const is_typedarray_1=global(require("module$node_modules$is_typedarray$index")),typedarray_to_buffer_1=
global(require("module$node_modules$typedarray_to_buffer$index"));exports.bufferToArray=bufferToArray;exports.bufferToHex=bufferToHex;exports.bufferToUtf8=bufferToUtf8;exports.bufferToNumber=bufferToNumber;exports.bufferToBinary=function(buf){return arrayToBinary(bufferToArray(buf))};exports.arrayToBuffer=arrayToBuffer;exports.arrayToHex=arrayToHex;exports.arrayToUtf8=arrayToUtf8;exports.arrayToNumber=arrayToNumber;exports.arrayToBinary=arrayToBinary;exports.hexToBuffer=hexToBuffer;exports.hexToArray=
hexToArray;exports.hexToUtf8=function(hex){return bufferToUtf8(hexToBuffer(hex))};exports.hexToNumber=function(hex){return arrayToNumber(hexToArray(hex))};exports.hexToBinary=hexToBinary;exports.utf8ToBuffer=utf8ToBuffer;exports.utf8ToArray=utf8ToArray;exports.utf8ToHex=function(utf8,prefixed=!1){return bufferToHex(utf8ToBuffer(utf8),prefixed)};exports.utf8ToNumber=function(utf8){utf8=parseInt(utf8,10);if("undefined"===typeof utf8)throw Error("Number can only safely store up to 53 bits");return utf8};
exports.utf8ToBinary=function(utf8){return arrayToBinary(utf8ToArray(utf8))};exports.numberToBuffer=function(num){return binaryToBuffer(numberToBinary(num))};exports.numberToArray=function(num){return binaryToArray(numberToBinary(num))};exports.numberToHex=function(num,prefixed){return binaryToHex(numberToBinary(num),prefixed)};exports.numberToUtf8=function(num){return`${num}`};exports.numberToBinary=numberToBinary;exports.binaryToBuffer=binaryToBuffer;exports.binaryToArray=binaryToArray;exports.binaryToHex=
binaryToHex;exports.binaryToUtf8=function(bin){return arrayToUtf8(binaryToArray(bin))};exports.binaryToNumber=function(bin){return arrayToNumber(binaryToArray(bin))};exports.isBinaryString=isBinaryString;exports.isHexString=isHexString;exports.isBuffer=isBuffer;exports.isTypedArray=isTypedArray;exports.isArrayBuffer=isArrayBuffer;exports.getType=function(val){return isBuffer(val)?"buffer":isTypedArray(val)?"typed-array":isArrayBuffer(val)?"array-buffer":Array.isArray(val)?"array":typeof val};exports.getEncoding=
function(str){return isBinaryString(str)?"binary":isHexString(str)?"hex":"utf8"};exports.concatBuffers=function(...args){return Buffer.concat(args)};exports.concatArrays=function(...args){let result=[];args.forEach(arg=>result=result.concat(Array.from(arg)));return new Uint8Array([...result])};exports.trimLeft=function(data,length){length=data.length-length;0<length&&(data=data.slice(length));return data};exports.trimRight=function(data,length){return data.slice(0,length)};exports.calcByteLength=
calcByteLength;exports.splitBytes=splitBytes;exports.swapBytes=swapBytes;exports.swapHex=function(str){return binaryToHex(swapBytes(hexToBinary(str)))};exports.sanitizeBytes=sanitizeBytes;exports.padLeft=padLeft;exports.padRight=function(str,length,padding="0"){return padString(str,length,!1,padding)};exports.removeHexPrefix=removeHexPrefix;exports.addHexPrefix=addHexPrefix;exports.sanitizeHex=function(hex){hex=removeHexPrefix(hex);(hex=sanitizeBytes(hex,2))&&(hex=addHexPrefix(hex));return hex};exports.removeHexLeadingZeros=
function(hex){const prefixed=hex.startsWith("0x");hex=removeHexPrefix(hex);hex=hex.startsWith("0")?hex.substring(1):hex;return prefixed?addHexPrefix(hex):hex}}
//# sourceMappingURL=module$node_modules$enc_utils$dist$cjs$index.js.map
