shadow$provide.module$node_modules$pocket_js_core$src$models$node=function(global,require,module,exports){const axios=require("module$node_modules$axios$index"),constants=require("module$node_modules$pocket_js_core$src$utils$constants");class Node{constructor(network,netID,ipPort){this.network=network;this.netID=netID;network=ipPort.split(":");this.ip=network[0];this.port=network[1];ipPort.includes("https://")||ipPort.includes("http://")?this.ipPort=ipPort:this.ipPort="443"===this.port||443===this.port?
"https://"+ipPort:"http://"+ipPort}isValid(){for(var property in this)if(!this.hasOwnProperty(property)||""==this[property])return!1;return!0}isEqual(netID,network){return this.netID==netID.toString()&&this.network==network.toString()?!0:!1}async sendRelay(relay,callback){try{var response=await axios.create({baseURL:this.ipPort,timeout:relay.configuration.requestTimeOut,headers:{"Content-Type":"application/json"}}).post(constants.relayPath,relay.toJSON());if(200==response.status&&null!=response.data){var result=
response.data;if(callback)callback(result,null);else return result}else if(callback)callback(null,Error("Failed to send relay with error: "+response.data));else return Error("Failed to send relay with error: "+response.data)}catch(error){if(callback)callback(null,Error("Failed to send relay with error: "+error));else return Error("Failed to send relay with error: "+error)}}}module.exports={Node}}
//# sourceMappingURL=module$node_modules$pocket_js_core$src$models$node.js.map
