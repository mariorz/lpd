{
"version":3,
"file":"module$node_modules$await_semaphore$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,yCAAf,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACtG,IAAIC,QAAUH,OAAA,CAAQ,qCAAR,CACd,aACA,MAAMI,UAAN,CACIC,WAAW,CAACC,KAAD,CAAQ,CACf,IAAA,CAAKC,KAAL,CAAa,EACb,KAAA,CAAKD,KAAL,CAAaA,KAFE,CAInBE,KAAK,EAAG,CACJ,GAAiB,CAAjB,CAAI,IAAJ,CAASF,KAAT,EAA0C,CAA1C,CAAsB,IAAtB,CAA2BC,KAA3B,CAAiCE,MAAjC,CAA6C,CACzC,IAAA,CAAKH,KAAL,EACA,KAAII,KAAO,IAAA,CAAKH,KAAL,CAAWI,KAAX,EACX,IAAaC,IAAAA,EAAb,GAAIF,IAAJ,CACI,KAAM,0CAAN,CAEJA,IAAA,EANyC,CADzC,CAURG,OAAO,EAAG,CACN,MAAO,KAAIC,OAAJ,CAAY,CAACC,GAAD,CAAMC,GAAN,CAAA,EAAc,CAW7B,IAAA,CAAKT,KAAL,CAAWU,IAAX,CAVW,EAAAC,EAAM,CACb,IAAIC,SAAW,CAAA,CACfJ,IAAA,CAAI,EAAA,EAAM,CACDI,QAAL,GACIA,QAEA;AAFW,CAAA,CAEX,CADA,IAAA,CAAKb,KAAL,EACA,CAAA,IAAA,CAAKE,KAAL,EAHJ,CADM,CAAV,CAFa,CAUjB,CACIL,QAAJ,EAAeA,OAAf,CAAuBiB,QAAvB,CACIjB,OAAA,CAAQiB,QAAR,CAAiB,IAAA,CAAKZ,KAAL,CAAWa,IAAX,CAAgB,IAAhB,CAAjB,CADJ,CAIIC,YAAA,CAAa,IAAA,CAAKd,KAAL,CAAWa,IAAX,CAAgB,IAAhB,CAAb,CAhByB,CAA1B,CADD,CAqBVE,GAAG,CAACC,CAAD,CAAI,CACH,MAAO,KAAA,CAAKX,OAAL,EAAA,CACFY,IADE,CACGC,OAAA,EACCF,CAAA,EAAA,CACFC,IADE,CACIV,GAAD,EAAS,CACfW,OAAA,EACA,OAAOX,IAFQ,CADZ,CAAA,CAKFY,KALE,CAKKC,GAAD,EAAS,CAChBF,OAAA,EACA,MAAME,IAAN,CAFgB,CALb,CAFJ,CADJ,CApCX,CAmDA1B,OAAA,CAAQE,SAAR,CAAoBA,SACpB,MAAMyB,MAAN,QAAoBzB,UAApB,CACIC,WAAW,EAAG,CACV,KAAA,CAAM,CAAN,CADU,CADlB,CAKAH,OAAA,CAAQ2B,KAAR,CAAgBA,KA5DsF;",
"sources":["node_modules/await-semaphore/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$await_semaphore$index\"] = function(global,require,module,exports) {\nvar process = require('process');\n\"use strict\";\nclass Semaphore {\n    constructor(count) {\n        this.tasks = [];\n        this.count = count;\n    }\n    sched() {\n        if (this.count > 0 && this.tasks.length > 0) {\n            this.count--;\n            let next = this.tasks.shift();\n            if (next === undefined) {\n                throw \"Unexpected undefined value in tasks list\";\n            }\n            next();\n        }\n    }\n    acquire() {\n        return new Promise((res, rej) => {\n            var task = () => {\n                var released = false;\n                res(() => {\n                    if (!released) {\n                        released = true;\n                        this.count++;\n                        this.sched();\n                    }\n                });\n            };\n            this.tasks.push(task);\n            if (process && process.nextTick) {\n                process.nextTick(this.sched.bind(this));\n            }\n            else {\n                setImmediate(this.sched.bind(this));\n            }\n        });\n    }\n    use(f) {\n        return this.acquire()\n            .then(release => {\n            return f()\n                .then((res) => {\n                release();\n                return res;\n            })\n                .catch((err) => {\n                release();\n                throw err;\n            });\n        });\n    }\n}\nexports.Semaphore = Semaphore;\nclass Mutex extends Semaphore {\n    constructor() {\n        super(1);\n    }\n}\nexports.Mutex = Mutex;\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","process","Semaphore","constructor","count","tasks","sched","length","next","shift","undefined","acquire","Promise","res","rej","push","task","released","nextTick","bind","setImmediate","use","f","then","release","catch","err","Mutex"]
}
