{
"version":3,
"file":"module$node_modules$$ethersproject$wordlists$lib$wordlist.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,yDAAf,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEtHC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAA,CAAQI,QAAR,CAAmBJ,OAAnB,CAA2BK,MAA3B,CAAoC,IAAK,EAGzC,KAAIC,OAASR,OAAA,CAAQ,mDAAR,CAAb,CACIS,aAAeT,OAAA,CAAQ,yDAAR,CACfU,OAAAA,CAAWV,OAAA,CAAQ,qDAAR,CACXW,QAAAA,CAAaX,OAAA,CAAQ,2DAAR,CACjBE;OAAA,CAAQK,MAAR,CAAiB,IAAIG,MAAJ,CAAaE,MAAb,CAAoBD,OAApB,CAA+BE,OAA/B,CACbP,QAAAA,CAA0B,QAAS,EAAG,CACtCA,QAASA,SAAQ,CAACQ,MAAD,CAAS,CAEtBZ,OAAA,CAAQK,MAAR,CAAeQ,aAAf,CADiB,IACjB,CADsBC,WACtB,CAAyCV,QAAzC,CACAG,aAAA,CAAaQ,cAAb,CAA4B,IAA5B,CAAkC,QAAlC,CAA4CH,MAA5C,CAHsB,CAM1BR,QAAA,CAASY,SAAT,CAAmBC,KAAnB,CAA2BC,QAAS,CAACC,QAAD,CAAW,CAC3C,MAAOA,SAAA,CAASC,WAAT,EAAA,CAAuBH,KAAvB,CAA6B,KAA7B,CADoC,CAI/Cb,SAAA,CAASY,SAAT,CAAmBK,IAAnB,CAA0BC,QAAS,CAACC,KAAD,CAAQ,CACvC,MAAOA,MAAA,CAAMF,IAAN,CAAW,GAAX,CADgC,CAG3CjB,SAAA,CAASoB,KAAT,CAAiBC,QAAS,CAACC,QAAD,CAAW,CAEjC,IADA,IAAIH,MAAQ,EAAZ,CACSI,EAAI,CAAb,CAAoB,IAApB,CAAgBA,CAAhB,CAA0BA,CAAA,EAA1B,CAA+B,CAC3B,IAAIC,KAAOF,QAAA,CAASG,OAAT,CAAiBF,CAAjB,CAEX,IAAIA,CAAJ,GAAUD,QAAA,CAASI,YAAT,CAAsBF,IAAtB,CAAV,CACI,MAAO,IAEXL,MAAA,CAAMQ,IAAN,CAAWH,IAAX,CAN2B,CAQ/B,MAAOtB,OAAA,CAAO0B,EAAP,CAAUT,KAAA,CAAMF,IAAN,CAAW,IAAX,CAAV;AAA6B,IAA7B,CAV0B,CAYrCjB,SAAA,CAAS6B,QAAT,CAAoBC,QAAS,CAACC,IAAD,CAAOC,IAAP,CAAa,EAiB1C,OAAOhC,SA3C+B,CAAZ,EA6C9BJ,QAAA,CAAQI,QAAR,CAAmBA,OAxDmG;",
"sources":["node_modules/@ethersproject/wordlists/lib/wordlist.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$ethersproject$wordlists$lib$wordlist\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Wordlist = exports.logger = void 0;\n// This gets overridden by rollup\nvar exportWordlist = false;\nvar hash_1 = require(\"@ethersproject/hash\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nexports.logger = new logger_1.Logger(_version_1.version);\nvar Wordlist = /** @class */ (function () {\n    function Wordlist(locale) {\n        var _newTarget = this.constructor;\n        exports.logger.checkAbstract(_newTarget, Wordlist);\n        properties_1.defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    Wordlist.prototype.split = function (mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    };\n    // Subclasses may override this\n    Wordlist.prototype.join = function (words) {\n        return words.join(\" \");\n    };\n    Wordlist.check = function (wordlist) {\n        var words = [];\n        for (var i = 0; i < 2048; i++) {\n            var word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return hash_1.id(words.join(\"\\n\") + \"\\n\");\n    };\n    Wordlist.register = function (lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                var anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        properties_1.defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    };\n    return Wordlist;\n}());\nexports.Wordlist = Wordlist;\n//# sourceMappingURL=wordlist.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Wordlist","logger","hash_1","properties_1","logger_1","_version_1","Logger","version","locale","checkAbstract","constructor","defineReadOnly","prototype","split","Wordlist.prototype.split","mnemonic","toLowerCase","join","Wordlist.prototype.join","words","check","Wordlist.check","wordlist","i","word","getWord","getWordIndex","push","id","register","Wordlist.register","lang","name"]
}
