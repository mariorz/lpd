{
"version":3,
"file":"module$node_modules$axios$lib$helpers$cookies.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,6CAAf,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1G,IAAIC,MAAQH,OAAA,CAAQ,qCAAR,CAEZC,OAAA,CAAOC,OAAP,CACEC,KAAA,CAAMC,oBAAN,EAAA,CAGCC,QAA2B,EAAG,CAC7B,MAAO,CACLC,MAAOA,QAAc,CAACC,IAAD,CAAOC,KAAP,CAAcC,OAAd,CAAuBC,IAAvB,CAA6BC,MAA7B,CAAqCC,MAArC,CAA6C,CAChE,IAAIC,OAAS,EACbA,OAAA,CAAOC,IAAP,CAAYP,IAAZ,CAAmB,MAAnB,CAAyBQ,kBAAA,CAAmBP,KAAnB,CAAzB,CAEIL,MAAA,CAAMa,QAAN,CAAeP,OAAf,CAAJ,EACEI,MAAA,CAAOC,IAAP,CAAY,aAAZ,CAAyB,CAAA,IAAIG,IAAJ,CAASR,OAAT,CAAA,EAAkBS,WAAlB,EAAzB,CAGEf,MAAA,CAAMgB,QAAN,CAAeT,IAAf,CAAJ,EACEG,MAAA,CAAOC,IAAP,CAAY,UAAZ,CAAsBJ,IAAtB,CAGEP,MAAA,CAAMgB,QAAN,CAAeR,MAAf,CAAJ,EACEE,MAAA,CAAOC,IAAP,CAAY,YAAZ;AAAwBH,MAAxB,CAGa,EAAA,CAAf,GAAIC,MAAJ,EACEC,MAAA,CAAOC,IAAP,CAAY,QAAZ,CAGFM,SAAA,CAASP,MAAT,CAAkBA,MAAA,CAAOQ,IAAP,CAAY,IAAZ,CApB8C,CAD7D,CAwBLC,KAAMA,QAAa,CAACf,IAAD,CAAO,CAExB,MAAQ,CADJgB,IACI,CADIH,QAAA,CAASP,MAAT,CAAgBU,KAAhB,CAAsB,IAAIC,MAAJ,CAAW,YAAX,CAA0BjB,IAA1B,CAAiC,cAAjC,CAAtB,CACJ,EAAQkB,kBAAA,CAAmBF,IAAA,CAAM,CAAN,CAAnB,CAAR,CAAuC,IAFvB,CAxBrB,CA6BLG,OAAQA,QAAe,CAACnB,IAAD,CAAO,CAC5B,IAAA,CAAKD,KAAL,CAAWC,IAAX,CAAiB,EAAjB,CAAqBU,IAAA,CAAKU,GAAL,EAArB,CAAkC,KAAlC,CAD4B,CA7BzB,CADsB,CAA/B,EAHA,CAwCCC,QAA8B,EAAG,CAChC,MAAO,CACLtB,MAAOA,QAAc,EAAG,EADnB,CAELgB,KAAMA,QAAa,EAAG,CAAE,MAAO,KAAT,CAFjB,CAGLI,OAAQA,QAAe,EAAG,EAHrB,CADyB,CAAlC,EA9CwG;",
"sources":["node_modules/axios/lib/helpers/cookies.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$axios$lib$helpers$cookies\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n\n};"],
"names":["shadow$provide","global","require","module","exports","utils","isStandardBrowserEnv","standardBrowserEnv","write","name","value","expires","path","domain","secure","cookie","push","encodeURIComponent","isNumber","Date","toGMTString","isString","document","join","read","match","RegExp","decodeURIComponent","remove","now","nonStandardBrowserEnv"]
}
