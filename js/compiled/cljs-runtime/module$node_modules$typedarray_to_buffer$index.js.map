{
"version":3,
"file":"module$node_modules$typedarray_to_buffer$index.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,8CAAf,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC3G,IAAIC,OAASH,OAAA,CAAQ,kCAAR,CAATG,CAA2BA,MAA/B,CAUIC,aAAeJ,OAAA,CAAQ,yCAAR,CAAfI,CAAwCC,MAE5CJ,OAAA,CAAOC,OAAP,CAAiBI,QAA4B,CAACC,GAAD,CAAM,CACjD,GAAIH,YAAA,CAAaG,GAAb,CAAJ,CAAuB,CAErB,IAAIC,IAAML,MAAA,CAAOM,IAAP,CAAYF,GAAZ,CAAgBG,MAAhB,CACNH,IAAJ,CAAQI,UAAR,GAAuBJ,GAAvB,CAA2BG,MAA3B,CAAkCC,UAAlC,GAEEH,GAFF,CAEQA,GAAA,CAAII,KAAJ,CAAUL,GAAV,CAAcM,UAAd,CAA0BN,GAA1B,CAA8BM,UAA9B,CAA2CN,GAA3C,CAA+CI,UAA/C,CAFR,CAIA,OAAOH,IAPc,CAUrB,MAAOL,OAAA,CAAOM,IAAP,CAAYF,GAAZ,CAXwC,CAbwD;",
"sources":["node_modules/typedarray-to-buffer/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$typedarray_to_buffer$index\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n/**\n * Convert a typed array to a Buffer without a copy\n *\n * Author:   Feross Aboukhadijeh <https://feross.org>\n * License:  MIT\n *\n * `npm install typedarray-to-buffer`\n */\n\nvar isTypedArray = require('is-typedarray').strict\n\nmodule.exports = function typedarrayToBuffer (arr) {\n  if (isTypedArray(arr)) {\n    // To avoid a copy, use the typed array's underlying ArrayBuffer to back new Buffer\n    var buf = Buffer.from(arr.buffer)\n    if (arr.byteLength !== arr.buffer.byteLength) {\n      // Respect the \"view\", i.e. byteOffset and byteLength, without doing a copy\n      buf = buf.slice(arr.byteOffset, arr.byteOffset + arr.byteLength)\n    }\n    return buf\n  } else {\n    // Pass through all other types to `Buffer.from`\n    return Buffer.from(arr)\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","isTypedArray","strict","module.exports","arr","buf","from","buffer","byteLength","slice","byteOffset"]
}
