{
"version":3,
"file":"module$node_modules$browserify_cipher$browser.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/browserify-cipher/browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$browserify_cipher$browser\"] = function(global,require,module,exports) {\nvar DES = require('browserify-des')\nvar aes = require('browserify-aes/browser')\nvar aesModes = require('browserify-aes/modes')\nvar desModes = require('browserify-des/modes')\nvar ebtk = require('evp_bytestokey')\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n\n};"],
"names":["shadow$provide","global","require","module","exports","createCipheriv","suite","key","iv","toLowerCase","aesModes","aes","desModes","DES","mode","TypeError","createDecipheriv","decrypt","ebtk","createCipher","Cipher","password","keyLen","ivLen","keys","Cipheriv","createDecipher","Decipher","Decipheriv","listCiphers","getCiphers","Object","concat"]
}
