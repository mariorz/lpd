shadow$provide.module$node_modules$fast_safe_stringify$index=function(global,require,module,exports){function stringify(obj,replacer,spacer){decirc(obj,"",[],void 0);for(obj=0===replacerStack.length?JSON.stringify(obj,replacer,spacer):JSON.stringify(obj,replaceGetterValues(replacer),spacer);0!==arr.length;)replacer=arr.pop(),4===replacer.length?Object.defineProperty(replacer[0],replacer[1],replacer[3]):replacer[0][replacer[1]]=replacer[2];return obj}function decirc(val,k,stack,parent){var i;if("object"===
typeof val&&null!==val){for(i=0;i<stack.length;i++)if(stack[i]===val){stack=Object.getOwnPropertyDescriptor(parent,k);void 0!==stack.get?stack.configurable?(Object.defineProperty(parent,k,{value:"[Circular]"}),arr.push([parent,k,val,stack])):replacerStack.push([val,k]):(parent[k]="[Circular]",arr.push([parent,k,val]));return}stack.push(val);if(Array.isArray(val))for(i=0;i<val.length;i++)decirc(val[i],i,stack,val);else for(k=Object.keys(val),i=0;i<k.length;i++)parent=k[i],decirc(val[parent],parent,
stack,val);stack.pop()}}function compareFunction(a,b){return a<b?-1:a>b?1:0}function deterministicStringify(obj,replacer,spacer){obj=deterministicDecirc(obj,"",[],void 0)||obj;for(replacer=0===replacerStack.length?JSON.stringify(obj,replacer,spacer):JSON.stringify(obj,replaceGetterValues(replacer),spacer);0!==arr.length;)spacer=arr.pop(),4===spacer.length?Object.defineProperty(spacer[0],spacer[1],spacer[3]):spacer[0][spacer[1]]=spacer[2];return replacer}function deterministicDecirc(val,k,stack,parent){var i;
if("object"===typeof val&&null!==val){for(i=0;i<stack.length;i++)if(stack[i]===val){stack=Object.getOwnPropertyDescriptor(parent,k);void 0!==stack.get?stack.configurable?(Object.defineProperty(parent,k,{value:"[Circular]"}),arr.push([parent,k,val,stack])):replacerStack.push([val,k]):(parent[k]="[Circular]",arr.push([parent,k,val]));return}if("function"!==typeof val.toJSON){stack.push(val);if(Array.isArray(val))for(i=0;i<val.length;i++)deterministicDecirc(val[i],i,stack,val);else{var tmp={},keys=Object.keys(val).sort(compareFunction);
for(i=0;i<keys.length;i++){var key=keys[i];deterministicDecirc(val[key],key,stack,val);tmp[key]=val[key]}if(void 0!==parent)arr.push([parent,k,val]),parent[k]=tmp;else return tmp}stack.pop()}}}function replaceGetterValues(replacer){replacer=void 0!==replacer?replacer:function(k,v){return v};return function(key,val){if(0<replacerStack.length)for(var i=0;i<replacerStack.length;i++){var part=replacerStack[i];if(part[1]===key&&part[0]===val){val="[Circular]";replacerStack.splice(i,1);break}}return replacer.call(this,
key,val)}}module.exports=stringify;stringify.default=stringify;stringify.stable=deterministicStringify;stringify.stableStringify=deterministicStringify;var arr=[],replacerStack=[]}
//# sourceMappingURL=module$node_modules$fast_safe_stringify$index.js.map
