{"version":3,"sources":["revert/core.cljs"],"mappings":"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","names":["re-frame.core/reg-fx","_","c__52208__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__52209__auto__","switch__52185__auto__","state_116913","state_val_116914","inst_116899","cljs.core.async.impl.ioc-helpers/take!","inst_116901","statearr-116915","statearr-116916","statearr-116917","inst_116903","cljs.core/PersistentVector","inst_116904","inst_116905","inst_116906","inst_116907","inst_116908","statearr-116918","statearr-116919","statearr-116920","inst_116911","cljs.core.async.impl.ioc-helpers/return-chan","statearr-116921","state-machine__52186__auto__","ret-value__52187__auto__","result__52188__auto__","cljs.core/keyword-identical?","ex__52189__auto__","e116922","statearr-116923","cljs.core/seq","statearr-116924","cljs.core/first","state__52210__auto__","statearr-116925","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","revert.ethereum/select-provider","re-frame.core/dispatch","revert.utils/set-hash!","p__116926","vec__116927","cljs.core.nth","pool-addresses","days","state_116976","state_val_116977","inst_116945","inst_116946","statearr-116978","statearr-116979","inst_116930","inst_116932","statearr-116980","inst_116957","statearr-116981","statearr-116982","inst_116951","inst_116953","inst_116954","statearr-116983","inst_116940","inst_116941","inst_116942","inst_116943","statearr-116984","statearr-116985","inst_116934","inst_116935","statearr-116986","statearr-116987","statearr-116988","statearr-116989","statearr-116990","statearr-116991","statearr-116992","inst_116972","statearr-116993","inst_116948","inst_116949","inst_116938","statearr-116994","statearr-116995","statearr-116996","inst_116959","inst_116960","inst_116961","inst_116962","statearr-116997","inst_116967","inst_116968","inst_116969","inst_116970","statearr-116998","inst_116965","statearr-116999","inst_116974","statearr-117000","e117001","statearr-117002","statearr-117003","statearr-117004","revert.pools/<pool-histories","cljs.core/empty?","cljs.core._EQ_","cljs.core/count","revert.poolsv3/<pool-histories","account","state_117017","state_val_117018","inst_117005","inst_117007","statearr-117019","statearr-117020","statearr-117021","inst_117009","inst_117010","inst_117011","inst_117012","statearr-117022","statearr-117023","inst_117015","statearr-117024","e117025","statearr-117026","statearr-117027","statearr-117028","revert.pools/<fetch-account","state_117041","state_val_117042","inst_117029","inst_117031","statearr-117043","statearr-117044","statearr-117045","inst_117033","inst_117034","inst_117035","inst_117036","statearr-117046","statearr-117047","inst_117039","statearr-117048","e117049","statearr-117050","statearr-117051","statearr-117052","revert.poolsv3/<fetch-account-state","p__117053","vec__117054","user-account","state_117069","state_val_117070","inst_117057","inst_117059","statearr-117071","statearr-117072","statearr-117073","inst_117061","inst_117062","inst_117063","inst_117064","statearr-117074","statearr-117075","inst_117067","statearr-117076","e117077","statearr-117078","statearr-117079","statearr-117080","revert.rewards/<token-stakings","token-addresses","state_117090","state_val_117091","inst_117081","inst_117082","inst_117084","inst_117085","inst_117086","inst_117087","inst_117088","statearr-117092","e117093","statearr-117094","statearr-117095","statearr-117096","cljs.core.concat","revert.utils/weth-address","revert.erc20/<infos","revert.core/<get-block-nums","block-numbers","cljs.core.map","bns","revert.thegraph/<block-times","cljs.core.partition_all","cljs.core.async.merge","cljs.core.async/reduce","cljs.core/merge","state_117105","state_val_117106","inst_117097","inst_117099","inst_117100","inst_117101","inst_117102","inst_117103","statearr-117107","e117108","statearr-117109","statearr-117110","statearr-117111","action__52358__auto__","params__52359__auto__","cljs.core/map?","map__117112","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core/vector?","vec__117114","secretary.core/add-route!","map__117117","vec__117119","map__117122","cljs.core.get","vec__117124","map__117127","vec__117129","address","map__117132","vec__117135","e117134","e117138","revert.utils/str->int","js/Error","err","js/revert","js/revert.core","js/revert.core.history","revert.core/history","G__117139","js/goog.History","goog.events/listen","goog.history.EventType/NAVIGATE","event","secretary.core/dispatch!","revert.core/disable-logs","js/console.log","js/console.error","js/console.warn","js/ethereum","e117140","js/ethereum._log","revert.core/dev-setup","revert.config/debug?","cljs.core.println","cljs.core/*print-length*","cljs.core/*print-level*","revert.core/mount-root","re-frame.core/clear-subscription-cache!","root-el","js/document","reagent.dom/unmount-component-at-node","reagent.dom.render","revert.views/main-panel","revert.core/init","re-frame.core/dispatch-sync"],"sourcesContent":["(ns revert.core\n  (:require-macros [secretary.core :refer [defroute]])\n  (:require [goog.events :as events]\n            [cljs.core.async :refer [go]]\n            [cljs.core.async.interop :refer-macros [<p!]]\n            [reagent.dom :as rdom]\n            [re-frame.core :as re-frame]\n            [secretary.core :as secretary]\n            [revert.views :as views]\n            [revert.pools :as pools]\n            [revert.rewards :as rewards]\n            [revert.erc20 :as erc20]\n            [revert.ethereum :as ethereum]\n            [revert.utils :as u]\n            [revert.thegraph :as thegraph]\n            [revert.poolsv3 :as poolsv3]\n            [revert.events]\n            [revert.config :as config])\n  (:import [goog History]\n           [goog.history EventType]))\n\n(re-frame/reg-fx\n :prompt-select-provider\n (fn [_ _]\n   (go (let [account (<! (ethereum/select-provider))]\n         (when account\n           (re-frame/dispatch [:set-connected true])\n           (u/set-hash! (str \"/account/\" account)))))))\n\n\n(re-frame/reg-fx\n :fetch-pool-histories\n (fn [[pool-addresses days]]\n   (go (let [ph (<! (pools/<pool-histories pool-addresses days))]\n         (if (and ph (not (empty? ph)))\n           (re-frame/dispatch [:pool-histories-fecthed ph])\n           (if (= (count pool-addresses) 1)\n             ;;try to see if this is a v3 pool view\n             (let [ph3 (<! (poolsv3/<pool-histories (first pool-addresses) days))]\n               (when (and ph3 (not (empty? ph3)))\n                 (re-frame/dispatch [:v3pool-histories-fecthed ph3])))\n             (re-frame/dispatch [:v3pool-histories-fecthed ph])))))))\n\n\n(re-frame/reg-fx\n :fetch-account\n (fn [account]\n   (go (let [ah (<! (pools/<fetch-account account))]\n         (when ah\n           (re-frame/dispatch [:account-fetched ah]))))))\n\n\n(re-frame/reg-fx\n :fetch-univ3-account-state\n (fn [account]\n   (go (let [acc-state (<! (poolsv3/<fetch-account-state account))]\n         (when acc-state\n           (re-frame/dispatch [:univ3-account-state-fetched acc-state]))))))\n\n\n(re-frame/reg-fx\n :fetch-pool-stakings\n (fn [[user-account pool-addresses]]\n   (go (let [stakings (<! (rewards/<token-stakings user-account pool-addresses))]\n         (when stakings\n           (re-frame/dispatch [:pool-stakings-fetched stakings]))))))\n\n\n(re-frame/reg-fx\n :fetch-token-infos\n (fn [token-addresses]\n   (go (let [token-addresses' (concat token-addresses u/weth-address)\n             token-infos (<! (erc20/<infos token-addresses'))]\n         (re-frame/dispatch [:token-infos-fetched token-infos])))))\n\n(defn <get-block-nums\n  [block-numbers]\n  (->> (map (fn [bns]\n                 (thegraph/<block-times bns))\n            (partition-all 20 block-numbers))\n       (cljs.core.async/merge)\n       (cljs.core.async/reduce merge {})))\n\n(re-frame/reg-fx\n :fetch-block-timestamps\n (fn [block-numbers]\n   (go (let [blocks-ts (<! (<get-block-nums block-numbers))]\n         (re-frame/dispatch [:block-timestamps-fetched blocks-ts])))))\n\n\n\n\n\n\n\n\n\n(defroute \"/\" []\n  (re-frame/dispatch [:set-showing :all]))\n(defroute \"/about\" []\n  (re-frame/dispatch [:set-showing :about]))\n(defroute \"/account/:account\" [account]\n  (re-frame/dispatch [:set-account account]))\n(defroute \"/pool/:address\" [address]\n  (re-frame/dispatch [:set-pool address 30]))\n(defroute \"/pool/:address/:days\" [address days]\n  (re-frame/dispatch\n   [:set-pool address (try (u/str->int days)\n                           (catch js/Error err 30))]))\n\n\n(defonce history\n  (doto (History.)\n    (events/listen EventType.NAVIGATE\n                   (fn [^js/goog.History.Event event] (secretary/dispatch! (.-token event))))\n    (.setEnabled true)))\n\n(defn disable-logs\n  []\n  (do (set! js/console.log (fn []))\n      (set! js/console.error (fn []))\n      (set! js/console.warn (fn []))\n      (when (exists? js/ethereum)\n        (try\n          (.. js/ethereum._log disableAll)\n          (catch js/Error err (js/console.log \"disableAll not available\"))))))\n\n(defn dev-setup []\n  (if config/debug?\n    (println \"dev mode\")\n    (do  (set! *print-length* 30)\n         (set! *print-level* 30))))\n\n\n(defn ^:dev/after-load mount-root []\n  (re-frame/clear-subscription-cache!)\n  (let [root-el (.getElementById js/document \"app\")]\n    (rdom/unmount-component-at-node root-el)\n    (rdom/render [views/main-panel] root-el)))\n\n\n(defn init []\n  (disable-logs)\n  (re-frame/dispatch-sync [::revert.events/initialize-db])\n  (dev-setup)\n  (mount-root))\n\n"]}