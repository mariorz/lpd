{
"version":3,
"file":"module$node_modules$d3_delaunay$dist$d3_delaunay.js",
"lineCount":45,
"mappings":"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",
"sources":["node_modules/d3-delaunay/dist/d3-delaunay.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_delaunay$dist$d3_delaunay\"] = function(global,require,module,exports) {\n// https://github.com/d3/d3-delaunay v5.3.0 Copyright 2020 Mike Bostock\n// https://github.com/mapbox/delaunator v4.0.1. Copyright 2019 Mapbox, Inc.\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nclass Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\n// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check\nfunction orientIfSure(px, py, rx, ry, qx, qy) {\n    const l = (ry - py) * (qx - px);\n    const r = (rx - px) * (qy - py);\n    return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n}\n\n// a more robust orientation test that's stable in a given triangle (to fix robustness issues)\nfunction orient(rx, ry, qx, qy, px, py) {\n    const sign = orientIfSure(px, py, rx, ry, qx, qy) ||\n    orientIfSure(rx, ry, qx, qy, px, py) ||\n    orientIfSure(qx, qy, px, py, rx, ry);\n    return sign < 0;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n\nconst epsilon = 1e-6;\n\nclass Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n\nclass Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n\nclass Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const bl = dx * dx + dy * dy;\n      const cl = ex * ex + ey * ey;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (!ab) {\n        // degenerate case (collinear diagram)\n        x = (x1 + x3) / 2 - 1e8 * ey;\n        y = (y1 + y3) / 2 + 1e8 * ex;\n      }\n      else if (Math.abs(ab) < 1e-8) {\n        // almost equal points (degenerate triangle)\n        x = (x1 + x3) / 2;\n        y = (y1 + y3) / 2;\n      } else {\n        const d = 1 / ab;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] == cj[aj]\n          && ci[ai + 1] == cj[aj + 1]\n          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]\n          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]\n          ) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points);\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    while (true) {\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    if (P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k]\n        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])\n          P.splice(j, 2), i -= 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n}\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nclass Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      this.triangles[1] = hull[1];\n      this.triangles[2] = hull[1];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) inedges[hull[1]] = 0;\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r = 2) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n\nexports.Delaunay = Delaunay;\nexports.Voronoi = Voronoi;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","self","d3","pseudoAngle","dx","dy","p","Math","abs","dist","ax","ay","bx","by","orientIfSure","px","py","rx","ry","qx","qy","l","r","orient","quicksort","ids","dists","left","right","i","temp","tempDist","j","swap","arr","tmp","defaultGetX","defaultGetY","pointX","pointY","collinear","d","triangles","coords","length","a","b","c","jitter","x","y","sin","cos","flatIterable","points","fx","fy","that","call","EPSILON","pow","EDGE_STACK","Uint32Array","Delaunator","from","getX","getY","n","Float64Array","constructor","Error","maxTriangles","max","_triangles","_halfedges","Int32Array","_hashSize","ceil","sqrt","_hullPrev","_hullNext","_hullTri","_hullHash","fill","_ids","_dists","update","hullPrev","hullNext","hullTri","hullHash","minX","Infinity","minY","maxX","maxY","cx","cy","minDist","i0","i0x","i0y","i1","i1x","i1y","minRadius","ex","ey","bl","cl","i2","i2x","i2y","hull","d0","id","subarray","halfedges","_cx","_cy","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","k","xp","yp","start","key","e","q","t","_legalize","floor","ar","a0","b0","p0","pr","pl","p1","bp","cp","illegal","hbl","_link","br","Path","_x0","_y0","_x1","_y1","_","moveTo","closePath","lineTo","arc","x0","y0","epsilon","rect","w","h","value","Polygon","push","slice","Voronoi","delaunay","xmin","ymin","xmax","ymax","_circumcenters","vectors","_init","circumcenters","t1","t2","t3","x1","y1","x3","y3","x2","y2","ab","render","context","buffer","undefined","inedges","ti","tj","_renderSegment","xi","yi","xj","yj","h1","h0","v","_project","renderBounds","renderCell","_clip","cellPolygons","cell","cellPolygon","index","polygon","c0","_regioncode","c1","S","_clipSegment","contains","_step","neighbors","ci","cj","ai","li","aj","lj","_cell","e0","V","_clipInfinite","_clipFinite","P","e1","sx1","sy1","sx0","sy0","_edgecode","_edge","vx0","vy0","vxn","vyn","Array","unshift","splice","vx","vy","tau","PI","Delaunay","array","_delaunator","_hullIndex","sort","f","bounds","hypot","hullIndex","voronoi","indexOf","find","dc","dt","renderHull","renderPoints","hullPolygon","renderTriangle","t0","trianglePolygons","trianglePolygon","Object","defineProperty"]
}
