{
"version":3,
"file":"module$node_modules$ethereumjs_abi$lib$index.js",
"lineCount":23,
"mappings":"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",
"sources":["node_modules/ethereumjs-abi/lib/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ethereumjs_abi$lib$index\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n/* eslint-disable no-useless-escape */\nconst utils = require('ethereumjs-util')\nconst BN = require('bn.js')\n\nvar ABI = function () {\n}\n\n// Convert from short to canonical names\n// FIXME: optimise or make this nicer?\nfunction elementaryName (name) {\n  if (name.startsWith('int[')) {\n    return 'int256' + name.slice(3)\n  } else if (name === 'int') {\n    return 'int256'\n  } else if (name.startsWith('uint[')) {\n    return 'uint256' + name.slice(4)\n  } else if (name === 'uint') {\n    return 'uint256'\n  } else if (name.startsWith('fixed[')) {\n    return 'fixed128x128' + name.slice(5)\n  } else if (name === 'fixed') {\n    return 'fixed128x128'\n  } else if (name.startsWith('ufixed[')) {\n    return 'ufixed128x128' + name.slice(6)\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128'\n  }\n  return name\n}\n\nABI.eventID = function (name, types) {\n  // FIXME: use node.js util.format?\n  var sig = name + '(' + types.map(elementaryName).join(',') + ')'\n  return utils.keccak256(Buffer.from(sig))\n}\n\nABI.methodID = function (name, types) {\n  return ABI.eventID(name, types).slice(0, 4)\n}\n\n// Parse N from type<N>\nfunction parseTypeN (type) {\n  return parseInt(/^\\D+(\\d+)$/.exec(type)[1], 10)\n}\n\n// Parse N,M from type<N>x<M>\nfunction parseTypeNxM (type) {\n  var tmp = /^\\D+(\\d+)x(\\d+)$/.exec(type)\n  return [ parseInt(tmp[1], 10), parseInt(tmp[2], 10) ]\n}\n\n// Parse N in type[<N>] where \"type\" can itself be an array type.\nfunction parseTypeArray (type) {\n  var tmp = type.match(/(.*)\\[(.*?)\\]$/)\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10)\n  }\n  return null\n}\n\nfunction parseNumber (arg) {\n  var type = typeof arg\n  if (type === 'string') {\n    if (utils.isHexPrefixed(arg)) {\n      return new BN(utils.stripHexPrefix(arg), 16)\n    } else {\n      return new BN(arg, 10)\n    }\n  } else if (type === 'number') {\n    return new BN(arg)\n  } else if (arg.toArray) {\n    // assume this is a BN for the moment, replace with BN.isBN soon\n    return arg\n  } else {\n    throw new Error('Argument is not a number')\n  }\n}\n\n// someMethod(bytes,uint)\n// someMethod(bytes,uint):(boolean)\nfunction parseSignature (sig) {\n  var tmp = /^(\\w+)\\((.*)\\)$/.exec(sig)\n\n  if (tmp.length !== 3) {\n    throw new Error('Invalid method signature')\n  }\n\n  var args = /^(.+)\\):\\((.+)$/.exec(tmp[2])\n\n  if (args !== null && args.length === 3) {\n    return {\n      method: tmp[1],\n      args: args[1].split(','),\n      retargs: args[2].split(',')\n    }\n  } else {\n    var params = tmp[2].split(',')\n    if (params.length === 1 && params[0] === '') {\n      // Special-case (possibly naive) fixup for functions that take no arguments.\n      // TODO: special cases are always bad, but this makes the function return\n      // match what the calling functions expect\n      params = []\n    }\n    return {\n      method: tmp[1],\n      args: params\n    }\n  }\n}\n\n// Encodes a single item (can be dynamic array)\n// @returns: Buffer\nfunction encodeSingle (type, arg) {\n  var size, num, ret, i\n\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg))\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0)\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg, 'utf8'))\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof arg.length === 'undefined') {\n      throw new Error('Not an array?')\n    }\n    size = parseTypeArray(type)\n    if (size !== 'dynamic' && size !== 0 && arg.length > size) {\n      throw new Error('Elements exceed array size: ' + size)\n    }\n    ret = []\n    type = type.slice(0, type.lastIndexOf('['))\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg)\n    }\n    for (i in arg) {\n      ret.push(encodeSingle(type, arg[i]))\n    }\n    if (size === 'dynamic') {\n      var length = encodeSingle('uint256', arg.length)\n      ret.unshift(length)\n    }\n    return Buffer.concat(ret)\n  } else if (type === 'bytes') {\n    arg = Buffer.from(arg)\n\n    ret = Buffer.concat([ encodeSingle('uint256', arg.length), arg ])\n\n    if ((arg.length % 32) !== 0) {\n      ret = Buffer.concat([ ret, utils.zeros(32 - (arg.length % 32)) ])\n    }\n\n    return ret\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(arg, 32)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    if (num < 0) {\n      throw new Error('Supplied uint is negative')\n    }\n\n    return num.toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('ufixed')) {\n    size = parseTypeNxM(type)\n\n    num = parseNumber(arg)\n\n    if (num < 0) {\n      throw new Error('Supplied ufixed is negative')\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))))\n  } else if (type.startsWith('fixed')) {\n    size = parseTypeNxM(type)\n\n    return encodeSingle('int256', parseNumber(arg).mul(new BN(2).pow(new BN(size[1]))))\n  }\n\n  throw new Error('Unsupported or invalid type: ' + type)\n}\n\n// Decodes a single item (can be dynamic array)\n// @returns: array\n// FIXME: this method will need a lot of attention at checking limits and validation\nfunction decodeSingle (parsedType, data, offset) {\n  if (typeof parsedType === 'string') {\n    parsedType = parseType(parsedType)\n  }\n  var size, num, ret, i\n\n  if (parsedType.name === 'address') {\n    return decodeSingle(parsedType.rawType, data, offset).toArrayLike(Buffer, 'be', 20).toString('hex')\n  } else if (parsedType.name === 'bool') {\n    return decodeSingle(parsedType.rawType, data, offset).toString() === new BN(1).toString()\n  } else if (parsedType.name === 'string') {\n    var bytes = decodeSingle(parsedType.rawType, data, offset)\n    return Buffer.from(bytes, 'utf8').toString()\n  } else if (parsedType.isArray) {\n    // this part handles fixed-length arrays ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    ret = []\n    size = parsedType.size\n\n    if (parsedType.size === 'dynamic') {\n      offset = decodeSingle('uint256', data, offset).toNumber()\n      size = decodeSingle('uint256', data, offset).toNumber()\n      offset = offset + 32\n    }\n    for (i = 0; i < size; i++) {\n      var decoded = decodeSingle(parsedType.subArray, data, offset)\n      ret.push(decoded)\n      offset += parsedType.subArray.memoryUsage\n    }\n    return ret\n  } else if (parsedType.name === 'bytes') {\n    offset = decodeSingle('uint256', data, offset).toNumber()\n    size = decodeSingle('uint256', data, offset).toNumber()\n    return data.slice(offset + 32, offset + 32 + size)\n  } else if (parsedType.name.startsWith('bytes')) {\n    return data.slice(offset, offset + parsedType.size)\n  } else if (parsedType.name.startsWith('uint')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be')\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded int exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n    return num\n  } else if (parsedType.name.startsWith('int')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be').fromTwos(256)\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded uint exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n\n    return num\n  } else if (parsedType.name.startsWith('ufixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('uint256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  } else if (parsedType.name.startsWith('fixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('int256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  }\n  throw new Error('Unsupported or invalid type: ' + parsedType.name)\n}\n\n// Parse the given type\n// @returns: {} containing the type itself, memory usage and (including size and subArray if applicable)\nfunction parseType (type) {\n  var size\n  var ret\n  if (isArray(type)) {\n    size = parseTypeArray(type)\n    var subArray = type.slice(0, type.lastIndexOf('['))\n    subArray = parseType(subArray)\n    ret = {\n      isArray: true,\n      name: type,\n      size: size,\n      memoryUsage: size === 'dynamic' ? 32 : subArray.memoryUsage * size,\n      subArray: subArray\n    }\n    return ret\n  } else {\n    var rawType\n    switch (type) {\n      case 'address':\n        rawType = 'uint160'\n        break\n      case 'bool':\n        rawType = 'uint8'\n        break\n      case 'string':\n        rawType = 'bytes'\n        break\n    }\n    ret = {\n      rawType: rawType,\n      name: type,\n      memoryUsage: 32\n    }\n\n    if ((type.startsWith('bytes') && type !== 'bytes') || type.startsWith('uint') || type.startsWith('int')) {\n      ret.size = parseTypeN(type)\n    } else if (type.startsWith('ufixed') || type.startsWith('fixed')) {\n      ret.size = parseTypeNxM(type)\n    }\n\n    if (type.startsWith('bytes') && type !== 'bytes' && (ret.size < 1 || ret.size > 32)) {\n      throw new Error('Invalid bytes<N> width: ' + ret.size)\n    }\n    if ((type.startsWith('uint') || type.startsWith('int')) && (ret.size % 8 || ret.size < 8 || ret.size > 256)) {\n      throw new Error('Invalid int/uint<N> width: ' + ret.size)\n    }\n    return ret\n  }\n}\n\n// Is a type dynamic?\nfunction isDynamic (type) {\n  // FIXME: handle all types? I don't think anything is missing now\n  return (type === 'string') || (type === 'bytes') || (parseTypeArray(type) === 'dynamic')\n}\n\n// Is a type an array?\nfunction isArray (type) {\n  return type.lastIndexOf(']') === type.length - 1\n}\n\n// Encode a method/event with arguments\n// @types an array of string type names\n// @args  an array of the appropriate values\nABI.rawEncode = function (types, values) {\n  var output = []\n  var data = []\n\n  var headLength = 0\n\n  types.forEach(function (type) {\n    if (isArray(type)) {\n      var size = parseTypeArray(type)\n\n      if (size !== 'dynamic') {\n        headLength += 32 * size\n      } else {\n        headLength += 32\n      }\n    } else {\n      headLength += 32\n    }\n  })\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    var cur = encodeSingle(type, value)\n\n    // Use the head/tail method for storing dynamic data\n    if (isDynamic(type)) {\n      output.push(encodeSingle('uint256', headLength))\n      data.push(cur)\n      headLength += cur.length\n    } else {\n      output.push(cur)\n    }\n  }\n\n  return Buffer.concat(output.concat(data))\n}\n\nABI.rawDecode = function (types, data) {\n  var ret = []\n  data = Buffer.from(data)\n  var offset = 0\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var parsed = parseType(type, data, offset)\n    var decoded = decodeSingle(parsed, data, offset)\n    offset += parsed.memoryUsage\n    ret.push(decoded)\n  }\n  return ret\n}\n\nABI.simpleEncode = function (method) {\n  var args = Array.prototype.slice.call(arguments).slice(1)\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (args.length !== sig.args.length) {\n    throw new Error('Argument count mismatch')\n  }\n\n  return Buffer.concat([ ABI.methodID(sig.method, sig.args), ABI.rawEncode(sig.args, args) ])\n}\n\nABI.simpleDecode = function (method, data) {\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (!sig.retargs) {\n    throw new Error('No return values in method')\n  }\n\n  return ABI.rawDecode(sig.retargs, data)\n}\n\nfunction stringify (type, value) {\n  if (type.startsWith('address') || type.startsWith('bytes')) {\n    return '0x' + value.toString('hex')\n  } else {\n    return value.toString()\n  }\n}\n\nABI.stringify = function (types, values) {\n  var ret = []\n\n  for (var i in types) {\n    var type = types[i]\n    var value = values[i]\n\n    // if it is an array type, concat the items\n    if (/^[^\\[]+\\[.*\\]$/.test(type)) {\n      value = value.map(function (item) {\n        return stringify(type, item)\n      }).join(', ')\n    } else {\n      value = stringify(type, value)\n    }\n\n    ret.push(value)\n  }\n\n  return ret\n}\n\nABI.solidityHexValue = function (type, value, bitsize) {\n  // pass in bitsize = null if use default bitsize\n  var size, num\n  if (isArray(type)) {\n    var subType = type.replace(/\\[.*?\\]/, '')\n    if (!isArray(subType)) {\n      var arraySize = parseTypeArray(type)\n      if (arraySize !== 'dynamic' && arraySize !== 0 && value.length > arraySize) {\n        throw new Error('Elements exceed array size: ' + arraySize)\n      }\n    }\n    var arrayValues = value.map(function (v) {\n      return ABI.solidityHexValue(subType, v, 256)\n    })\n    return Buffer.concat(arrayValues)\n  } else if (type === 'bytes') {\n    return value\n  } else if (type === 'string') {\n    return Buffer.from(value, 'utf8')\n  } else if (type === 'bool') {\n    bitsize = bitsize || 8\n    var padding = Array((bitsize) / 4).join('0')\n    return Buffer.from(value ? padding + '1' : padding + '0', 'hex')\n  } else if (type === 'address') {\n    var bytesize = 20\n    if (bitsize) {\n      bytesize = bitsize / 8\n    }\n    return utils.setLengthLeft(value, bytesize)\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(value, size)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toArrayLike(Buffer, 'be', bitsize / 8)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8)\n  } else {\n    // FIXME: support all other types\n    throw new Error('Unsupported or invalid type: ' + type)\n  }\n}\n\nABI.solidityPack = function (types, values) {\n  if (types.length !== values.length) {\n    throw new Error('Number of types are not matching the values')\n  }\n\n  var ret = []\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    ret.push(ABI.solidityHexValue(type, value, null))\n  }\n\n  return Buffer.concat(ret)\n}\n\nABI.soliditySHA3 = function (types, values) {\n  return utils.keccak256(ABI.solidityPack(types, values))\n}\n\nABI.soliditySHA256 = function (types, values) {\n  return utils.sha256(ABI.solidityPack(types, values))\n}\n\nABI.solidityRIPEMD160 = function (types, values) {\n  return utils.ripemd160(ABI.solidityPack(types, values), true)\n}\n\n// Serpent's users are familiar with this encoding\n// - s: string\n// - b: bytes\n// - b<N>: bytes<N>\n// - i: int256\n// - a: int256[]\n\nfunction isNumeric (c) {\n  // FIXME: is this correct? Seems to work\n  return (c >= '0') && (c <= '9')\n}\n\n// For a \"documentation\" refer to https://github.com/ethereum/serpent/blob/develop/preprocess.cpp\nABI.fromSerpent = function (sig) {\n  var ret = []\n  for (var i = 0; i < sig.length; i++) {\n    var type = sig[i]\n    if (type === 's') {\n      ret.push('bytes')\n    } else if (type === 'b') {\n      var tmp = 'bytes'\n      var j = i + 1\n      while ((j < sig.length) && isNumeric(sig[j])) {\n        tmp += sig[j] - '0'\n        j++\n      }\n      i = j - 1\n      ret.push(tmp)\n    } else if (type === 'i') {\n      ret.push('int256')\n    } else if (type === 'a') {\n      ret.push('int256[]')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret\n}\n\nABI.toSerpent = function (types) {\n  var ret = []\n  for (var i = 0; i < types.length; i++) {\n    var type = types[i]\n    if (type === 'bytes') {\n      ret.push('s')\n    } else if (type.startsWith('bytes')) {\n      ret.push('b' + parseTypeN(type))\n    } else if (type === 'int256') {\n      ret.push('i')\n    } else if (type === 'int256[]') {\n      ret.push('a')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret.join('')\n}\n\nmodule.exports = ABI\n\n};"],
"names":["shadow$provide","global","require","module","exports","elementaryName","name","startsWith","slice","parseTypeN","type","parseInt","exec","parseTypeNxM","tmp","parseTypeArray","match","parseNumber","arg","utils","isHexPrefixed","BN","stripHexPrefix","toArray","Error","parseSignature","sig","length","args","method","split","retargs","params","encodeSingle","i","Buffer","from","isArray","size","ret","lastIndexOf","JSON","parse","push","unshift","concat","zeros","setLengthRight","num","bitLength","toArrayLike","toTwos","mul","pow","decodeSingle","parsedType","data","offset","parseType","rawType","toString","bytes","toNumber","decoded","subArray","memoryUsage","fromTwos","mod","isZero","div","stringify","value","isNumeric","c","ABI","eventID","ABI.eventID","types","map","join","keccak256","methodID","ABI.methodID","rawEncode","ABI.rawEncode","values","output","headLength","forEach","cur","rawDecode","ABI.rawDecode","parsed","simpleEncode","ABI.simpleEncode","Array","prototype","call","arguments","simpleDecode","ABI.simpleDecode","ABI.stringify","test","item","solidityHexValue","ABI.solidityHexValue","bitsize","subType","replace","arraySize","arrayValues","v","padding","bytesize","setLengthLeft","solidityPack","ABI.solidityPack","soliditySHA3","ABI.soliditySHA3","soliditySHA256","ABI.soliditySHA256","sha256","solidityRIPEMD160","ABI.solidityRIPEMD160","ripemd160","fromSerpent","ABI.fromSerpent","j","toSerpent","ABI.toSerpent"]
}
