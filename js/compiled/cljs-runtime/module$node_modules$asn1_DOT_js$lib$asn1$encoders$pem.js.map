{
"version":3,
"file":"module$node_modules$asn1_DOT_js$lib$asn1$encoders$pem.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,qDAAf,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOlHC,QAASA,WAAU,CAACC,MAAD,CAAS,CAC1BC,UAAA,CAAWC,IAAX,CAAgB,IAAhB,CAAsBF,MAAtB,CACA,KAAA,CAAKG,GAAL,CAAW,KAFe,CAJtBC,MAAAA,CAAWR,OAAA,CAAQ,+CAAR,CAEjB,OAAMK,WAAaL,OAAA,CAAQ,uDAAR,CAMnBQ,OAAA,CAASL,UAAT,CAAqBE,UAArB,CACAJ,OAAA,CAAOC,OAAP,CAAiBC,UAEjBA,WAAA,CAAWM,SAAX,CAAqBC,MAArB,CAA8BC,QAAe,CAACC,IAAD,CAAOC,OAAP,CAAgB,CAGrDC,IAAAA,CAFMT,UAAAU,CAAWN,SAAXM,CAAqBL,MAArBK,CAA4BT,IAA5BS,CAAiC,IAAjCA,CAAuCH,IAAvCG,CAEF,CAAIC,QAAJ,CAAa,QAAb,CACV;MAAMC,IAAM,CAAE,aAAF,CAAkBJ,OAAlB,CAA0BK,KAA1B,CAAkC,OAAlC,CACZ,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBL,IAApB,CAAsBM,MAAtB,CAA8BD,CAA9B,EAAmC,EAAnC,CACEF,GAAA,CAAII,IAAJ,CAASP,IAAA,CAAEQ,KAAF,CAAQH,CAAR,CAAWA,CAAX,CAAe,EAAf,CAAT,CACFF,IAAA,CAAII,IAAJ,CAAS,WAAT,CAAuBR,OAAvB,CAA+BK,KAA/B,CAAuC,OAAvC,CACA,OAAOD,IAAA,CAAIM,IAAJ,CAAS,IAAT,CARoD,CAdqD;",
"sources":["node_modules/asn1_DOT_js/lib/asn1/encoders/pem.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$asn1_DOT_js$lib$asn1$encoders$pem\"] = function(global,require,module,exports) {\n'use strict';\n\nconst inherits = require('inherits');\n\nconst DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  const buf = DEREncoder.prototype.encode.call(this, data);\n\n  const p = buf.toString('base64');\n  const out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (let i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","PEMEncoder","entity","DEREncoder","call","enc","inherits","prototype","encode","PEMEncoder.prototype.encode","data","options","p","buf","toString","out","label","i","length","push","slice","join"]
}
