{"version":3,"sources":["re_frisk/ui.cljs"],"mappings":"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","names":["re-frisk.ui/on-external-window-unload","app","reagent.dom/unmount-component-at-node","cljs.core.swap_BANG_","re-frisk.db/tool-state","cljs.core/assoc","re-frisk.ui/mount-external","window","doc","re-frame-data","goog.object/set","re-frisk.subs-graph/init","reagent.dom.render","re-frisk.ui.views/main-view","re-frisk.ui/open-debugger-window","map__63809","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","ext_height","ext_width","cljs.core/deref","win","js/window.open","or__4126__auto__","re-frisk.ui.external-hml/html-doc","re-frisk.ui/on-iframe-load","iframe","js/document","re-frisk.ui/inner-view","ext-opened?","reagent.ratom/make-reaction","latest-left","left","re-frisk.utils/normalize-draggable","re-frisk.ui.components.drag/draggable","js/window.innerWidth","re-frisk.ui.style/inner-view-container","re-frisk.ui.style/external-button","re-frisk.utils/closed?","re-frisk.ui.style/dragg-button","re-frisk.ui.components.drag/mouse-down-handler","re-frisk.ui/mount-internal","div"],"sourcesContent":["(ns re-frisk.ui\n  (:require-macros [reagent.ratom :refer [reaction]])\n  (:require [re-frisk.utils :as utils]\n            [re-frisk.ui.style :as style]\n            [reagent.dom :as rdom]\n            [re-frisk.ui.components.drag :as drag]\n            [re-frisk.ui.external-hml :as external-hml]\n            [re-frisk.db :as db]\n            [re-frisk.subs-graph :as subs-graph]\n            [re-frisk.ui.views :as ui.views]))\n\n(defn on-external-window-unload [app]\n  (fn []\n    (rdom/unmount-component-at-node app)\n    (swap! db/tool-state assoc :ext-win-opened? false)))\n\n(defn mount-external [window doc re-frame-data]\n  (let [app (.getElementById doc \"re-frisk-debugger-div\")]\n    (goog.object/set window \"onunload\" (on-external-window-unload app))\n    (swap! db/tool-state assoc :ext-win-opened? true :doc doc)\n    (subs-graph/init window doc)\n    (rdom/render\n     [:div {:style {:height \"100%\"}}\n      [ui.views/main-view re-frame-data db/tool-state doc]]\n     app)))\n\n(defn open-debugger-window [re-frame-data]\n  (fn []\n    (let [{:keys [ext_height ext_width]} (:opts @db/tool-state)\n          win (js/window.open \"\" \"Debugger\" (str \"width=\" (or ext_width 800)\n                                                 \",height=\" (or ext_height 800)\n                                                 \",resizable=yes,scrollbars=yes,status=no\"\n                                                 \",directories=no,toolbar=no,menubar=no\"))\n          doc (.-document win)]\n      (.open doc)\n      (.write doc external-hml/html-doc)\n      (goog.object/set win \"onload\" #(mount-external win doc re-frame-data))\n      (.close doc))))\n\n(defn on-iframe-load [re-frame-data]\n  (fn []\n    (let [iframe (.getElementById js/document \"re-frisk-iframe\")\n          doc (.-contentDocument iframe)\n          win (.-contentWindow iframe)]\n      (swap! db/tool-state assoc :doc doc)\n      (subs-graph/init win doc)\n      (rdom/render\n       [:div {:style {:height \"100%\"}}\n        [ui.views/main-view re-frame-data db/tool-state doc]]\n       (.getElementById doc \"re-frisk-debugger-div\")))))\n\n(defn inner-view [re-frame-data]\n  (let [ext-opened? (reaction (:ext-win-opened? @db/tool-state))\n        latest-left (reaction (:latest-left @db/tool-state))]\n    (fn []\n      (when-not @ext-opened?\n        (let [left (or (utils/normalize-draggable (:x @drag/draggable))\n                       (- js/window.innerWidth 30))]\n          [:div {:style (style/inner-view-container left (:offset @drag/draggable))}\n           [:div {:style {:display :flex :flex-direction :column :opacity 0.3}}\n            [:div {:style    style/external-button\n                   :on-click (open-debugger-window re-frame-data)}\n             \"\\u2197\"]\n            [:div {:style {:display :flex :flex 1 :justify-content :center :flex-direction :column}}\n             [:div {:style    style/external-button\n                    :on-click #(let []\n                                 (when-not (utils/closed? left)\n                                   (swap! db/tool-state assoc :latest-left (- js/window.innerWidth left)))\n                                 (swap! drag/draggable assoc :x (- js/window.innerWidth\n                                                                   (if (utils/closed? left) @latest-left 30))))}\n              (if (utils/closed? left) \"\\u2b60\" \"\\u2b62\")]\n             [:div {:style         style/dragg-button\n                    :on-mouse-down drag/mouse-down-handler}]]]\n           (when-not (utils/closed? left)\n             [:div {:style {:display :flex :flex 1 :width \"100%\" :height \"100%\"}}\n              [:iframe {:id      \"re-frisk-iframe\" :src-doc external-hml/html-doc :width \"100%\" :height \"100%\"\n                        :style   (if (:offset @drag/draggable) {:pointer-events :none} {:pointer-events :all})\n                        :on-load (on-iframe-load re-frame-data)}]])])))))\n\n(defn mount-internal [re-frame-data]\n  (let [div (.createElement js/document \"div\")]\n    (goog.object/set div \"style\"\n                     (str \"position:fixed; top:0; left:0; bottom:0; right:0; width:100%; height:100%; border:none;\"\n                          \"margin:0; padding:0; z-index:999999999;pointer-events: none;\"))\n    (.appendChild (.-body js/document) div)\n    (rdom/render [inner-view re-frame-data] div)))"]}