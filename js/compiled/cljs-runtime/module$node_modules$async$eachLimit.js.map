{
"version":3,
"file":"module$node_modules$async$eachLimit.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,mCAAf,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAoBhGC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAP,CAAWC,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAjBrCG,MAAA,CAAOC,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAA,CAAQI,OAAR,CAoCAI,QAAkB,CAACC,IAAD,CAAOC,KAAP,CAAcC,QAAd,CAAwBC,QAAxB,CAAkC,CAClD,CAAC,CAAA,CAAGC,aAAH,CAAiBT,OAAlB,EAA2BM,KAA3B,CAAA,CAAkCD,IAAlC,CAAwC,CAAC,CAAA,CAAGK,cAAH,CAAkBV,OAAnB,EAA4B,CAAC,CAAA,CAAGW,WAAH,CAAeX,OAAhB,EAAyBO,QAAzB,CAA5B,CAAxC,CAAyGC,QAAzG,CADkD,CAlChDI,OAAAA,CAAelB,OAAA,CAAQ,gDAAR,CAEnB,KAAIe,cAAgBZ,sBAAA,CAAuBe,MAAvB,CAEhBC;MAAAA,CAAgBnB,OAAA,CAAQ,iDAAR,CAEpB,KAAIgB,eAAiBb,sBAAA,CAAuBgB,MAAvB,CAEjBC,QAAAA,CAAapB,OAAA,CAAQ,8CAAR,CAEjB,KAAIiB,YAAcd,sBAAA,CAAuBiB,OAAvB,CA2BlBnB,OAAA,CAAOC,OAAP,CAAiBA,OAAA,CAAQ,SAAR,CA7C+E;",
"sources":["node_modules/async/eachLimit.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$async$eachLimit\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachLimit;\n\nvar _eachOfLimit = require('./internal/eachOfLimit');\n\nvar _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);\n\nvar _withoutIndex = require('./internal/withoutIndex');\n\nvar _withoutIndex2 = _interopRequireDefault(_withoutIndex);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfLimit`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachLimit(coll, limit, iteratee, callback) {\n  (0, _eachOfLimit2.default)(limit)(coll, (0, _withoutIndex2.default)((0, _wrapAsync2.default)(iteratee)), callback);\n}\nmodule.exports = exports['default'];\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","eachLimit","coll","limit","iteratee","callback","_eachOfLimit2","_withoutIndex2","_wrapAsync2","_eachOfLimit","_withoutIndex","_wrapAsync"]
}
