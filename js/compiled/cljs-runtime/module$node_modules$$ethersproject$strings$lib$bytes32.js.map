{
"version":3,
"file":"module$node_modules$$ethersproject$strings$lib$bytes32.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,sDAAf,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEnHC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAA,CAAQI,kBAAR,CAA6BJ,OAA7B,CAAqCK,mBAArC,CAA2D,IAAK,EAChE,KAAIC,YAAcR,OAAA,CAAQ,wDAAR,CAAlB,CACIS,QAAUT,OAAA,CAAQ,oDAAR,CADd,CAEIU,OAASV,OAAA,CAAQ,qDAAR,CAWbE,QAAA,CAAQK,mBAAR,CAVAA,QAA4B,CAACI,IAAD,CAAO,CAE3BC,IAAAA,CAAQF,MAAA,CAAOG,WAAP,CAAmBF,IAAnB,CAEZ;GAAmB,EAAnB,CAAIC,IAAJ,CAAUE,MAAV,CACI,KAAUC,MAAJ,CAAU,2CAAV,CAAN,CAGJ,MAAON,QAAA,CAAQO,OAAR,CAAgBP,OAAA,CAAQQ,MAAR,CAAe,CAACL,IAAD,CAAQJ,WAAR,CAAoBU,QAApB,CAAf,CAAA,CAA8CC,KAA9C,CAAoD,CAApD,CAAuD,EAAvD,CAAhB,CARwB,CA4BnCjB,QAAA,CAAQI,kBAAR,CAjBAA,QAA2B,CAACM,KAAD,CAAQ,CAC3BQ,KAAAA,CAAOX,OAAA,CAAQY,QAAR,CAAiBT,KAAjB,CAEX,IAAoB,EAApB,GAAIQ,KAAJ,CAASN,MAAT,CACI,KAAUC,MAAJ,CAAU,qCAAV,CAAN,CAEJ,GAAiB,CAAjB,GAAIK,KAAA,CAAK,EAAL,CAAJ,CACI,KAAUL,MAAJ,CAAU,6CAAV,CAAN,CAIJ,IADA,IAAID,OAAS,EACb,CAA4B,CAA5B,GAAOM,KAAA,CAAKN,MAAL,CAAc,CAAd,CAAP,CAAA,CACIA,MAAA,EAGJ,OAAOJ,OAAA,CAAOY,YAAP,CAAoBF,KAAA,CAAKD,KAAL,CAAW,CAAX,CAAcL,MAAd,CAApB,CAfwB,CAlBgF;",
"sources":["node_modules/@ethersproject/strings/lib/bytes32.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$ethersproject$strings$lib$bytes32\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseBytes32String = exports.formatBytes32String = void 0;\nvar constants_1 = require(\"@ethersproject/constants\");\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar utf8_1 = require(\"./utf8\");\nfunction formatBytes32String(text) {\n    // Get the bytes\n    var bytes = utf8_1.toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return bytes_1.hexlify(bytes_1.concat([bytes, constants_1.HashZero]).slice(0, 32));\n}\nexports.formatBytes32String = formatBytes32String;\nfunction parseBytes32String(bytes) {\n    var data = bytes_1.arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    var length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return utf8_1.toUtf8String(data.slice(0, length));\n}\nexports.parseBytes32String = parseBytes32String;\n//# sourceMappingURL=bytes32.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","parseBytes32String","formatBytes32String","constants_1","bytes_1","utf8_1","text","bytes","toUtf8Bytes","length","Error","hexlify","concat","HashZero","slice","data","arrayify","toUtf8String"]
}
