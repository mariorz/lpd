shadow$provide.module$node_modules$axios$lib$utils=function(global,require,module,exports){function isArray(val){return"[object Array]"===toString.call(val)}function isObject(val){return null!==val&&"object"===typeof val}function isFunction(val){return"[object Function]"===toString.call(val)}function forEach(obj,fn){if(null!==obj&&"undefined"!==typeof obj)if("object"!==typeof obj&&(obj=[obj]),isArray(obj))for(var i=0,l=obj.length;i<l;i++)fn.call(null,obj[i],i,obj);else for(i in obj)Object.prototype.hasOwnProperty.call(obj,
i)&&fn.call(null,obj[i],i,obj)}function merge(){function assignValue(val,key){result[key]="object"===typeof result[key]&&"object"===typeof val?merge(result[key],val):val}for(var result={},i=0,l=arguments.length;i<l;i++)forEach(arguments[i],assignValue);return result}var bind=require("module$node_modules$axios$lib$helpers$bind");global=require("module$node_modules$is_buffer$index");var toString=Object.prototype.toString;module.exports={isArray,isArrayBuffer:function(val){return"[object ArrayBuffer]"===
toString.call(val)},isBuffer:global,isFormData:function(val){return"undefined"!==typeof FormData&&val instanceof FormData},isArrayBufferView:function(val){return"undefined"!==typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(val):val&&val.buffer&&val.buffer instanceof ArrayBuffer},isString:function(val){return"string"===typeof val},isNumber:function(val){return"number"===typeof val},isObject,isUndefined:function(val){return"undefined"===typeof val},isDate:function(val){return"[object Date]"===
toString.call(val)},isFile:function(val){return"[object File]"===toString.call(val)},isBlob:function(val){return"[object Blob]"===toString.call(val)},isFunction,isStream:function(val){return isObject(val)&&isFunction(val.pipe)},isURLSearchParams:function(val){return"undefined"!==typeof URLSearchParams&&val instanceof URLSearchParams},isStandardBrowserEnv:function(){return"undefined"!==typeof navigator&&"ReactNative"===navigator.product?!1:"undefined"!==typeof window&&"undefined"!==typeof document},
forEach,merge,extend:function(a,b,thisArg){forEach(b,function(val,key){a[key]=thisArg&&"function"===typeof val?bind(val,thisArg):val});return a},trim:function(str){return str.replace(/^\s*/,"").replace(/\s*$/,"")}}}
//# sourceMappingURL=module$node_modules$axios$lib$utils.js.map
