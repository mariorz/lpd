{
"version":3,
"file":"module$node_modules$web3_provider_engine$util$estimate_gas.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,0DAAf,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACvH,MAAMC,cAAgBH,OAAA,CAAQ,8DAAR,CAEtBC,OAAA,CAAOC,OAAP,CASAE,QAAoB,CAACC,QAAD,CAAWC,QAAX,CAAqBC,EAArB,CAAyB,CAC3CF,QAAA,CAASG,SAAT,CAAmBL,aAAA,CAAc,CAC/BM,OAAQ,iBADuB,CAE/BC,OAAQ,CAACJ,QAAD,CAFuB,CAAd,CAAnB,CAGI,QAAQ,CAACK,GAAD,CAAMC,GAAN,CAAU,CACpB,GAAID,GAAJ,CAEE,MAAoB,mCAApB,GAAIA,GAAJ,CAAQE,OAAR,CACSN,EAAA,CAAG,IAAH,CAAS,QAAT,CADT,CAGSA,EAAA,CAAGI,GAAH,CAGXJ,GAAA,CAAG,IAAH,CAASK,GAAT,CAAaE,MAAb,CAToB,CAHtB,CAD2C,CAZ0E;",
"sources":["node_modules/web3-provider-engine/util/estimate-gas.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_provider_engine$util$estimate_gas\"] = function(global,require,module,exports) {\nconst createPayload = require('./create-payload.js')\n\nmodule.exports = estimateGas\n\n/*\n\nThis is a work around for https://github.com/ethereum/go-ethereum/issues/2577\n\n*/\n\n\nfunction estimateGas(provider, txParams, cb) {\n  provider.sendAsync(createPayload({\n    method: 'eth_estimateGas',\n    params: [txParams]\n  }), function(err, res){\n    if (err) {\n      // handle simple value transfer case\n      if (err.message === 'no contract code at given address') {\n        return cb(null, '0xcf08')\n      } else {\n        return cb(err)        \n      }\n    }\n    cb(null, res.result)\n  })\n}\n};"],
"names":["shadow$provide","global","require","module","exports","createPayload","estimateGas","provider","txParams","cb","sendAsync","method","params","err","res","message","result"]
}
