{
"version":3,
"file":"module$node_modules$bn_DOT_js$lib$bn.js",
"lineCount":101,
"mappings":"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",
"sources":["node_modules/bn_DOT_js/lib/bn.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bn_DOT_js$lib$bn\"] = function(global,require,module,exports) {\n(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n\n};"],
"names":["shadow$provide","global","require","module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","negative","words","length","red","_init","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","len","Math","min","i","smallMulTo","self","num","out","a","b","carry","k","ncarry","rword","maxJ","j","max","strip","FFTM","x","y","MPrime","name","p","n","bitLength","iushln","isub","tmp","_tmp","K256","call","P224","P192","P25519","Red","m","prime","_prime","gtn","Mont","shift","r2","imod","sqr","rinv","_invmp","minv","isubn","div","umod","sub","wordSize","Buffer","window","e","BN.isBN","Array","isArray","BN.max","left","right","cmp","BN.min","BN.prototype._init","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","BN.prototype._initNumber","BN.prototype._initArray","ceil","off","w","BN.prototype._parseHex","BN.prototype._parseBase","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","BN.prototype.copy","dest","clone","BN.prototype.clone","_expand","BN.prototype._expand","size","BN.prototype.strip","_normSign","BN.prototype._normSign","inspect","BN.prototype.inspect","zeros","groupSizes","groupBases","BN.prototype.toString","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","BN.prototype.toNumber","ret","toJSON","BN.prototype.toJSON","toBuffer","BN.prototype.toBuffer","toArrayLike","BN.prototype.toArray","BN.prototype.toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","_countBits","clz32","BN.prototype._countBits","t","_zeroBits","BN.prototype._zeroBits","BN.prototype.bitLength","hi","zeroBits","BN.prototype.zeroBits","BN.prototype.byteLength","toTwos","BN.prototype.toTwos","width","abs","inotn","iaddn","fromTwos","BN.prototype.fromTwos","testn","notn","ineg","isNeg","BN.prototype.isNeg","neg","BN.prototype.neg","BN.prototype.ineg","iuor","BN.prototype.iuor","ior","BN.prototype.ior","or","BN.prototype.or","uor","BN.prototype.uor","iuand","BN.prototype.iuand","iand","BN.prototype.iand","and","BN.prototype.and","uand","BN.prototype.uand","iuxor","BN.prototype.iuxor","ixor","BN.prototype.ixor","xor","BN.prototype.xor","uxor","BN.prototype.uxor","BN.prototype.inotn","bytesNeeded","bitsLeft","BN.prototype.notn","setn","BN.prototype.setn","bit","wbit","iadd","BN.prototype.iadd","add","BN.prototype.add","BN.prototype.isub","BN.prototype.sub","comb10MulTo","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","lo","imul","mid","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","mulTo","BN.prototype.mulTo","hncarry","fftm","mulp","makeRBT","FFTM.prototype.makeRBT","N","l","revBin","FFTM.prototype.revBin","rb","permute","FFTM.prototype.permute","rbt","rws","iws","rtws","itws","transform","FFTM.prototype.transform","s","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","FFTM.prototype.guessLen13b","odd","conjugate","FFTM.prototype.conjugate","normalize13b","FFTM.prototype.normalize13b","ws","round","convert13b","FFTM.prototype.convert13b","stub","FFTM.prototype.stub","ph","FFTM.prototype.mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","BN.prototype.mul","mulf","BN.prototype.mulf","BN.prototype.imul","BN.prototype.imuln","muln","BN.prototype.muln","BN.prototype.sqr","isqr","BN.prototype.isqr","BN.prototype.pow","BN.prototype.iushln","bits","carryMask","newCarry","ishln","BN.prototype.ishln","BN.prototype.iushrn","hint","extended","mask","h","ishrn","BN.prototype.ishrn","shln","BN.prototype.shln","ushln","BN.prototype.ushln","shrn","BN.prototype.shrn","ushrn","BN.prototype.ushrn","BN.prototype.testn","imaskn","BN.prototype.imaskn","maskn","BN.prototype.maskn","BN.prototype.iaddn","BN.prototype._iaddn","BN.prototype.isubn","addn","BN.prototype.addn","subn","BN.prototype.subn","iabs","BN.prototype.iabs","BN.prototype.abs","_ishlnsubmul","BN.prototype._ishlnsubmul","_wordDiv","BN.prototype._wordDiv","mode","bhi","bhiBits","diff","qj","divmod","BN.prototype.divmod","positive","divn","BN.prototype.div","BN.prototype.mod","BN.prototype.umod","divRound","BN.prototype.divRound","dm","half","BN.prototype.modn","acc","BN.prototype.idivn","BN.prototype.divn","egcd","BN.prototype.egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","BN.prototype._invmp","x1","x2","delta","cmpn","BN.prototype.gcd","invm","BN.prototype.invm","BN.prototype.isEven","BN.prototype.isOdd","BN.prototype.andln","bincn","BN.prototype.bincn","BN.prototype.isZero","BN.prototype.cmpn","BN.prototype.cmp","ucmp","BN.prototype.ucmp","BN.prototype.gtn","gt","BN.prototype.gt","gten","BN.prototype.gten","gte","BN.prototype.gte","ltn","BN.prototype.ltn","lt","BN.prototype.lt","lten","BN.prototype.lten","lte","BN.prototype.lte","eqn","BN.prototype.eqn","eq","BN.prototype.eq","BN.red","toRed","BN.prototype.toRed","ctx","convertTo","_forceRed","fromRed","BN.prototype.fromRed","convertFrom","BN.prototype._forceRed","forceRed","BN.prototype.forceRed","redAdd","BN.prototype.redAdd","redIAdd","BN.prototype.redIAdd","redSub","BN.prototype.redSub","redISub","BN.prototype.redISub","redShl","BN.prototype.redShl","shl","redMul","BN.prototype.redMul","_verify2","redIMul","BN.prototype.redIMul","redSqr","BN.prototype.redSqr","_verify1","redISqr","BN.prototype.redISqr","redSqrt","BN.prototype.redSqrt","sqrt","redInvm","BN.prototype.redInvm","redNeg","BN.prototype.redNeg","redPow","BN.prototype.redPow","primes","k256","p224","p192","p25519","MPrime.prototype._tmp","ireduce","MPrime.prototype.ireduce","split","imulK","rlen","undefined","_strip","MPrime.prototype.split","input","MPrime.prototype.imulK","K256.prototype.split","output","outLen","prev","next","K256.prototype.imulK","P25519.prototype.imulK","BN._prime","Red.prototype._verify1","Red.prototype._verify2","Red.prototype.imod","Red.prototype.neg","Red.prototype.add","Red.prototype.iadd","Red.prototype.sub","Red.prototype.isub","Red.prototype.shl","Red.prototype.imul","Red.prototype.mul","Red.prototype.isqr","Red.prototype.sqr","Red.prototype.sqrt","mod3","one","nOne","lpow","z","Red.prototype.invm","inv","Red.prototype.pow","wnd","current","currentLen","windowSize","Red.prototype.convertTo","Red.prototype.convertFrom","mont","BN.mont","Mont.prototype.convertTo","Mont.prototype.convertFrom","Mont.prototype.imul","u","Mont.prototype.mul","Mont.prototype.invm"]
}
