{
"version":3,
"file":"module$node_modules$ethereum_common$params_json.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/ethereum-common/params.json"],
"sourcesContent":["shadow$provide[\"module$node_modules$ethereum_common$params_json\"] = function(global,require,module,exports) {\nmodule.exports=({\n  \"genesisGasLimit\": {\n    \"v\": 5000,\n    \"d\": \"Gas limit of the Genesis block.\"\n  },\n  \"genesisDifficulty\": {\n    \"v\": 17179869184,\n    \"d\": \"Difficulty of the Genesis block.\"\n  },\n  \"genesisNonce\": {\n    \"v\": \"0x0000000000000042\",\n    \"d\": \"the geneis nonce\"\n  },\n  \"genesisExtraData\": {\n    \"v\": \"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa\",\n    \"d\": \"extra data \"\n  },\n  \"genesisHash\": {\n    \"v\": \"0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3\",\n    \"d\": \"genesis hash\"\n  },\n  \"genesisStateRoot\": {\n    \"v\": \"0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544\",\n    \"d\": \"the genesis state root\"\n  },\n  \"minGasLimit\": {\n    \"v\": 5000,\n    \"d\": \"Minimum the gas limit may ever be.\"\n  },\n  \"gasLimitBoundDivisor\": {\n    \"v\": 1024,\n    \"d\": \"The bound divisor of the gas limit, used in update calculations.\"\n  },\n  \"minimumDifficulty\": {\n    \"v\": 131072,\n    \"d\": \"The minimum that the difficulty may ever be.\"\n  },\n  \"difficultyBoundDivisor\": {\n    \"v\": 2048,\n    \"d\": \"The bound divisor of the difficulty, used in the update calculations.\"\n  },\n  \"durationLimit\": {\n    \"v\": 13,\n    \"d\": \"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not.\"\n  },\n  \"maximumExtraDataSize\": {\n    \"v\": 32,\n    \"d\": \"Maximum size extra data may be after Genesis.\"\n  },\n  \"epochDuration\": {\n    \"v\": 30000,\n    \"d\": \"Duration between proof-of-work epochs.\"\n  },\n  \"stackLimit\": {\n    \"v\": 1024,\n    \"d\": \"Maximum size of VM stack allowed.\"\n  },\n  \"callCreateDepth\": {\n    \"v\": 1024,\n    \"d\": \"Maximum depth of call/create stack.\"\n  },\n\n  \"tierStepGas\": {\n    \"v\": [0, 2, 3, 5, 8, 10, 20],\n    \"d\": \"Once per operation, for a selection of them.\"\n  },\n  \"expGas\": {\n    \"v\": 10,\n    \"d\": \"Once per EXP instuction.\"\n  },\n  \"expByteGas\": {\n    \"v\": 10,\n    \"d\": \"Times ceil(log256(exponent)) for the EXP instruction.\"\n  },\n\n  \"sha3Gas\": {\n    \"v\": 30,\n    \"d\": \"Once per SHA3 operation.\"\n  },\n  \"sha3WordGas\": {\n    \"v\": 6,\n    \"d\": \"Once per word of the SHA3 operation's data.\"\n  },\n  \"sloadGas\": {\n    \"v\": 50,\n    \"d\": \"Once per SLOAD operation.\"\n  },\n  \"sstoreSetGas\": {\n    \"v\": 20000,\n    \"d\": \"Once per SSTORE operation if the zeroness changes from zero.\"\n  },\n  \"sstoreResetGas\": {\n    \"v\": 5000,\n    \"d\": \"Once per SSTORE operation if the zeroness does not change from zero.\"\n  },\n  \"sstoreRefundGas\": {\n    \"v\": 15000,\n    \"d\": \"Once per SSTORE operation if the zeroness changes to zero.\"\n  },\n  \"jumpdestGas\": {\n    \"v\": 1,\n    \"d\": \"Refunded gas, once per SSTORE operation if the zeroness changes to zero.\"\n  },\n\n  \"logGas\": {\n    \"v\": 375,\n    \"d\": \"Per LOG* operation.\"\n  },\n  \"logDataGas\": {\n    \"v\": 8,\n    \"d\": \"Per byte in a LOG* operation's data.\"\n  },\n  \"logTopicGas\": {\n    \"v\": 375,\n    \"d\": \"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas.\"\n  },\n\n  \"createGas\": {\n    \"v\": 32000,\n    \"d\": \"Once per CREATE operation & contract-creation transaction.\"\n  },\n\n  \"callGas\": {\n    \"v\": 40,\n    \"d\": \"Once per CALL operation & message call transaction.\"\n  },\n  \"callStipend\": {\n    \"v\": 2300,\n    \"d\": \"Free gas given at beginning of call.\"\n  },\n  \"callValueTransferGas\": {\n    \"v\": 9000,\n    \"d\": \"Paid for CALL when the value transfor is non-zero.\"\n  },\n  \"callNewAccountGas\": {\n    \"v\": 25000,\n    \"d\": \"Paid for CALL when the destination address didn't exist prior.\"\n  },\n\n  \"suicideRefundGas\": {\n    \"v\": 24000,\n    \"d\": \"Refunded following a suicide operation.\"\n  },\n\n  \"memoryGas\": {\n    \"v\": 3,\n    \"d\": \"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL.\"\n  },\n  \"quadCoeffDiv\": {\n    \"v\": 512,\n    \"d\": \"Divisor for the quadratic particle of the memory cost equation.\"\n  },\n\n  \"createDataGas\": {\n    \"v\": 200,\n    \"d\": \"\"\n  },\n  \"txGas\": {\n    \"v\": 21000,\n    \"d\": \"Per transaction. NOTE: Not payable on data of calls between transactions.\"\n  },\n  \"txCreation\": {\n    \"v\": 32000,\n    \"d\": \"the cost of creating a contract via tx\"\n  },\n  \"txDataZeroGas\": {\n    \"v\": 4,\n    \"d\": \"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions.\"\n  },\n  \"txDataNonZeroGas\": {\n    \"v\": 68,\n    \"d\": \"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions.\"\n  },\n\n  \"copyGas\": {\n    \"v\": 3,\n    \"d\": \"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added.\"\n  },\n\n  \"ecrecoverGas\": {\n    \"v\": 3000,\n    \"d\": \"\"\n  },\n  \"sha256Gas\": {\n    \"v\": 60,\n    \"d\": \"\"\n  },\n  \"sha256WordGas\": {\n    \"v\": 12,\n    \"d\": \"\"\n  },\n  \"ripemd160Gas\": {\n    \"v\": 600,\n    \"d\": \"\"\n  },\n  \"ripemd160WordGas\": {\n    \"v\": 120,\n    \"d\": \"\"\n  },\n  \"identityGas\": {\n    \"v\": 15,\n    \"d\": \"\"\n  },\n  \"identityWordGas\": {\n    \"v\": 3,\n    \"d\": \"\"\n  },\n  \"minerReward\": {\n    \"v\": \"5000000000000000000\",\n    \"d\": \"the amount a miner get rewarded for mining a block\"\n  },\n  \"ommerReward\": {\n    \"v\": \"625000000000000000\",\n    \"d\": \"The amount of wei a miner of an uncle block gets for being inculded in the blockchain\"\n  },\n  \"niblingReward\": {\n    \"v\": \"156250000000000000\",\n    \"d\": \"the amount a miner gets for inculding a uncle\"\n  },\n  \"homeSteadForkNumber\": {\n    \"v\": 1150000,\n    \"d\": \"the block that the Homestead fork started at\"\n  },\n  \"homesteadRepriceForkNumber\": {\n    \"v\": 2463000,\n    \"d\": \"the block that the Homestead Reprice (EIP150) fork started at\"\n  },\n  \"timebombPeriod\": {\n    \"v\": 100000,\n    \"d\": \"Exponential difficulty timebomb period\"\n  },\n  \"freeBlockPeriod\": {\n    \"v\": 2\n  }\n}\n);\n};"],
"names":["shadow$provide","global","require","module","exports"]
}
