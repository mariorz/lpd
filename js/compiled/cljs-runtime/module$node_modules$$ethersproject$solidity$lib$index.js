shadow$provide.module$node_modules$$ethersproject$solidity$lib$index=function(global,require,module,exports){function _pack(type,value$jscomp$0,isArray){switch(type){case "address":return isArray?bytes_1.zeroPad(value$jscomp$0,32):bytes_1.arrayify(value$jscomp$0);case "string":return strings_1.toUtf8Bytes(value$jscomp$0);case "bytes":return bytes_1.arrayify(value$jscomp$0);case "bool":return value$jscomp$0=value$jscomp$0?"0x01":"0x00",isArray?bytes_1.zeroPad(value$jscomp$0,32):bytes_1.arrayify(value$jscomp$0)}var match=
type.match(regexNumber);if(match){var size=parseInt(match[2]||"256");if(match[2]&&String(size)!==match[2]||0!==size%8||0===size||256<size)throw Error("invalid number type - "+type);isArray&&(size=256);value$jscomp$0=bignumber_1.BigNumber.from(value$jscomp$0).toTwos(size);return bytes_1.zeroPad(value$jscomp$0,size/8)}if(match=type.match(regexBytes)){size=parseInt(match[1]);if(String(size)!==match[1]||0===size||32<size)throw Error("invalid bytes type - "+type);if(bytes_1.arrayify(value$jscomp$0).byteLength!==
size)throw Error("invalid value for "+type);return isArray?bytes_1.arrayify((value$jscomp$0+"0000000000000000000000000000000000000000000000000000000000000000").substring(0,66)):value$jscomp$0}if((match=type.match(regexArray))&&Array.isArray(value$jscomp$0)){var baseType_1=match[1];if(parseInt(match[2]||String(value$jscomp$0.length))!=value$jscomp$0.length)throw Error("invalid value for "+type);var result_1=[];value$jscomp$0.forEach(function(value){result_1.push(_pack(baseType_1,value,!0))});return bytes_1.concat(result_1)}throw Error("invalid type - "+
type);}function pack(types,values){if(types.length!=values.length)throw Error("type/value count mismatch");var tight=[];types.forEach(function(type,index){tight.push(_pack(type,values[index]))});return bytes_1.hexlify(bytes_1.concat(tight))}Object.defineProperty(exports,"__esModule",{value:!0});exports.sha256=exports.keccak256=exports.pack=void 0;var bignumber_1=require("module$node_modules$$ethersproject$bignumber$lib$index"),bytes_1=require("module$node_modules$$ethersproject$bytes$lib$index"),
keccak256_1=require("module$node_modules$$ethersproject$keccak256$lib$index"),sha2_1=require("module$node_modules$$ethersproject$sha2$lib$index"),strings_1=require("module$node_modules$$ethersproject$strings$lib$index"),regexBytes=/^bytes([0-9]+)$/,regexNumber=/^(u?int)([0-9]*)$/,regexArray=/^(.*)\[([0-9]*)\]$/;exports.pack=pack;exports.keccak256=function(types,values){return keccak256_1.keccak256(pack(types,values))};exports.sha256=function(types,values){return sha2_1.sha256(pack(types,values))}}
//# sourceMappingURL=module$node_modules$$ethersproject$solidity$lib$index.js.map
