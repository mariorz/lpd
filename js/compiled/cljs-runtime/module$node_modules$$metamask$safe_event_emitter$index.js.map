{
"version":3,
"file":"module$node_modules$$metamask$safe_event_emitter$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,sDAAf,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAInHC,QAASA,UAAS,CAACC,OAAD,CAAUC,OAAV,CAAmBC,IAAnB,CAAyB,CACvC,GAAI,CACAC,OAAA,CAAQC,KAAR,CAAcJ,OAAd,CAAuBC,OAAvB,CAAgCC,IAAhC,CADA,CAGJ,MAAOG,GAAP,CAAY,CAERC,UAAA,CAAW,QAAA,EAAM,CACb,KAAMD,IAAN,CADa,CAAjB,CAFQ,CAJ2B,CAF3CE,MAAA,CAAOC,cAAP,CAAsBV,OAAtB,CAA+B,YAA/B,CAA6C,CAAEW,MAAO,CAAA,CAAT,CAA7C,CACA,KAAMC,SAAWd,OAAA,CAAQ,mCAAR,CAoBXe,OAAAA,CAAN,QAAA,EAAA,CAAA,MAAA,SAAA,CAAA,YAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,EAAA,IAAA,CAA+BC,QAAAA,CAAAA,QAAAA,CAAzBD,MAAyBC,CAAAF,QAAAE,CAASA,YAATA,CAC3B,OAAAC,CAAA,SAAAA,CAAA,IAAAA,CAAAA,QAAI,CAACC,IAAD;AAAUZ,IAAV,CAAgB,CAAT,IAAA,IAAS,mBAAT,EAAA,CAAA,kBAAA,CAAA,CAAA,iBAAA,CAAA,SAAA,CAAA,MAAA,CAAA,EAAA,iBAAA,CAAS,kBAAT,CAAA,iBAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,iBAAA,CACHa,kBAAAA,CAAmB,OAAnBA,GAAUD,IACd,KAAME,OAAS,IAATA,CAAcC,OACpB,IAAeC,IAAAA,EAAf,GAAIF,MAAJ,CACID,iBAAA,CAAUA,iBAAV,EAAsCG,IAAAA,EAAtC,GAAqBF,MAArB,CAA4BG,KADhC,KAGK,IAAI,CAACJ,iBAAL,CACD,MAAO,CAAA,CAGX,IAAIA,iBAAJ,CAAa,CAET,GAAkB,CAAlB,CAZYb,kBAYZ,CAASkB,MAAT,CACI,IAACC,GAAD,OAAA,CAAA,YAAA,CAbQnB,kBAaR,CAAA,CAAA,IAAA,EAACmB,CAAD,KAEJ,IAAIA,EAAJ,WAAkBC,MAAlB,CAGI,KAAMD,GAAN,CAGEhB,kBAAAA;AAAUiB,KAAJ,CAAU,kBAAV,EAA6BD,EAAA,CAAK,IAAL,CAAUA,EAAV,CAAaE,OAAb,CAAK,GAAL,CAA0B,EAAvD,EACZlB,mBAAA,CAAIJ,OAAJ,CAAcoB,EACd,MAAMhB,mBAAN,CAbS,CAePL,MAAAA,CAAUgB,MAAA,CAAOF,IAAP,CAChB,IAAgBI,IAAAA,EAAhB,GAAIlB,MAAJ,CACI,MAAO,CAAA,CAEX,IAAuB,UAAvB,GAAI,MAAOA,OAAX,CACID,SAAA,CAAUC,MAAV,CAAmB,IAAnB,CA9BYE,kBA8BZ,CADJ,KAGK,CAxCT,IAAMsB,EAyCQC,EAzCRD,CAyCcxB,MAzCdwB,CAyCsBJ,MAxCtBM,kBAAAA,CAAWC,KAAJ,CAAUH,CAAV,CACb,KAAK,IAAII,EAAI,CAAb,CAAgBA,CAAhB,CAAoBJ,CAApB,CAAuBI,CAAvB,EAA4B,CAA5B,CACIF,iBAAA,CAAKE,CAAL,CAAA,CAuCiC5B,MAvCvB,CAAI4B,CAAJ,CAwCN,KAASA,MAAT,CAAa,CAAb,CAAgBA,MAAhB,CAAoBH,EAApB,CAAyBG,MAAzB,EAA8B,CAA9B,CACI7B,SAAA,CAvCL2B,iBAuCe,CAAUE,MAAV,CAAV,CAAwB,IAAxB,CApCQ1B,kBAoCR,CAJH,CAOL,MAAO,CAAA,CAvCS,CA0CxBJ,QAAA,CAAQ+B,OAAR,CAAkBlB,MAlEiG;",
"sources":["node_modules/@metamask/safe-event-emitter/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$metamask$safe_event_emitter$index\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = require(\"events\");\nfunction safeApply(handler, context, args) {\n    try {\n        Reflect.apply(handler, context, args);\n    }\n    catch (err) {\n        // Throw error after timeout so as not to interrupt the stack\n        setTimeout(() => {\n            throw err;\n        });\n    }\n}\nfunction arrayClone(arr) {\n    const n = arr.length;\n    const copy = new Array(n);\n    for (let i = 0; i < n; i += 1) {\n        copy[i] = arr[i];\n    }\n    return copy;\n}\nclass SafeEventEmitter extends events_1.EventEmitter {\n    emit(type, ...args) {\n        let doError = type === 'error';\n        const events = this._events;\n        if (events !== undefined) {\n            doError = doError && events.error === undefined;\n        }\n        else if (!doError) {\n            return false;\n        }\n        // If there is no 'error' event listener then throw.\n        if (doError) {\n            let er;\n            if (args.length > 0) {\n                [er] = args;\n            }\n            if (er instanceof Error) {\n                // Note: The comments on the `throw` lines are intentional, they show\n                // up in Node's output if this results in an unhandled exception.\n                throw er; // Unhandled 'error' event\n            }\n            // At least give some kind of context to the user\n            const err = new Error(`Unhandled error.${er ? ` (${er.message})` : ''}`);\n            err.context = er;\n            throw err; // Unhandled 'error' event\n        }\n        const handler = events[type];\n        if (handler === undefined) {\n            return false;\n        }\n        if (typeof handler === 'function') {\n            safeApply(handler, this, args);\n        }\n        else {\n            const len = handler.length;\n            const listeners = arrayClone(handler);\n            for (let i = 0; i < len; i += 1) {\n                safeApply(listeners[i], this, args);\n            }\n        }\n        return true;\n    }\n}\nexports.default = SafeEventEmitter;\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","safeApply","handler","context","args","Reflect","apply","err","setTimeout","Object","defineProperty","value","events_1","SafeEventEmitter","EventEmitter","emit","type","doError","events","_events","undefined","error","length","er","Error","message","n","len","copy","Array","i","default"]
}
