{
"version":3,
"file":"module$node_modules$async$eachOfLimit.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,qCAAf,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlGC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQI,OAAR,CAgCAC,QAAoB,CAACC,IAAD,CAAOC,KAAP,CAAcC,QAAd,CAAwBC,QAAxB,CAAkC,CACpD,CAAC,CAAA,CAAGC,aAAH,CAAiBN,OAAlB,EAA2BG,KAA3B,CAAA,CAAkCD,IAAlC,CAAwC,CAAC,CAAA,CAAGK,WAAH,CAAeP,OAAhB,EAAyBI,QAAzB,CAAxC,CAA4EC,QAA5E,CADoD,CA5BtD,KAAIC,cAM0C,CAR1CE,MAQ0C,CAR1Bd,OAAA,CAAQ,gDAAR,CAQ0B,GANHc,MAMG,CAAWC,UAAX,CANHD,MAMG,CAA8B,CAAER,QANnCQ,MAMiC,CAN5E,CAIID,YAE0C,CAJ1CG,OAI0C,CAJ7BhB,OAAA,CAAQ,8CAAR,CAI6B,GAFLgB,OAEK,CAAWD,UAAX;AAFLC,OAEK,CAA8B,CAAEV,QAFrCU,OAEmC,CAyB5Ef,OAAA,CAAOC,OAAP,CAAiBA,OAAA,CAAQ,SAAR,CAzCiF;",
"sources":["node_modules/async/eachOfLimit.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$async$eachOfLimit\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachOfLimit;\n\nvar _eachOfLimit2 = require('./internal/eachOfLimit');\n\nvar _eachOfLimit3 = _interopRequireDefault(_eachOfLimit2);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachOfLimit(coll, limit, iteratee, callback) {\n  (0, _eachOfLimit3.default)(limit)(coll, (0, _wrapAsync2.default)(iteratee), callback);\n}\nmodule.exports = exports['default'];\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","eachOfLimit","coll","limit","iteratee","callback","_eachOfLimit3","_wrapAsync2","_eachOfLimit2","__esModule","_wrapAsync"]
}
