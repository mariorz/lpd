{
"version":3,
"file":"module$node_modules$qrcode$lib$core$byte_data.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,6CAAf,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAI1GC,QAASA,SAAS,CAACC,IAAD,CAAO,CACvB,IAAA,CAAKC,IAAL,CAAYC,IAAZ,CAAiBC,IACjB,KAAA,CAAKH,IAAL,CAAYI,UAAA,CAAWC,IAAX,CAAgBL,IAAhB,CAFW,CAHzB,IAAII,WAAaR,OAAA,CAAQ,wDAAR,CAAjB,CACIM,KAAON,OAAA,CAAQ,0CAAR,CAOXG,SAAA,CAASO,aAAT,CAAyBC,QAAuB,CAACC,MAAD,CAAS,CACvD,MAAgB,EAAhB,CAAOA,MADgD,CAIzDT,SAAA,CAASU,SAAT,CAAmBC,SAAnB,CAA+BC,QAAmB,EAAG,CACnD,MAAO,KAAP,CAAYX,IAAZ,CAAiBQ,MADkC,CAIrDT,SAAA,CAASU,SAAT,CAAmBH,aAAnB,CAAmCM,QAAuB,EAAG,CAC3D,MAAOb,SAAA,CAASO,aAAT,CAAuB,IAAvB,CAA4BN,IAA5B,CAAiCQ,MAAjC,CADoD,CAI7DT;QAAA,CAASU,SAAT,CAAmBI,KAAnB,CAA2BC,QAAS,CAACC,SAAD,CAAY,CAC9C,IAD8C,IACrCC,EAAI,CADiC,CAC9BC,EAAI,IAAJA,CAASjB,IAATiB,CAAcT,MAA9B,CAAsCQ,CAAtC,CAA0CC,CAA1C,CAA6CD,CAAA,EAA7C,CACED,SAAA,CAAUG,GAAV,CAAc,IAAA,CAAKlB,IAAL,CAAUgB,CAAV,CAAd,CAA4B,CAA5B,CAF4C,CAMhDnB,OAAA,CAAOC,OAAP,CAAiBC,QA3ByF;",
"sources":["node_modules/qrcode/lib/core/byte-data.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$qrcode$lib$core$byte_data\"] = function(global,require,module,exports) {\nvar BufferUtil = require('../utils/buffer')\nvar Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  this.data = BufferUtil.from(data)\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n\n};"],
"names":["shadow$provide","global","require","module","exports","ByteData","data","mode","Mode","BYTE","BufferUtil","from","getBitsLength","ByteData.getBitsLength","length","prototype","getLength","ByteData.prototype.getLength","ByteData.prototype.getBitsLength","write","ByteData.prototype.write","bitBuffer","i","l","put"]
}
