{
"version":3,
"file":"module$node_modules$$walletconnect$utils$dist$cjs$ethereum.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@walletconnect/utils/dist/cjs/ethereum.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$walletconnect$utils$dist$cjs$ethereum\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseTransactionData = exports.parsePersonalSign = exports.isValidAddress = exports.toChecksumAddress = void 0;\nconst js_sha3_1 = require(\"js-sha3\");\nconst encoding_1 = require(\"./encoding\");\nconst misc_1 = require(\"./misc\");\nconst validators_1 = require(\"./validators\");\nconst enc_utils_1 = require(\"enc-utils\");\nfunction toChecksumAddress(address) {\n    address = enc_utils_1.removeHexPrefix(address.toLowerCase());\n    const hash = enc_utils_1.removeHexPrefix(js_sha3_1.keccak_256(encoding_1.convertUtf8ToBuffer(address)));\n    let checksum = \"\";\n    for (let i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) > 7) {\n            checksum += address[i].toUpperCase();\n        }\n        else {\n            checksum += address[i];\n        }\n    }\n    return enc_utils_1.addHexPrefix(checksum);\n}\nexports.toChecksumAddress = toChecksumAddress;\nconst isValidAddress = (address) => {\n    if (!address) {\n        return false;\n    }\n    else if (address.toLowerCase().substring(0, 2) !== \"0x\") {\n        return false;\n    }\n    else if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        return false;\n    }\n    else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n        return true;\n    }\n    else {\n        return address === toChecksumAddress(address);\n    }\n};\nexports.isValidAddress = isValidAddress;\nfunction parsePersonalSign(params) {\n    if (!validators_1.isEmptyArray(params) && !validators_1.isHexString(params[0])) {\n        params[0] = encoding_1.convertUtf8ToHex(params[0]);\n    }\n    return params;\n}\nexports.parsePersonalSign = parsePersonalSign;\nfunction parseTransactionData(txData) {\n    if (typeof txData.from === \"undefined\" || !exports.isValidAddress(txData.from)) {\n        throw new Error(`Transaction object must include a valid 'from' value.`);\n    }\n    function parseHexValues(value) {\n        let result = value;\n        if (typeof value === \"number\" || (typeof value === \"string\" && !validators_1.isEmptyString(value))) {\n            if (!validators_1.isHexString(value)) {\n                result = encoding_1.convertNumberToHex(value);\n            }\n            else if (typeof value === \"string\") {\n                result = misc_1.sanitizeHex(value);\n            }\n        }\n        if (typeof result === \"string\") {\n            result = misc_1.removeHexLeadingZeros(result);\n        }\n        return result;\n    }\n    const txDataRPC = {\n        from: misc_1.sanitizeHex(txData.from),\n        to: typeof txData.to === \"undefined\" ? \"\" : misc_1.sanitizeHex(txData.to),\n        gasPrice: typeof txData.gasPrice === \"undefined\" ? \"\" : parseHexValues(txData.gasPrice),\n        gas: typeof txData.gas === \"undefined\"\n            ? typeof txData.gasLimit === \"undefined\"\n                ? \"\"\n                : parseHexValues(txData.gasLimit)\n            : parseHexValues(txData.gas),\n        value: typeof txData.value === \"undefined\" ? \"\" : parseHexValues(txData.value),\n        nonce: typeof txData.nonce === \"undefined\" ? \"\" : parseHexValues(txData.nonce),\n        data: typeof txData.data === \"undefined\" ? \"\" : misc_1.sanitizeHex(txData.data) || \"0x\",\n    };\n    const prunable = [\"gasPrice\", \"gas\", \"value\", \"nonce\"];\n    Object.keys(txDataRPC).forEach((key) => {\n        if (!txDataRPC[key].trim().length && prunable.includes(key)) {\n            delete txDataRPC[key];\n        }\n    });\n    return txDataRPC;\n}\nexports.parseTransactionData = parseTransactionData;\n//# sourceMappingURL=ethereum.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","toChecksumAddress","address","enc_utils_1","removeHexPrefix","toLowerCase","hash","js_sha3_1","keccak_256","encoding_1","convertUtf8ToBuffer","checksum","i","length","parseInt","toUpperCase","addHexPrefix","Object","defineProperty","value","parseTransactionData","parsePersonalSign","isValidAddress","misc_1","validators_1","substring","test","params","isEmptyArray","isHexString","convertUtf8ToHex","txData","parseHexValues","result","isEmptyString","sanitizeHex","convertNumberToHex","removeHexLeadingZeros","from","Error","txDataRPC","to","gasPrice","gas","gasLimit","nonce","data","prunable","keys","forEach","key","trim","includes"]
}
