{
"version":3,
"file":"module$node_modules$$walletconnect$utils$dist$cjs$url.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,qDAAf,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAmBlHC,QAASA,iBAAgB,CAACC,WAAD,CAAc,CACnC,MAAOC,iBAAA,CAAiBC,KAAjB,CAAuBF,WAAvB,CAD4B,CAIvCG,QAASA,kBAAiB,CAACC,WAAD,CAAc,CACpC,MAAOH,iBAAA,CAAiBI,SAAjB,CAA2BD,WAA3B,CAD6B,CArBxCE,MAAA,CAAOC,cAAP,CAAsBT,OAAtB,CAA+B,YAA/B,CAA6C,CAAEU,MAAO,CAAA,CAAT,CAA7C,CACAV,QAAA,CAAQK,iBAAR,CAA4BL,OAA5B,CAAoCC,gBAApC,CAAuDD,OAAvD,CAA+DW,mBAA/D,CAAqFX,OAArF,CAA6FY,cAA7F,CAA8G,IAAK,EAEnH,OAAMT,iBADUL,OAAAe,CAAQ,iCAARA,CACS,CAAQC,YAAR,CAAqBhB,OAAA,CAAQ,wCAAR,CAArB,CAMzBE;OAAA,CAAQY,cAAR,CALAA,QAAuB,CAACG,GAAD,CAAM,CACzB,MAAMC,QAA+B,EAArB,GAAAD,GAAA,CAAIE,OAAJ,CAAY,GAAZ,CAAA,CAA0BF,GAAA,CAAIE,OAAJ,CAAY,GAAZ,CAA1B,CAA6CC,IAAAA,EAE7D,OADuC,WAAnBhB,GAAA,MAAOc,QAAPd,CAAiCa,GAAA,CAAII,MAAJ,CAAWH,OAAX,CAAjCd,CAAuD,EAFlD,CAY7BF,QAAA,CAAQW,mBAAR,CANAA,QAA4B,CAACT,WAAD,CAAckB,cAAd,CAA8B,CAClDd,WAAAA,CAAcL,gBAAA,CAAiBC,WAAjB,CAClBI,YAAA,CAAcE,MAAA,CAAOa,MAAP,CAAcb,MAAA,CAAOa,MAAP,CAAc,EAAd,CAAkBf,WAAlB,CAAd,CAA8Cc,cAA9C,CAEd,OADAlB,YACA,CADcG,iBAAA,CAAkBC,WAAlB,CAHwC,CAU1DN,QAAA,CAAQC,gBAAR,CAA2BA,gBAI3BD,QAAA,CAAQK,iBAAR,CAA4BA,iBA1BsF;",
"sources":["node_modules/@walletconnect/utils/dist/cjs/url.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$walletconnect$utils$dist$cjs$url\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatQueryString = exports.parseQueryString = exports.appendToQueryString = exports.getQueryString = void 0;\nconst tslib_1 = require(\"tslib\");\nconst queryStringUtils = tslib_1.__importStar(require(\"query-string\"));\nfunction getQueryString(url) {\n    const pathEnd = url.indexOf(\"?\") !== -1 ? url.indexOf(\"?\") : undefined;\n    const queryString = typeof pathEnd !== \"undefined\" ? url.substr(pathEnd) : \"\";\n    return queryString;\n}\nexports.getQueryString = getQueryString;\nfunction appendToQueryString(queryString, newQueryParams) {\n    let queryParams = parseQueryString(queryString);\n    queryParams = Object.assign(Object.assign({}, queryParams), newQueryParams);\n    queryString = formatQueryString(queryParams);\n    return queryString;\n}\nexports.appendToQueryString = appendToQueryString;\nfunction parseQueryString(queryString) {\n    return queryStringUtils.parse(queryString);\n}\nexports.parseQueryString = parseQueryString;\nfunction formatQueryString(queryParams) {\n    return queryStringUtils.stringify(queryParams);\n}\nexports.formatQueryString = formatQueryString;\n//# sourceMappingURL=url.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","parseQueryString","queryString","queryStringUtils","parse","formatQueryString","queryParams","stringify","Object","defineProperty","value","appendToQueryString","getQueryString","tslib_1","__importStar","url","pathEnd","indexOf","undefined","substr","newQueryParams","assign"]
}
