shadow$provide.module$node_modules$ws$lib$buffer_util=function(global,require,module,exports){function concat(list,totalLength){totalLength=Buffer.allocUnsafe(totalLength);for(var offset=0,i=0;i<list.length;i++){const buf=list[i];buf.copy(totalLength,offset);offset+=buf.length}return totalLength}function _mask(source,mask,output,offset,length){for(var i=0;i<length;i++)output[offset+i]=source[i]^mask[i&3]}function _unmask(buffer,mask){const length=buffer.length;for(var i=0;i<length;i++)buffer[i]^=
mask[i&3]}var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";try{const bufferUtil=require("module$node_modules$bufferutil$index"),bu=bufferUtil.BufferUtil||bufferUtil;module.exports={mask(source,mask,output,offset,length){48>length?_mask(source,mask,output,offset,length):bu.mask(source,mask,output,offset,length)},unmask(buffer,mask){32>buffer.length?_unmask(buffer,mask):bu.unmask(buffer,mask)},concat}}catch(e){module.exports={concat,mask:_mask,unmask:_unmask}}}
//# sourceMappingURL=module$node_modules$ws$lib$buffer_util.js.map
