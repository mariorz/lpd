{
"version":3,
"file":"module$node_modules$enc_utils$dist$cjs$index.js",
"lineCount":13,
"mappings":"AAAAA,cAAA,CAAe,4CAAf,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBzGC,QAASA,cAAa,CAACC,GAAD,CAAM,CACxB,MAAO,KAAIC,UAAJ,CAAeD,GAAf,CADiB,CAI5BE,QAASA,YAAW,CAACF,GAAD,CAAMG,QAAA,CAAW,CAAA,CAAjB,CAAwB,CAClCC,GAAAA,CAAMJ,GAAA,CAAIK,QAAJ,CAbAC,KAaA,CACZ,OAAOH,SAAA,CAAWI,YAAA,CAAaH,GAAb,CAAX,CAA+BA,GAFE,CAK5CI,QAASA,aAAY,CAACR,GAAD,CAAM,CACvB,MAAOA,IAAA,CAAIK,QAAJ,CAjBMI,MAiBN,CADgB,CAI3BC,QAASA,eAAc,CAACV,GAAD,CAAM,CACzB,MAAOA,IAAA,CAAIW,UAAJ,CAAe,CAAf,CAAkBX,GAAlB,CAAsBY,MAAtB,CADkB,CAQ7BC,QAASA,cAAa,CAACC,GAAD,CAAM,CACxB,MAAOC,uBAAA,CAAuBC,OAAvB,CAA+BF,GAA/B,CADiB,CAI5BG,QAASA,WAAU,CAACH,GAAD,CAAMX,QAAA,CAAW,CAAA,CAAjB,CAAwB,CACvC,MAAOD,YAAA,CAAYW,aAAA,CAAcC,GAAd,CAAZ;AAAgCX,QAAhC,CADgC,CAI3Ce,QAASA,YAAW,CAACJ,GAAD,CAAM,CACtB,MAAON,aAAA,CAAaK,aAAA,CAAcC,GAAd,CAAb,CADe,CAI1BK,QAASA,cAAa,CAACL,GAAD,CAAM,CACxB,MAAOJ,eAAA,CAAeG,aAAA,CAAcC,GAAd,CAAf,CADiB,CAI5BM,QAASA,cAAa,CAACN,GAAD,CAAM,CACxB,MAAOO,MAAA,CAAMC,IAAN,CAAWR,GAAX,CAAA,CACFS,GADE,CACEC,cADF,CAAA,CAEFC,IAFE,CAEG,EAFH,CADiB,CAM5BC,QAASA,YAAW,CAACtB,GAAD,CAAM,CACtB,MAAOuB,OAAA,CAAOL,IAAP,CAAYM,eAAA,CAAgBxB,GAAhB,CAAZ,CApDKE,KAoDL,CADe,CAI1BuB,QAASA,WAAU,CAACzB,GAAD,CAAM,CACrB,MAAOL,cAAA,CAAc2B,WAAA,CAAYtB,GAAZ,CAAd,CADc,CAYzB0B,QAASA,YAAW,CAAC1B,GAAD,CAAM,CACtB,MAAOgB,cAAA,CAAcS,UAAA,CAAWzB,GAAX,CAAd,CADe,CAI1B2B,QAASA,aAAY,CAACC,IAAD,CAAO,CACxB,MAAOL,OAAA,CAAOL,IAAP,CAAYU,IAAZ,CAvEMvB,MAuEN,CADiB,CAI5BwB,QAASA,YAAW,CAACD,IAAD,CAAO,CACvB,MAAOjC,cAAA,CAAcgC,YAAA,CAAaC,IAAb,CAAd,CADgB;AAkC3BR,QAASA,eAAc,CAACU,GAAD,CAAM,CACnBC,GAAAA,CAAM,CAACD,GAAD,GAAS,CAAT,EAAY7B,QAAZ,CAAqB,CAArB,CACZ,OAAO+B,cAAA,CAAcD,GAAd,CAFkB,CAK7BE,QAASA,eAAc,CAACF,GAAD,CAAM,CACzB,MAAOtB,cAAA,CAAcyB,aAAA,CAAcH,GAAd,CAAd,CADkB,CAI7BG,QAASA,cAAa,CAACH,GAAD,CAAM,CACxB,MAAO,KAAIlC,UAAJ,CAAesC,UAAA,CAAWJ,GAAX,CAAA,CAAgBZ,GAAhB,CAAoBiB,CAAA,EAAKC,QAAA,CAASD,CAAT,CAAY,CAAZ,CAAzB,CAAf,CADiB,CAI5BE,QAASA,YAAW,CAACP,GAAD,CAAMhC,QAAN,CAAgB,CAChC,MAAOc,WAAA,CAAWqB,aAAA,CAAcH,GAAd,CAAX,CAA+BhC,QAA/B,CADyB,CAYpCwC,QAASA,eAAc,CAACC,GAAD,CAAM,CAIzB,MAHmB,QAGnB,GAHI,MAAOA,IAGX,EAHgC,CAAA,IAAIC,MAAJ,CAAW,SAAX,CAAA,EAAsBC,IAAtB,CAA2BF,GAA3B,CAGhC,EAAuB,CAAvB,GAAIA,GAAJ,CAAQhC,MAAR,CAAiB,CAAjB,CAGO,CAAA,CAHP,CACW,CAAA,CALc,CAU7BmC,QAASA,YAAW,CAACH,GAAD,CAAMhC,MAAN,CAAc,CAI9B,MAHmB,QAGnB,GAHI,MAAOgC,IAGX,EAH+B,CAACA,GAAA,CAAII,KAAJ,CAAU,kBAAV,CAGhC;AAAIpC,MAAJ,EAAcgC,GAAd,CAAkBhC,MAAlB,GAA6B,CAA7B,CAAiC,CAAjC,CAAqCA,MAArC,CACW,CAAA,CADX,CAGO,CAAA,CAPuB,CAUlCqC,QAASA,SAAQ,CAACC,GAAD,CAAM,CACnB,MAAOvB,OAAA,CAAOsB,QAAP,CAAgBC,GAAhB,CADY,CAIvBC,QAASA,aAAY,CAACD,GAAD,CAAM,CACvB,MAAOE,gBAAA,CAAgBpC,OAAhB,CAAwBqC,MAAxB,CAA+BH,GAA/B,CAAP,EAA8C,CAACD,QAAA,CAASC,GAAT,CADxB,CAI3BI,QAASA,cAAa,CAACJ,GAAD,CAAM,CACxB,MAAQ,CAACC,YAAA,CAAaD,GAAb,CAAT,EACI,CAACD,QAAA,CAASC,GAAT,CADL,EAE8B,WAF9B,GAEI,MAAOA,IAAP,CAAWK,UAHS,CAyD5BC,QAASA,eAAc,CAAC5C,MAAD,CAAS6C,QAAA,CAAW,CAApB,CAAuB,CAC1C,MAAMC,UAAY9C,MAAZ8C,CAAqBD,QAC3B,OAAOC,UAAA,EACC9C,MADD,CACU8C,SADV,EACuBD,QADvB,CACmCA,QADnC,CAC8CA,QAD9C,CAED7C,MAJoC,CAO9C2B,QAASA,WAAU,CAACK,GAAD,CAAMa,QAAA,CAAW,CAAjB,CAAoB,CAC7BE,GAAAA,CAAQvB,aAAA,CAAcQ,GAAd,CAAA,CAAmBI,KAAnB,CAAyB,IAAIH,MAAJ,CAAW,KAAKY,QAAL,GAAX;AAA6B,IAA7B,CAAzB,CACd,OAAOpC,MAAA,CAAMC,IAAN,CAAWqC,GAAX,EAAoB,EAApB,CAF4B,CAKvCC,QAASA,UAAS,CAAChB,GAAD,CAAM,CACpB,MAAOL,WAAA,CAAWK,GAAX,CAAA,CACFrB,GADE,CACEsC,aADF,CAAA,CAEFpC,IAFE,CAEG,EAFH,CADa,CAUxBW,QAASA,cAAa,CAACQ,GAAD,CAAMa,QAAA,CAAW,CAAjB,CAAoBK,OAAA,CA1OtBC,GA0OE,CAA2C,CAC7D,MAAOC,QAAA,CAAQpB,GAAR,CAAaY,cAAA,CAAeZ,GAAf,CAAmBhC,MAAnB,CAA2B6C,QAA3B,CAAb,CAAmDK,OAAnD,CADsD,CAIjEE,QAASA,QAAO,CAACpB,GAAD,CAAMhC,MAAN,CAAckD,OAAA,CA9OVC,GA8OJ,CAAqC,CACjD,MAAOE,UAAA,CAAUrB,GAAV,CAAehC,MAAf,CAAuB,CAAA,CAAvB,CAA6BkD,OAA7B,CAD0C,CAQrDlC,QAASA,gBAAe,CAACxB,GAAD,CAAM,CAC1B,MAAOA,IAAA,CAAI8D,OAAJ,CAAY,KAAZ,CAAmB,EAAnB,CADmB,CAI9B3D,QAASA,aAAY,CAACH,GAAD,CAAM,CACvB,MAAOA,IAAA,CAAI+D,UAAJ,CAAe,IAAf,CAAA,CAAuB/D,GAAvB,CAA6B,KAAKA,GAAL,EADb,CA+B3ByD,QAASA,cAAa,CAACjB,GAAD,CAAM,CACxB,MAAOA,IAAA,CACFwB,KADE,CACI,EADJ,CAAA,CAEFC,OAFE,EAAA,CAGF5C,IAHE,CAGG,EAHH,CADiB;AAM5BwC,QAASA,UAAS,CAACrB,GAAD,CAAMhC,MAAN,CAAc0D,IAAd,CAAoBR,OAAA,CA/RlBC,GA+RF,CAA2C,CAC5CnD,MAAP2D,EAAgB3B,GAAhB2B,CAAoB3D,MAC1B,KAAI4D,OAAS5B,GACF,EAAX,CAAI2B,MAAJ,GACUE,OACN,CADYX,OAAA,CAAQY,MAAR,CAAeH,MAAf,CACZ,CAAAC,MAAA,CAASF,IAAA,CAAOG,OAAP,CAAa7B,GAAb,CAAmBA,GAAnB,CAAyB6B,OAFtC,CAIA,OAAOD,OAPkD,CA9S7D,IAAI7C,OAAS/B,OAAA,CAAQ,kCAAR,CAAT+B,CAA2BA,MAC/B,aACIgD,OAAAA,CAAmB,IAAnBA,EAA2B,IAA3BA,CAAgCA,eAAhCA,EAAoD,QAAS,CAACC,GAAD,CAAM,CACnE,MAAQA,IAAD,EAAQA,GAAR,CAAYC,UAAZ,CAA0BD,GAA1B,CAAgC,CAAE,UAAWA,GAAb,CAD4B,CAGvEE,OAAA,CAAOC,cAAP,CAAsBjF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEkF,MAAO,CAAA,CAAT,CAA7C,CACA,OAAM5B,gBAAkBuB,MAAA,CAAgB/E,OAAA,CAAQ,yCAAR,CAAhB,CAAxB,CACMmB;AAAyB4D,MAAA,CAAgB/E,OAAA,CAAQ,gDAAR,CAAhB,CAY/BE,QAAA,CAAQC,aAAR,CAAwBA,aAKxBD,QAAA,CAAQI,WAAR,CAAsBA,WAItBJ,QAAA,CAAQU,YAAR,CAAuBA,YAIvBV,QAAA,CAAQY,cAAR,CAAyBA,cAIzBZ,QAAA,CAAQmF,cAAR,CAHAA,QAAuB,CAACjF,GAAD,CAAM,CACzB,MAAOoB,cAAA,CAAcrB,aAAA,CAAcC,GAAd,CAAd,CADkB,CAO7BF,QAAA,CAAQe,aAAR,CAAwBA,aAIxBf,QAAA,CAAQmB,UAAR,CAAqBA,UAIrBnB,QAAA,CAAQoB,WAAR,CAAsBA,WAItBpB,QAAA,CAAQqB,aAAR,CAAwBA,aAMxBrB,QAAA,CAAQsB,aAAR,CAAwBA,aAIxBtB,QAAA,CAAQ4B,WAAR,CAAsBA,WAItB5B,QAAA,CAAQ+B,UAAR;AAAqBA,UAIrB/B,QAAA,CAAQoF,SAAR,CAHAA,QAAkB,CAAC9E,GAAD,CAAM,CACpB,MAAOI,aAAA,CAAakB,WAAA,CAAYtB,GAAZ,CAAb,CADa,CAOxBN,QAAA,CAAQqF,WAAR,CAHAA,QAAoB,CAAC/E,GAAD,CAAM,CACtB,MAAOe,cAAA,CAAcU,UAAA,CAAWzB,GAAX,CAAd,CADe,CAO1BN,QAAA,CAAQgC,WAAR,CAAsBA,WAItBhC,QAAA,CAAQiC,YAAR,CAAuBA,YAIvBjC,QAAA,CAAQmC,WAAR,CAAsBA,WAItBnC,QAAA,CAAQsF,SAAR,CAHAA,QAAkB,CAACpD,IAAD,CAAO7B,QAAA,CAAW,CAAA,CAAlB,CAAyB,CACvC,MAAOD,YAAA,CAAY6B,YAAA,CAAaC,IAAb,CAAZ,CAAgC7B,QAAhC,CADgC,CAS3CL,QAAA,CAAQuF,YAAR,CALAA,QAAqB,CAACrD,IAAD,CAAO,CAClBE,IAAAA,CAAMO,QAAA,CAAST,IAAT,CAAe,EAAf,CAwMZ,IANwB,WAMxB,GANO,MAjMUE,KAuMjB,CACI,KAAUoD,MAAJ,CAxMaC,4CAwMb,CAAN,CAvMJ,MAAOrD,KAHiB,CAS5BpC;OAAA,CAAQ0F,YAAR,CAHAA,QAAqB,CAACxD,IAAD,CAAO,CACxB,MAAOZ,cAAA,CAAca,WAAA,CAAYD,IAAZ,CAAd,CADiB,CAO5BlC,QAAA,CAAQ2F,cAAR,CAHAA,QAAuB,CAACvD,GAAD,CAAM,CACzB,MAAOG,eAAA,CAAeb,cAAA,CAAeU,GAAf,CAAf,CADkB,CAO7BpC,QAAA,CAAQ4F,aAAR,CAHAA,QAAsB,CAACxD,GAAD,CAAM,CACxB,MAAOI,cAAA,CAAcd,cAAA,CAAeU,GAAf,CAAd,CADiB,CAO5BpC,QAAA,CAAQ6F,WAAR,CAHAA,QAAoB,CAACzD,GAAD,CAAM/B,QAAN,CAAgB,CAChC,MAAOuC,YAAA,CAAYlB,cAAA,CAAeU,GAAf,CAAZ,CAAiC/B,QAAjC,CADyB,CAOpCL,QAAA,CAAQ8F,YAAR,CAHAA,QAAqB,CAAC1D,GAAD,CAAM,CACvB,MAAO,GAAGA,GAAH,EADgB,CAQ3BpC,QAAA,CAAQ0B,cAAR,CAAyBA,cAIzB1B,QAAA,CAAQuC,cAAR,CAAyBA,cAIzBvC,QAAA,CAAQwC,aAAR,CAAwBA,aAIxBxC,QAAA,CAAQ4C,WAAR;AAAsBA,WAItB5C,QAAA,CAAQ+F,YAAR,CAHAA,QAAqB,CAAC1D,GAAD,CAAM,CACvB,MAAOjB,YAAA,CAAYoB,aAAA,CAAcH,GAAd,CAAZ,CADgB,CAO3BrC,QAAA,CAAQgG,cAAR,CAHAA,QAAuB,CAAC3D,GAAD,CAAM,CACzB,MAAOhB,cAAA,CAAcmB,aAAA,CAAcH,GAAd,CAAd,CADkB,CAa7BrC,QAAA,CAAQ6C,cAAR,CAAyBA,cAUzB7C,QAAA,CAAQiD,WAAR,CAAsBA,WAItBjD,QAAA,CAAQmD,QAAR,CAAmBA,QAInBnD,QAAA,CAAQqD,YAAR,CAAuBA,YAMvBrD,QAAA,CAAQwD,aAAR,CAAwBA,aAkBxBxD,QAAA,CAAQiG,OAAR,CAjBAA,QAAgB,CAAC7C,GAAD,CAAM,CAClB,MAAID,SAAA,CAASC,GAAT,CAAJ,CAtKgB8C,QAsKhB,CAGS7C,YAAA,CAAaD,GAAb,CAAJ,CAvKgB+C,aAuKhB,CAGI3C,aAAA,CAAcJ,GAAd,CAAJ,CAzKiBgD,cAyKjB,CAGI7E,KAAA,CAAM8E,OAAN,CAAcjD,GAAd,CAAJ,CA9KUkD,OA8KV,CAIM,MAAOlD,IAdA,CA2BtBpD,QAAA,CAAQuG,WAAR;AATAA,QAAoB,CAACzD,GAAD,CAAM,CACtB,MAAID,eAAA,CAAeC,GAAf,CAAJ,CAzLY0D,QAyLZ,CAGIvD,WAAA,CAAYH,GAAZ,CAAJ,CA9LYtC,KA8LZ,CA7LaG,MAyLS,CAc1BX,QAAA,CAAQyG,aAAR,CAJAA,QAAsB,CAAC,GAAGC,IAAJ,CAAU,CAE5B,MADe7E,OAAA6C,CAAOiC,MAAPjC,CAAcgC,IAAdhC,CADa,CAUhC1E,QAAA,CAAQ4G,YAAR,CALAA,QAAqB,CAAC,GAAGF,IAAJ,CAAU,CAC3B,IAAIhC,OAAS,EACbgC,KAAA,CAAKG,OAAL,CAAaC,GAAA,EAAQpC,MAAR,CAAiBA,MAAA,CAAOiC,MAAP,CAAcpF,KAAA,CAAMC,IAAN,CAAWsF,GAAX,CAAd,CAA9B,CACA,OAAO,KAAI3G,UAAJ,CAAe,CAAC,GAAGuE,MAAJ,CAAf,CAHoB,CAa/B1E,QAAA,CAAQ+G,QAAR,CAPAA,QAAiB,CAACC,IAAD,CAAOlG,MAAP,CAAe,CACtB2D,MAAAA,CAAOuC,IAAPvC,CAAY3D,MAAZ2D,CAAqB3D,MAChB,EAAX,CAAI2D,MAAJ,GACIuC,IADJ,CACWA,IAAA,CAAKC,KAAL,CAAWxC,MAAX,CADX,CAGA,OAAOuC,KALqB,CAWhChH,QAAA,CAAQkH,SAAR,CAHAA,QAAkB,CAACF,IAAD,CAAOlG,MAAP,CAAe,CAC7B,MAAOkG,KAAA,CAAKC,KAAL,CAAW,CAAX,CAAcnG,MAAd,CADsB,CAUjCd,QAAA,CAAQ0D,cAAR;AAAyBA,cAKzB1D,QAAA,CAAQyC,UAAR,CAAqBA,UAMrBzC,QAAA,CAAQ8D,SAAR,CAAoBA,SAIpB9D,QAAA,CAAQmH,OAAR,CAHAA,QAAgB,CAACrE,GAAD,CAAM,CAClB,MAAOF,YAAA,CAAYkB,SAAA,CAAU9B,WAAA,CAAYc,GAAZ,CAAV,CAAZ,CADW,CAOtB9C,QAAA,CAAQsC,aAAR,CAAwBA,aAIxBtC,QAAA,CAAQkE,OAAR,CAAkBA,OAIlBlE,QAAA,CAAQoH,QAAR,CAHAA,QAAiB,CAACtE,GAAD,CAAMhC,MAAN,CAAckD,OAAA,CAlPXC,GAkPH,CAAqC,CAClD,MAAOE,UAAA,CAAUrB,GAAV,CAAehC,MAAf,CAAuB,CAAA,CAAvB,CAA8BkD,OAA9B,CAD2C,CAOtDhE,QAAA,CAAQ8B,eAAR,CAA0BA,eAI1B9B,QAAA,CAAQS,YAAR,CAAuBA,YASvBT,QAAA,CAAQqH,WAAR,CARAA,QAAoB,CAAC/G,GAAD,CAAM,CACtBA,GAAA,CAAMwB,eAAA,CAAgBxB,GAAhB,CAEN,EADAA,GACA,CADMgC,aAAA,CAAchC,GAAd,CAAmB,CAAnB,CACN,IACIA,GADJ,CACUG,YAAA,CAAaH,GAAb,CADV,CAGA,OAAOA,IANe,CAe1BN,QAAA,CAAQsH,qBAAR;AANAA,QAA8B,CAAChH,GAAD,CAAM,CAChC,MAAMD,SAAWC,GAAA,CAAI+D,UAAJ,CAAe,IAAf,CACjB/D,IAAA,CAAMwB,eAAA,CAAgBxB,GAAhB,CACNA,IAAA,CAAMA,GAAA,CAAI+D,UAAJ,CA1QUJ,GA0QV,CAAA,CAA8B3D,GAAA,CAAIiH,SAAJ,CAAc,CAAd,CAA9B,CAAiDjH,GACvD,OAAOD,SAAA,CAAWI,YAAA,CAAaH,GAAb,CAAX,CAA+BA,GAJN,CAvRqE;",
"sources":["node_modules/enc-utils/dist/cjs/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$enc_utils$dist$cjs$index\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_typedarray_1 = __importDefault(require(\"is-typedarray\"));\nconst typedarray_to_buffer_1 = __importDefault(require(\"typedarray-to-buffer\"));\nconst ENC_HEX = 'hex';\nconst ENC_UTF8 = 'utf8';\nconst ENC_BIN = 'binary';\nconst TYPE_BUFFER = 'buffer';\nconst TYPE_ARRAY = 'array';\nconst TYPE_TYPED_ARRAY = 'typed-array';\nconst TYPE_ARRAY_BUFFER = 'array-buffer';\nconst STRING_ZERO = '0';\nfunction bufferToArray(buf) {\n    return new Uint8Array(buf);\n}\nexports.bufferToArray = bufferToArray;\nfunction bufferToHex(buf, prefixed = false) {\n    const hex = buf.toString(ENC_HEX);\n    return prefixed ? addHexPrefix(hex) : hex;\n}\nexports.bufferToHex = bufferToHex;\nfunction bufferToUtf8(buf) {\n    return buf.toString(ENC_UTF8);\n}\nexports.bufferToUtf8 = bufferToUtf8;\nfunction bufferToNumber(buf) {\n    return buf.readUIntBE(0, buf.length);\n}\nexports.bufferToNumber = bufferToNumber;\nfunction bufferToBinary(buf) {\n    return arrayToBinary(bufferToArray(buf));\n}\nexports.bufferToBinary = bufferToBinary;\nfunction arrayToBuffer(arr) {\n    return typedarray_to_buffer_1.default(arr);\n}\nexports.arrayToBuffer = arrayToBuffer;\nfunction arrayToHex(arr, prefixed = false) {\n    return bufferToHex(arrayToBuffer(arr), prefixed);\n}\nexports.arrayToHex = arrayToHex;\nfunction arrayToUtf8(arr) {\n    return bufferToUtf8(arrayToBuffer(arr));\n}\nexports.arrayToUtf8 = arrayToUtf8;\nfunction arrayToNumber(arr) {\n    return bufferToNumber(arrayToBuffer(arr));\n}\nexports.arrayToNumber = arrayToNumber;\nfunction arrayToBinary(arr) {\n    return Array.from(arr)\n        .map(numberToBinary)\n        .join('');\n}\nexports.arrayToBinary = arrayToBinary;\nfunction hexToBuffer(hex) {\n    return Buffer.from(removeHexPrefix(hex), ENC_HEX);\n}\nexports.hexToBuffer = hexToBuffer;\nfunction hexToArray(hex) {\n    return bufferToArray(hexToBuffer(hex));\n}\nexports.hexToArray = hexToArray;\nfunction hexToUtf8(hex) {\n    return bufferToUtf8(hexToBuffer(hex));\n}\nexports.hexToUtf8 = hexToUtf8;\nfunction hexToNumber(hex) {\n    return arrayToNumber(hexToArray(hex));\n}\nexports.hexToNumber = hexToNumber;\nfunction hexToBinary(hex) {\n    return arrayToBinary(hexToArray(hex));\n}\nexports.hexToBinary = hexToBinary;\nfunction utf8ToBuffer(utf8) {\n    return Buffer.from(utf8, ENC_UTF8);\n}\nexports.utf8ToBuffer = utf8ToBuffer;\nfunction utf8ToArray(utf8) {\n    return bufferToArray(utf8ToBuffer(utf8));\n}\nexports.utf8ToArray = utf8ToArray;\nfunction utf8ToHex(utf8, prefixed = false) {\n    return bufferToHex(utf8ToBuffer(utf8), prefixed);\n}\nexports.utf8ToHex = utf8ToHex;\nfunction utf8ToNumber(utf8) {\n    const num = parseInt(utf8, 10);\n    assert(isDefined(num), 'Number can only safely store up to 53 bits');\n    return num;\n}\nexports.utf8ToNumber = utf8ToNumber;\nfunction utf8ToBinary(utf8) {\n    return arrayToBinary(utf8ToArray(utf8));\n}\nexports.utf8ToBinary = utf8ToBinary;\nfunction numberToBuffer(num) {\n    return binaryToBuffer(numberToBinary(num));\n}\nexports.numberToBuffer = numberToBuffer;\nfunction numberToArray(num) {\n    return binaryToArray(numberToBinary(num));\n}\nexports.numberToArray = numberToArray;\nfunction numberToHex(num, prefixed) {\n    return binaryToHex(numberToBinary(num), prefixed);\n}\nexports.numberToHex = numberToHex;\nfunction numberToUtf8(num) {\n    return `${num}`;\n}\nexports.numberToUtf8 = numberToUtf8;\nfunction numberToBinary(num) {\n    const bin = (num >>> 0).toString(2);\n    return sanitizeBytes(bin);\n}\nexports.numberToBinary = numberToBinary;\nfunction binaryToBuffer(bin) {\n    return arrayToBuffer(binaryToArray(bin));\n}\nexports.binaryToBuffer = binaryToBuffer;\nfunction binaryToArray(bin) {\n    return new Uint8Array(splitBytes(bin).map(x => parseInt(x, 2)));\n}\nexports.binaryToArray = binaryToArray;\nfunction binaryToHex(bin, prefixed) {\n    return arrayToHex(binaryToArray(bin), prefixed);\n}\nexports.binaryToHex = binaryToHex;\nfunction binaryToUtf8(bin) {\n    return arrayToUtf8(binaryToArray(bin));\n}\nexports.binaryToUtf8 = binaryToUtf8;\nfunction binaryToNumber(bin) {\n    return arrayToNumber(binaryToArray(bin));\n}\nexports.binaryToNumber = binaryToNumber;\nfunction isBinaryString(str) {\n    if (typeof str !== 'string' || !new RegExp(/^[01]+$/).test(str)) {\n        return false;\n    }\n    if (str.length % 8 !== 0) {\n        return false;\n    }\n    return true;\n}\nexports.isBinaryString = isBinaryString;\nfunction isHexString(str, length) {\n    if (typeof str !== 'string' || !str.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && str.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nexports.isHexString = isHexString;\nfunction isBuffer(val) {\n    return Buffer.isBuffer(val);\n}\nexports.isBuffer = isBuffer;\nfunction isTypedArray(val) {\n    return is_typedarray_1.default.strict(val) && !isBuffer(val);\n}\nexports.isTypedArray = isTypedArray;\nfunction isArrayBuffer(val) {\n    return (!isTypedArray(val) &&\n        !isBuffer(val) &&\n        typeof val.byteLength !== 'undefined');\n}\nexports.isArrayBuffer = isArrayBuffer;\nfunction getType(val) {\n    if (isBuffer(val)) {\n        return TYPE_BUFFER;\n    }\n    else if (isTypedArray(val)) {\n        return TYPE_TYPED_ARRAY;\n    }\n    else if (isArrayBuffer(val)) {\n        return TYPE_ARRAY_BUFFER;\n    }\n    else if (Array.isArray(val)) {\n        return TYPE_ARRAY;\n    }\n    else {\n        return typeof val;\n    }\n}\nexports.getType = getType;\nfunction getEncoding(str) {\n    if (isBinaryString(str)) {\n        return ENC_BIN;\n    }\n    if (isHexString(str)) {\n        return ENC_HEX;\n    }\n    return ENC_UTF8;\n}\nexports.getEncoding = getEncoding;\nfunction concatBuffers(...args) {\n    const result = Buffer.concat(args);\n    return result;\n}\nexports.concatBuffers = concatBuffers;\nfunction concatArrays(...args) {\n    let result = [];\n    args.forEach(arg => (result = result.concat(Array.from(arg))));\n    return new Uint8Array([...result]);\n}\nexports.concatArrays = concatArrays;\nfunction trimLeft(data, length) {\n    const diff = data.length - length;\n    if (diff > 0) {\n        data = data.slice(diff);\n    }\n    return data;\n}\nexports.trimLeft = trimLeft;\nfunction trimRight(data, length) {\n    return data.slice(0, length);\n}\nexports.trimRight = trimRight;\nfunction calcByteLength(length, byteSize = 8) {\n    const remainder = length % byteSize;\n    return remainder\n        ? ((length - remainder) / byteSize) * byteSize + byteSize\n        : length;\n}\nexports.calcByteLength = calcByteLength;\nfunction splitBytes(str, byteSize = 8) {\n    const bytes = sanitizeBytes(str).match(new RegExp(`.{${byteSize}}`, 'gi'));\n    return Array.from(bytes || []);\n}\nexports.splitBytes = splitBytes;\nfunction swapBytes(str) {\n    return splitBytes(str)\n        .map(reverseString)\n        .join('');\n}\nexports.swapBytes = swapBytes;\nfunction swapHex(str) {\n    return binaryToHex(swapBytes(hexToBinary(str)));\n}\nexports.swapHex = swapHex;\nfunction sanitizeBytes(str, byteSize = 8, padding = STRING_ZERO) {\n    return padLeft(str, calcByteLength(str.length, byteSize), padding);\n}\nexports.sanitizeBytes = sanitizeBytes;\nfunction padLeft(str, length, padding = STRING_ZERO) {\n    return padString(str, length, true, padding);\n}\nexports.padLeft = padLeft;\nfunction padRight(str, length, padding = STRING_ZERO) {\n    return padString(str, length, false, padding);\n}\nexports.padRight = padRight;\nfunction removeHexPrefix(hex) {\n    return hex.replace(/^0x/, '');\n}\nexports.removeHexPrefix = removeHexPrefix;\nfunction addHexPrefix(hex) {\n    return hex.startsWith('0x') ? hex : `0x${hex}`;\n}\nexports.addHexPrefix = addHexPrefix;\nfunction sanitizeHex(hex) {\n    hex = removeHexPrefix(hex);\n    hex = sanitizeBytes(hex, 2);\n    if (hex) {\n        hex = addHexPrefix(hex);\n    }\n    return hex;\n}\nexports.sanitizeHex = sanitizeHex;\nfunction removeHexLeadingZeros(hex) {\n    const prefixed = hex.startsWith('0x');\n    hex = removeHexPrefix(hex);\n    hex = hex.startsWith(STRING_ZERO) ? hex.substring(1) : hex;\n    return prefixed ? addHexPrefix(hex) : hex;\n}\nexports.removeHexLeadingZeros = removeHexLeadingZeros;\nfunction isUndefined(value) {\n    return typeof value === 'undefined';\n}\nfunction isDefined(value) {\n    return !isUndefined(value);\n}\nfunction assert(assertion, errorMessage) {\n    if (!assertion) {\n        throw new Error(errorMessage);\n    }\n}\nfunction reverseString(str) {\n    return str\n        .split('')\n        .reverse()\n        .join('');\n}\nfunction padString(str, length, left, padding = STRING_ZERO) {\n    const diff = length - str.length;\n    let result = str;\n    if (diff > 0) {\n        const pad = padding.repeat(diff);\n        result = left ? pad + str : str + pad;\n    }\n    return result;\n}\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","bufferToArray","buf","Uint8Array","bufferToHex","prefixed","hex","toString","ENC_HEX","addHexPrefix","bufferToUtf8","ENC_UTF8","bufferToNumber","readUIntBE","length","arrayToBuffer","arr","typedarray_to_buffer_1","default","arrayToHex","arrayToUtf8","arrayToNumber","arrayToBinary","Array","from","map","numberToBinary","join","hexToBuffer","Buffer","removeHexPrefix","hexToArray","hexToBinary","utf8ToBuffer","utf8","utf8ToArray","num","bin","sanitizeBytes","binaryToBuffer","binaryToArray","splitBytes","x","parseInt","binaryToHex","isBinaryString","str","RegExp","test","isHexString","match","isBuffer","val","isTypedArray","is_typedarray_1","strict","isArrayBuffer","byteLength","calcByteLength","byteSize","remainder","bytes","swapBytes","reverseString","padding","STRING_ZERO","padLeft","padString","replace","startsWith","split","reverse","left","diff","result","pad","repeat","__importDefault","mod","__esModule","Object","defineProperty","value","bufferToBinary","hexToUtf8","hexToNumber","utf8ToHex","utf8ToNumber","Error","errorMessage","utf8ToBinary","numberToBuffer","numberToArray","numberToHex","numberToUtf8","binaryToUtf8","binaryToNumber","getType","TYPE_BUFFER","TYPE_TYPED_ARRAY","TYPE_ARRAY_BUFFER","isArray","TYPE_ARRAY","getEncoding","ENC_BIN","concatBuffers","args","concat","concatArrays","forEach","arg","trimLeft","data","slice","trimRight","swapHex","padRight","sanitizeHex","removeHexLeadingZeros","substring"]
}
