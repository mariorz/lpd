shadow$provide.module$node_modules$$ethersproject$bytes$lib$index=function(global,require,module,exports){function addSlice(array){if(array.slice)return array;array.slice=function(){var args=Array.prototype.slice.call(arguments);return addSlice(new Uint8Array(Array.prototype.slice.apply(array,args)))};return array}function isBytesLike(value){return isHexString(value)&&!(value.length%2)||isBytes(value)}function isBytes(value){if(null==value)return!1;if(value.constructor===Uint8Array)return!0;if("string"===
typeof value||null==value.length)return!1;for(var i=0;i<value.length;i++){var v=value[i];if("number"!==typeof v||0>v||256<=v||v%1)return!1}return!0}function arrayify(value,options){options||(options={});if("number"===typeof value){logger.checkSafeUint53(value,"invalid arrayify value");for(options=[];value;)options.unshift(value&255),value=parseInt(String(value/256));0===options.length&&options.push(0);return addSlice(new Uint8Array(options))}options.allowMissingPrefix&&"string"===typeof value&&"0x"!==
value.substring(0,2)&&(value="0x"+value);value.toHexString&&(value=value.toHexString());if(isHexString(value)){var hex=value.substring(2);hex.length%2&&("left"===options.hexPad?hex="0x0"+hex.substring(2):"right"===options.hexPad?hex+="0":logger.throwArgumentError("hex data is odd-length","value",value));options=[];for(value=0;value<hex.length;value+=2)options.push(parseInt(hex.substring(value,value+2),16));return addSlice(new Uint8Array(options))}return isBytes(value)?addSlice(new Uint8Array(value)):
logger.throwArgumentError("invalid arrayify value","value",value)}function concat(items){items=items.map(function(item){return arrayify(item)});var length=items.reduce(function(accum,item){return accum+item.length},0),result=new Uint8Array(length);items.reduce(function(offset,object){result.set(object,offset);return offset+object.length},0);return addSlice(result)}function zeroPad(value,length){value=arrayify(value);value.length>length&&logger.throwArgumentError("value out of range","value",value);
var result=new Uint8Array(length);result.set(value,length-value.length);return addSlice(result)}function isHexString(value,length){return"string"!==typeof value||!value.match(/^0x[0-9A-Fa-f]*$/)||length&&value.length!==2+2*length?!1:!0}function hexlify(value,options){options||(options={});if("number"===typeof value){logger.checkSafeUint53(value,"invalid hexlify value");for(options="";value;)options="0123456789abcdef"[value&15]+options,value=Math.floor(value/16);return options.length?(options.length%
2&&(options="0"+options),"0x"+options):"0x00"}options.allowMissingPrefix&&"string"===typeof value&&"0x"!==value.substring(0,2)&&(value="0x"+value);if(value.toHexString)return value.toHexString();if(isHexString(value))return value.length%2&&("left"===options.hexPad?value="0x0"+value.substring(2):"right"===options.hexPad?value+="0":logger.throwArgumentError("hex data is odd-length","value",value)),value.toLowerCase();if(isBytes(value)){options="0x";for(var i=0;i<value.length;i++){var v=value[i];options+=
"0123456789abcdef"[(v&240)>>4]+"0123456789abcdef"[v&15]}return options}return logger.throwArgumentError("invalid hexlify value","value",value)}function hexStripZeros(value){"string"!==typeof value&&(value=hexlify(value));isHexString(value)||logger.throwArgumentError("invalid hex string","value",value);value=value.substring(2);for(var offset=0;offset<value.length&&"0"===value[offset];)offset++;return"0x"+value.substring(offset)}function hexZeroPad(value,length){"string"!==typeof value?value=hexlify(value):
isHexString(value)||logger.throwArgumentError("invalid hex string","value",value);for(value.length>2*length+2&&logger.throwArgumentError("value out of range","value",length);value.length<2*length+2;)value="0x0"+value.substring(2);return value}function splitSignature(signature){var result={r:"0x",s:"0x",_vs:"0x",recoveryParam:0,v:0};if(isBytesLike(signature)){var bytes=arrayify(signature);65!==bytes.length&&logger.throwArgumentError("invalid signature string; must be 65 bytes","signature",signature);
result.r=hexlify(bytes.slice(0,32));result.s=hexlify(bytes.slice(32,64));result.v=bytes[64];27>result.v&&(0===result.v||1===result.v?result.v+=27:logger.throwArgumentError("signature invalid v byte","signature",signature));result.recoveryParam=1-result.v%2;result.recoveryParam&&(bytes[32]|=128);result._vs=hexlify(bytes.slice(32,64))}else{result.r=signature.r;result.s=signature.s;result.v=signature.v;result.recoveryParam=signature.recoveryParam;result._vs=signature._vs;if(null!=result._vs){bytes=zeroPad(arrayify(result._vs),
32);result._vs=hexlify(bytes);var recoveryParam=128<=bytes[0]?1:0;null==result.recoveryParam?result.recoveryParam=recoveryParam:result.recoveryParam!==recoveryParam&&logger.throwArgumentError("signature recoveryParam mismatch _vs","signature",signature);bytes[0]&=127;bytes=hexlify(bytes);null==result.s?result.s=bytes:result.s!==bytes&&logger.throwArgumentError("signature v mismatch _vs","signature",signature)}null==result.recoveryParam?null==result.v?logger.throwArgumentError("signature missing v and recoveryParam",
"signature",signature):result.recoveryParam=1-result.v%2:null==result.v?result.v=27+result.recoveryParam:result.recoveryParam!==1-result.v%2&&logger.throwArgumentError("signature recoveryParam mismatch v","signature",signature);null!=result.r&&isHexString(result.r)?result.r=hexZeroPad(result.r,32):logger.throwArgumentError("signature missing or invalid r","signature",signature);null!=result.s&&isHexString(result.s)?result.s=hexZeroPad(result.s,32):logger.throwArgumentError("signature missing or invalid s",
"signature",signature);bytes=arrayify(result.s);128<=bytes[0]&&logger.throwArgumentError("signature s out of range","signature",signature);result.recoveryParam&&(bytes[0]|=128);bytes=hexlify(bytes);result._vs&&(isHexString(result._vs)||logger.throwArgumentError("signature invalid _vs","signature",signature),result._vs=hexZeroPad(result._vs,32));null==result._vs?result._vs=bytes:result._vs!==bytes&&logger.throwArgumentError("signature _vs mismatch v and s","signature",signature)}return result}Object.defineProperty(exports,
"__esModule",{value:!0});exports.joinSignature=exports.splitSignature=exports.hexZeroPad=exports.hexStripZeros=exports.hexValue=exports.hexConcat=exports.hexDataSlice=exports.hexDataLength=exports.hexlify=exports.isHexString=exports.zeroPad=exports.stripZeros=exports.concat=exports.arrayify=exports.isBytes=exports.isBytesLike=void 0;global=require("module$node_modules$$ethersproject$logger$lib$index");require=require("module$node_modules$$ethersproject$bytes$lib$_version");var logger=new global.Logger(require.version);
exports.isBytesLike=isBytesLike;exports.isBytes=isBytes;exports.arrayify=arrayify;exports.concat=concat;exports.stripZeros=function(value){value=arrayify(value);if(0===value.length)return value;for(var start=0;start<value.length&&0===value[start];)start++;start&&(value=value.slice(start));return value};exports.zeroPad=zeroPad;exports.isHexString=isHexString;exports.hexlify=hexlify;exports.hexDataLength=function(data){if("string"!==typeof data)data=hexlify(data);else if(!isHexString(data)||data.length%
2)return null;return(data.length-2)/2};exports.hexDataSlice=function(data,offset,endOffset){"string"!==typeof data?data=hexlify(data):(!isHexString(data)||data.length%2)&&logger.throwArgumentError("invalid hexData","value",data);offset=2+2*offset;return null!=endOffset?"0x"+data.substring(offset,2+2*endOffset):"0x"+data.substring(offset)};exports.hexConcat=function(items){var result="0x";items.forEach(function(item){result+=hexlify(item).substring(2)});return result};exports.hexValue=function(value){value=
hexStripZeros(hexlify(value,{hexPad:"left"}));return"0x"===value?"0x0":value};exports.hexStripZeros=hexStripZeros;exports.hexZeroPad=hexZeroPad;exports.splitSignature=splitSignature;exports.joinSignature=function(signature){signature=splitSignature(signature);return hexlify(concat([signature.r,signature.s,signature.recoveryParam?"0x1c":"0x1b"]))}}
//# sourceMappingURL=module$node_modules$$ethersproject$bytes$lib$index.js.map
