{
"version":3,
"file":"module$node_modules$$walletconnect$web3_provider$dist$cjs$index.js",
"lineCount":19,
"mappings":"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",
"sources":["node_modules/@walletconnect/web3-provider/dist/cjs/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$walletconnect$web3_provider$dist$cjs$index\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst client_1 = tslib_1.__importDefault(require(\"@walletconnect/client\"));\nconst qrcode_modal_1 = tslib_1.__importDefault(require(\"@walletconnect/qrcode-modal\"));\nconst http_connection_1 = tslib_1.__importDefault(require(\"@walletconnect/http-connection\"));\nconst utils_1 = require(\"@walletconnect/utils\");\nconst ProviderEngine = require(\"web3-provider-engine\");\nconst CacheSubprovider = require(\"web3-provider-engine/subproviders/cache\");\nconst FixtureSubprovider = require(\"web3-provider-engine/subproviders/fixture\");\nconst FilterSubprovider = require(\"web3-provider-engine/subproviders/filters\");\nconst HookedWalletSubprovider = require(\"web3-provider-engine/subproviders/hooked-wallet\");\nconst NonceSubprovider = require(\"web3-provider-engine/subproviders/nonce-tracker\");\nconst SubscriptionsSubprovider = require(\"web3-provider-engine/subproviders/subscriptions\");\nclass WalletConnectProvider extends ProviderEngine {\n    constructor(opts) {\n        super({ pollingInterval: opts.pollingInterval || 8000 });\n        this.bridge = \"https://bridge.walletconnect.org\";\n        this.qrcode = true;\n        this.qrcodeModal = qrcode_modal_1.default;\n        this.qrcodeModalOptions = undefined;\n        this.rpc = null;\n        this.infuraId = \"\";\n        this.http = null;\n        this.isConnecting = false;\n        this.connected = false;\n        this.connectCallbacks = [];\n        this.accounts = [];\n        this.chainId = 1;\n        this.networkId = 1;\n        this.rpcUrl = \"\";\n        this.enable = () => tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const wc = yield this.getWalletConnector();\n            if (wc) {\n                this.start();\n                this.subscribeWalletConnector();\n                return wc.accounts;\n            }\n            else {\n                throw new Error(\"Failed to connect to WalleConnect\");\n            }\n        });\n        this.request = (payload) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n            return this.send(payload);\n        });\n        this.send = (payload, callback) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (typeof payload === \"string\") {\n                const method = payload;\n                let params = callback;\n                if (method === \"personal_sign\") {\n                    params = utils_1.parsePersonalSign(params);\n                }\n                return this.sendAsyncPromise(method, params);\n            }\n            payload = Object.assign({ id: utils_1.payloadId(), jsonrpc: \"2.0\" }, payload);\n            if (payload.method === \"personal_sign\") {\n                payload.params = utils_1.parsePersonalSign(payload.params);\n            }\n            if (callback) {\n                this.sendAsync(payload, callback);\n                return;\n            }\n            return this.sendAsyncPromise(payload.method, payload.params);\n        });\n        this.onConnect = (callback) => {\n            this.connectCallbacks.push(callback);\n        };\n        this.triggerConnect = (result) => {\n            if (this.connectCallbacks && this.connectCallbacks.length) {\n                this.connectCallbacks.forEach(callback => callback(result));\n            }\n        };\n        this.bridge = opts.connector\n            ? opts.connector.bridge\n            : opts.bridge || \"https://bridge.walletconnect.org\";\n        this.qrcode = typeof opts.qrcode === \"undefined\" || opts.qrcode !== false;\n        this.qrcodeModal = opts.qrcodeModal || this.qrcodeModal;\n        this.qrcodeModalOptions = opts.qrcodeModalOptions;\n        this.wc =\n            opts.connector ||\n                new client_1.default({\n                    bridge: this.bridge,\n                    qrcodeModal: this.qrcode ? this.qrcodeModal : undefined,\n                    qrcodeModalOptions: this.qrcodeModalOptions,\n                    clientMeta: opts === null || opts === void 0 ? void 0 : opts.clientMeta,\n                });\n        this.rpc = opts.rpc || null;\n        if (!this.rpc &&\n            (!opts.infuraId || typeof opts.infuraId !== \"string\" || !opts.infuraId.trim())) {\n            throw new Error(\"Missing one of the required parameters: rpc or infuraId\");\n        }\n        this.infuraId = opts.infuraId || \"\";\n        this.chainId = typeof opts.chainId !== \"undefined\" ? opts.chainId : 1;\n        this.networkId = this.chainId;\n        this.initialize();\n    }\n    get isWalletConnect() {\n        return true;\n    }\n    get connector() {\n        return this.wc;\n    }\n    get walletMeta() {\n        return this.wc.peerMeta;\n    }\n    disconnect() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this.close();\n        });\n    }\n    close() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const wc = yield this.getWalletConnector({ disableSessionCreation: true });\n            yield wc.killSession();\n            yield this.onDisconnect();\n        });\n    }\n    handleRequest(payload) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                let response;\n                let result = null;\n                const wc = yield this.getWalletConnector();\n                switch (payload.method) {\n                    case \"wc_killSession\":\n                        yield this.close();\n                        result = null;\n                        break;\n                    case \"eth_accounts\":\n                        result = wc.accounts;\n                        break;\n                    case \"eth_coinbase\":\n                        result = wc.accounts[0];\n                        break;\n                    case \"eth_chainId\":\n                        result = wc.chainId;\n                        break;\n                    case \"net_version\":\n                        result = wc.networkId || wc.chainId;\n                        break;\n                    case \"eth_uninstallFilter\":\n                        this.sendAsync(payload, (_) => _);\n                        result = true;\n                        break;\n                    default:\n                        response = yield this.handleOtherRequests(payload);\n                }\n                if (response) {\n                    return response;\n                }\n                return this.formatResponse(payload, result);\n            }\n            catch (error) {\n                this.emit(\"error\", error);\n                throw error;\n            }\n        });\n    }\n    handleOtherRequests(payload) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!utils_1.signingMethods.includes(payload.method) && payload.method.startsWith(\"eth_\")) {\n                return this.handleReadRequests(payload);\n            }\n            const wc = yield this.getWalletConnector();\n            const result = yield wc.sendCustomRequest(payload);\n            return this.formatResponse(payload, result);\n        });\n    }\n    handleReadRequests(payload) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this.http) {\n                const error = new Error(\"HTTP Connection not available\");\n                this.emit(\"error\", error);\n                throw error;\n            }\n            return this.http.send(payload);\n        });\n    }\n    formatResponse(payload, result) {\n        return {\n            id: payload.id,\n            jsonrpc: payload.jsonrpc,\n            result: result,\n        };\n    }\n    getWalletConnector(opts = {}) {\n        const { disableSessionCreation = false } = opts;\n        return new Promise((resolve, reject) => {\n            const wc = this.wc;\n            if (this.isConnecting) {\n                this.onConnect((x) => resolve(x));\n            }\n            else if (!wc.connected && !disableSessionCreation) {\n                this.isConnecting = true;\n                const sessionRequestOpions = this.chainId ? { chainId: this.chainId } : undefined;\n                wc.on(\"modal_closed\", () => {\n                    reject(new Error(\"User closed modal\"));\n                });\n                wc.createSession(sessionRequestOpions)\n                    .then(() => {\n                    wc.on(\"connect\", (error, payload) => {\n                        if (error) {\n                            this.isConnecting = false;\n                            return reject(error);\n                        }\n                        this.isConnecting = false;\n                        this.connected = true;\n                        if (payload) {\n                            this.updateState(payload.params[0]);\n                        }\n                        this.emit(\"connect\");\n                        this.triggerConnect(wc);\n                        resolve(wc);\n                    });\n                })\n                    .catch(error => {\n                    this.isConnecting = false;\n                    reject(error);\n                });\n            }\n            else {\n                if (!this.connected) {\n                    this.connected = true;\n                    this.updateState(wc.session);\n                }\n                resolve(wc);\n            }\n        });\n    }\n    subscribeWalletConnector() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const wc = yield this.getWalletConnector();\n            wc.on(\"disconnect\", error => {\n                if (error) {\n                    this.emit(\"error\", error);\n                    return;\n                }\n                this.onDisconnect();\n            });\n            wc.on(\"session_update\", (error, payload) => {\n                if (error) {\n                    this.emit(\"error\", error);\n                    return;\n                }\n                this.updateState(payload.params[0]);\n            });\n        });\n    }\n    onDisconnect() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            yield this.stop();\n            this.emit(\"close\", 1000, \"Connection closed\");\n            this.emit(\"disconnect\", 1000, \"Connection disconnected\");\n        });\n    }\n    updateState(sessionParams) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const { accounts, chainId, networkId, rpcUrl } = sessionParams;\n            if (!this.accounts || (accounts && this.accounts !== accounts)) {\n                this.accounts = accounts;\n                this.emit(\"accountsChanged\", accounts);\n            }\n            if (!this.chainId || (chainId && this.chainId !== chainId)) {\n                this.chainId = chainId;\n                this.emit(\"chainChanged\", chainId);\n            }\n            if (!this.networkId || (networkId && this.networkId !== networkId)) {\n                this.networkId = networkId;\n                this.emit(\"networkChanged\", networkId);\n            }\n            this.updateRpcUrl(this.chainId, rpcUrl || \"\");\n        });\n    }\n    updateRpcUrl(chainId, rpcUrl = \"\") {\n        const infuraNetworks = {\n            1: \"mainnet\",\n            3: \"ropsten\",\n            4: \"rinkeby\",\n            5: \"goerli\",\n            42: \"kovan\",\n        };\n        const network = infuraNetworks[chainId];\n        if (!rpcUrl) {\n            if (this.rpc && this.rpc[chainId]) {\n                rpcUrl = this.rpc[chainId];\n            }\n            else if (network) {\n                rpcUrl = `https://${network}.infura.io/v3/${this.infuraId}`;\n            }\n        }\n        if (rpcUrl) {\n            this.rpcUrl = rpcUrl;\n            this.updateHttpConnection();\n        }\n        else {\n            this.emit(\"error\", new Error(`No RPC Url available for chainId: ${chainId}`));\n        }\n    }\n    updateHttpConnection() {\n        if (this.rpcUrl) {\n            this.http = new http_connection_1.default(this.rpcUrl);\n            this.http.on(\"payload\", payload => this.emit(\"payload\", payload));\n            this.http.on(\"error\", error => this.emit(\"error\", error));\n        }\n    }\n    sendAsyncPromise(method, params) {\n        return new Promise((resolve, reject) => {\n            this.sendAsync({\n                id: utils_1.payloadId(),\n                jsonrpc: \"2.0\",\n                method,\n                params: params || [],\n            }, (error, response) => {\n                if (error) {\n                    reject(error);\n                    return;\n                }\n                resolve(response.result);\n            });\n        });\n    }\n    initialize() {\n        this.updateRpcUrl(this.chainId);\n        this.addProvider(new FixtureSubprovider({\n            eth_hashrate: \"0x00\",\n            eth_mining: false,\n            eth_syncing: true,\n            net_listening: true,\n            web3_clientVersion: `WalletConnect/v1.x.x/javascript`,\n        }));\n        this.addProvider(new CacheSubprovider());\n        this.addProvider(new SubscriptionsSubprovider());\n        this.addProvider(new FilterSubprovider());\n        this.addProvider(new NonceSubprovider());\n        this.addProvider(new HookedWalletSubprovider(this.configWallet()));\n        this.addProvider({\n            handleRequest: (payload, next, end) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                try {\n                    const { result } = yield this.handleRequest(payload);\n                    end(null, result);\n                }\n                catch (error) {\n                    end(error);\n                }\n            }),\n            setEngine: (_) => _,\n        });\n    }\n    configWallet() {\n        return {\n            getAccounts: (cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                try {\n                    const wc = yield this.getWalletConnector();\n                    const accounts = wc.accounts;\n                    if (accounts && accounts.length) {\n                        cb(null, accounts);\n                    }\n                    else {\n                        cb(new Error(\"Failed to get accounts\"));\n                    }\n                }\n                catch (error) {\n                    cb(error);\n                }\n            }),\n            processMessage: (msgParams, cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                try {\n                    const wc = yield this.getWalletConnector();\n                    const result = yield wc.signMessage([msgParams.from, msgParams.data]);\n                    cb(null, result);\n                }\n                catch (error) {\n                    cb(error);\n                }\n            }),\n            processPersonalMessage: (msgParams, cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                try {\n                    const wc = yield this.getWalletConnector();\n                    const result = yield wc.signPersonalMessage([msgParams.data, msgParams.from]);\n                    cb(null, result);\n                }\n                catch (error) {\n                    cb(error);\n                }\n            }),\n            processSignTransaction: (txParams, cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                try {\n                    const wc = yield this.getWalletConnector();\n                    const result = yield wc.signTransaction(txParams);\n                    cb(null, result);\n                }\n                catch (error) {\n                    cb(error);\n                }\n            }),\n            processTransaction: (txParams, cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                try {\n                    const wc = yield this.getWalletConnector();\n                    const result = yield wc.sendTransaction(txParams);\n                    cb(null, result);\n                }\n                catch (error) {\n                    cb(error);\n                }\n            }),\n            processTypedMessage: (msgParams, cb) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                try {\n                    const wc = yield this.getWalletConnector();\n                    const result = yield wc.signTypedData([msgParams.from, msgParams.data]);\n                    cb(null, result);\n                }\n                catch (error) {\n                    cb(error);\n                }\n            }),\n        };\n    }\n}\nexports.default = WalletConnectProvider;\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","client_1","__importDefault","qrcode_modal_1","http_connection_1","utils_1","ProviderEngine","CacheSubprovider","FixtureSubprovider","FilterSubprovider","HookedWalletSubprovider","NonceSubprovider","SubscriptionsSubprovider","WalletConnectProvider","constructor","opts","pollingInterval","bridge","qrcode","qrcodeModal","default","qrcodeModalOptions","undefined","rpc","infuraId","http","connected","isConnecting","connectCallbacks","accounts","networkId","chainId","rpcUrl","enable","this.enable","__awaiter","wc","getWalletConnector","start","subscribeWalletConnector","Error","request","payload","this.request","send","callback","this.send","method","params","parsePersonalSign","sendAsyncPromise","assign","id","payloadId","jsonrpc","sendAsync","onConnect","this.onConnect","push","triggerConnect","result","this.triggerConnect","length","forEach","connector","clientMeta","trim","initialize","peerMeta","disconnect","close","disableSessionCreation","killSession","onDisconnect","handleRequest","response","_","handleOtherRequests","formatResponse","error","emit","signingMethods","includes","startsWith","handleReadRequests","sendCustomRequest","Promise","resolve","reject","x","updateState","session","sessionRequestOpions","on","createSession","then","catch","stop","sessionParams","updateRpcUrl","network","infuraNetworks","updateHttpConnection","addProvider","eth_hashrate","eth_mining","eth_syncing","net_listening","web3_clientVersion","configWallet","next","end","setEngine","getAccounts","cb","processMessage","msgParams","signMessage","from","data","processPersonalMessage","signPersonalMessage","processSignTransaction","txParams","signTransaction","processTransaction","sendTransaction","processTypedMessage","signTypedData"]
}
