{
"version":3,
"file":"module$node_modules$$ethersproject$json_wallets$lib$crowdsale.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@ethersproject/json-wallets/lib/crowdsale.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$ethersproject$json_wallets$lib$crowdsale\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decrypt = exports.CrowdsaleAccount = void 0;\nvar aes_js_1 = __importDefault(require(\"aes-js\"));\nvar address_1 = require(\"@ethersproject/address\");\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\nvar pbkdf2_1 = require(\"@ethersproject/pbkdf2\");\nvar strings_1 = require(\"@ethersproject/strings\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar utils_1 = require(\"./utils\");\nvar CrowdsaleAccount = /** @class */ (function (_super) {\n    __extends(CrowdsaleAccount, _super);\n    function CrowdsaleAccount() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CrowdsaleAccount.prototype.isCrowdsaleAccount = function (value) {\n        return !!(value && value._isCrowdsaleAccount);\n    };\n    return CrowdsaleAccount;\n}(properties_1.Description));\nexports.CrowdsaleAccount = CrowdsaleAccount;\n// See: https://github.com/ethereum/pyethsaletool\nfunction decrypt(json, password) {\n    var data = JSON.parse(json);\n    password = utils_1.getPassword(password);\n    // Ethereum Address\n    var ethaddr = address_1.getAddress(utils_1.searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    var encseed = utils_1.looseArrayify(utils_1.searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    var key = bytes_1.arrayify(pbkdf2_1.pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    var iv = encseed.slice(0, 16);\n    var encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    var aesCbc = new aes_js_1.default.ModeOfOperation.cbc(key, iv);\n    var seed = aes_js_1.default.padding.pkcs7.strip(bytes_1.arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    var seedHex = \"\";\n    for (var i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    var seedHexBytes = strings_1.toUtf8Bytes(seedHex);\n    var privateKey = keccak256_1.keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\nexports.decrypt = decrypt;\n//# sourceMappingURL=crowdsale.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","TypeError","String","create","__importDefault","mod","__esModule","defineProperty","value","decrypt","CrowdsaleAccount","aes_js_1","address_1","bytes_1","keccak256_1","pbkdf2_1","strings_1","properties_1","logger_1","_version_1","logger","Logger","version","utils_1","_super","apply","arguments","isCrowdsaleAccount","CrowdsaleAccount.prototype.isCrowdsaleAccount","_isCrowdsaleAccount","Description","json","password","data","JSON","parse","getPassword","ethaddr","getAddress","searchPath","encseed","looseArrayify","length","throwArgumentError","key","arrayify","pbkdf2","slice","iv","encryptedSeed","aesCbc","default","ModeOfOperation","cbc","seed","padding","pkcs7","strip","seedHex","i","fromCharCode","seedHexBytes","toUtf8Bytes","privateKey","keccak256","address"]
}
