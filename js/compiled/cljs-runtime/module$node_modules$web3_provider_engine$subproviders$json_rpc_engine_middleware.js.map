{
"version":3,
"file":"module$node_modules$web3_provider_engine$subproviders$json_rpc_engine_middleware.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,gFAAf,CAAqG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACvIC,MAAAA,CAAcH,OAAA,CAAQ,mEAAR,CAIpB,MAAMI,mCAAN,QAAiDD,OAAjD,CAGEE,WAAY,CAACC,aAAD,CAAgB,CAC1B,KAAA,EACA,IAAI,CAACA,aAAL,CAAoB,KAAUC,MAAJ,CAAU,iEAAV,CAAN,CACpB,IAAA,CAAKC,cAAL,CAAsBF,aAHI,CAO5BG,SAAU,CAACC,MAAD,CAAS,CACjB,GAAI,IAAJ,CAASC,UAAT,CAAqB,KAAUJ,MAAJ,CAAU,wEAAV,CAAN;AAEfI,MAAAA,CAAa,IAAA,CAAKH,cAAL,CAAoB,CAAEE,MAAF,CAAUE,SAAUF,MAApB,CAA4BG,aAD9CH,MAC8CG,CADvCC,aACW,CAApB,CACnB,IAAI,CAACH,MAAL,CAAiB,KAAUJ,MAAJ,CAAU,+EAAV,CAAN,CACjB,GAA0B,UAA1B,GAAI,MAAOI,OAAX,CAAsC,KAAUJ,MAAJ,CAAU,6EAAV,CAAN,CACtC,IAAA,CAAKI,UAAL,CAAkBA,MAND,CASnBI,aAAc,CAACC,GAAD,CAAMC,WAAN,CAAmBC,UAAnB,CAA+B,CAC3C,MAAMC,IAAM,CAAEC,GAAIJ,GAAJI,CAAQA,EAAV,CACZ,KAAA,CAAKT,UAAL,CAAgBK,GAAhB,CAAqBG,GAArB,CAEAE,QAAwB,CAACC,OAAD,CAAU,CAChCL,WAAA,CAAY,CAACM,GAAD,CAAMC,MAAN,CAAcC,EAAd,CAAA,EAAqB,CAE3BF,GAAJ,EACE,OAAOJ,GAAP,CAAWK,MACX,CAAAL,GAAA,CAAIO,KAAJ;AAAY,CAAEC,QAASJ,GAATI,CAAaA,OAAbA,EAAwBJ,GAA1B,CAFd,EAIEJ,GAJF,CAIMK,MAJN,CAIeA,MAGXF,QAAJ,CACEA,OAAA,CAAQG,EAAR,CADF,CAGEA,EAAA,EAZ6B,CAAjC,CADgC,CAFlC,CAoBAG,QAAuB,CAACL,GAAD,CAAM,CAC3B,GAAIA,GAAJ,CAAS,MAAOL,WAAA,CAAWK,GAAX,CAChBL,WAAA,CAAW,IAAX,CAAiBC,GAAjB,CAAqBK,MAArB,CAF2B,CApB7B,CAF2C,CAnB/C,CAiDAvB,MAAA,CAAOC,OAAP,CAAiBE,kCAtD4H;",
"sources":["node_modules/web3-provider-engine/subproviders/json-rpc-engine-middleware.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_provider_engine$subproviders$json_rpc_engine_middleware\"] = function(global,require,module,exports) {\nconst Subprovider = require('./subprovider.js')\n\n// wraps a json-rpc-engine middleware in a subprovider interface\n\nclass JsonRpcEngineMiddlewareSubprovider extends Subprovider {\n\n  // take a constructorFn to call once we have a reference to the engine\n  constructor (constructorFn) {\n    super()\n    if (!constructorFn) throw new Error('JsonRpcEngineMiddlewareSubprovider - no constructorFn specified')\n    this._constructorFn = constructorFn\n  }\n\n  // this is called once the subprovider has been added to the provider engine\n  setEngine (engine) {\n    if (this.middleware) throw new Error('JsonRpcEngineMiddlewareSubprovider - subprovider added to engine twice')\n    const blockTracker = engine._blockTracker\n    const middleware = this._constructorFn({ engine, provider: engine, blockTracker })\n    if (!middleware) throw new Error('JsonRpcEngineMiddlewareSubprovider - _constructorFn did not return middleware')\n    if (typeof middleware !== 'function') throw new Error('JsonRpcEngineMiddlewareSubprovider - specified middleware is not a function')\n    this.middleware = middleware\n  }\n\n  handleRequest (req, provEngNext, provEngEnd) {\n    const res = { id: req.id }\n    this.middleware(req, res, middlewareNext, middlewareEnd)\n\n    function middlewareNext (handler) {\n      provEngNext((err, result, cb) => {\n        // update response object with result or error\n        if (err) {\n          delete res.result\n          res.error = { message: err.message || err }\n        } else {\n          res.result = result\n        }\n        // call middleware's next handler (even if error)\n        if (handler) {\n          handler(cb)\n        } else {\n          cb()\n        }\n      })\n    }\n\n    function middlewareEnd (err) {\n      if (err) return provEngEnd(err)\n      provEngEnd(null, res.result)\n    }\n  }\n\n}\n\nmodule.exports = JsonRpcEngineMiddlewareSubprovider\n\n};"],
"names":["shadow$provide","global","require","module","exports","Subprovider","JsonRpcEngineMiddlewareSubprovider","constructor","constructorFn","Error","_constructorFn","setEngine","engine","middleware","provider","blockTracker","_blockTracker","handleRequest","req","provEngNext","provEngEnd","res","id","middlewareNext","handler","err","result","cb","error","message","middlewareEnd"]
}
