{
"version":3,
"file":"module$node_modules$axios$lib$helpers$isURLSameOrigin.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,qDAAf,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlH,IAAIC,MAAQH,OAAA,CAAQ,qCAAR,CAEZC,OAAA,CAAOC,OAAP,CACEC,KAAA,CAAMC,oBAAN,EAAA,CAICC,QAA2B,EAAG,CAW7BC,QAASA,WAAU,CAACC,GAAD,CAAM,CAGnBC,IAAJ,GAEEC,cAAA,CAAeC,YAAf,CAA4B,MAA5B,CAAoCC,GAApC,CACA,CAAAA,GAAA,CAAOF,cAAP,CAAsBE,IAHxB,CAMAF,eAAA,CAAeC,YAAf,CAA4B,MAA5B,CAAoCC,GAApC,CAGA,OAAO,CACLA,KAAMF,cAANE,CAAqBA,IADhB,CAELC,SAAUH,cAAA,CAAeG,QAAf,CAA0BH,cAAA,CAAeG,QAAf,CAAwBC,OAAxB,CAAgC,IAAhC,CAAsC,EAAtC,CAA1B,CAAsE,EAF3E,CAGLC,KAAML,cAANK,CAAqBA,IAHhB,CAILC,OAAQN,cAAA,CAAeM,MAAf;AAAwBN,cAAA,CAAeM,MAAf,CAAsBF,OAAtB,CAA8B,KAA9B,CAAqC,EAArC,CAAxB,CAAmE,EAJtE,CAKLG,KAAMP,cAAA,CAAeO,IAAf,CAAsBP,cAAA,CAAeO,IAAf,CAAoBH,OAApB,CAA4B,IAA5B,CAAkC,EAAlC,CAAtB,CAA8D,EAL/D,CAMLI,SAAUR,cAAVQ,CAAyBA,QANpB,CAOLC,KAAMT,cAANS,CAAqBA,IAPhB,CAQLC,SAAiD,GAAvC,GAACV,cAAA,CAAeU,QAAf,CAAwBC,MAAxB,CAA+B,CAA/B,CAAD,CACAX,cADA,CACeU,QADf,CAEA,GAFA,CAEMV,cAFN,CAEqBU,QAV1B,CAZgB,CAVzB,IAAIX,KAAO,iBAAA,CAAkBa,IAAlB,CAAuBC,SAAvB,CAAiCC,SAAjC,CAAX,CACId,eAAiBe,QAAA,CAASC,aAAT,CAAuB,GAAvB,CAmCrB,KAAAC,UAAYpB,UAAA,CAAWqB,MAAX,CAAkBC,QAAlB,CAA2BjB,IAA3B,CAQZ,OAAOkB,SAAwB,CAACC,UAAD,CAAa,CACtCC,UAAAA,CAAU5B,KAAA,CAAM6B,QAAN,CAAeF,UAAf,CAAD,CAA+BxB,UAAA,CAAWwB,UAAX,CAA/B,CAAwDA,UACrE;MAAQC,WAAR,CAAenB,QAAf,GAA4Bc,SAA5B,CAAsCd,QAAtC,EACMmB,UADN,CACajB,IADb,GACsBY,SADtB,CACgCZ,IAHU,CA7Cf,CAA/B,EAJA,CAyDCmB,QAA8B,EAAG,CAChC,MAAOJ,SAAwB,EAAG,CAChC,MAAO,CAAA,CADyB,CADF,CAAlC,EA/DgH;",
"sources":["node_modules/axios/lib/helpers/isURLSameOrigin.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$axios$lib$helpers$isURLSameOrigin\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n\n};"],
"names":["shadow$provide","global","require","module","exports","utils","isStandardBrowserEnv","standardBrowserEnv","resolveURL","url","msie","urlParsingNode","setAttribute","href","protocol","replace","host","search","hash","hostname","port","pathname","charAt","test","navigator","userAgent","document","createElement","originURL","window","location","isURLSameOrigin","requestURL","parsed","isString","nonStandardBrowserEnv"]
}
