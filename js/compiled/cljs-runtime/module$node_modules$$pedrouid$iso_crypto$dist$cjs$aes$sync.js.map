{
"version":3,
"file":"module$node_modules$$pedrouid$iso_crypto$dist$cjs$aes$sync.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,0DAAf,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEvHC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAA,CAAQI,iBAAR,CAA4BJ,OAA5B,CAAoCK,iBAApC,CAAwD,IAAK,EAC7D,OAAMC,UAAYR,OAAA,CAAQ,iEAAR,CAWlBE,QAAA,CAAQK,iBAAR,CAVAA,QAA0B,CAACE,EAAD,CAAKC,GAAL,CAAUC,IAAV,CAAgB,CAQtC,MANIH,UAAA,CAAUI,MAAV,EAAJC,CACaL,SAAA,CAAUM,cAAV,CAAyBL,EAAzB,CAA6BC,GAA7B,CAAkCC,IAAlC,CADbE,CAIaL,SAAA,CAAUO,kBAAV,CAA6BN,EAA7B,CAAiCC,GAAjC,CAAsCC,IAAtC,CANyB,CAqB1CT,QAAA,CAAQI,iBAAR,CAVAA,QAA0B,CAACG,EAAD;AAAKC,GAAL,CAAUC,IAAV,CAAgB,CAQtC,MANIH,UAAA,CAAUI,MAAV,EAAJC,CACaL,SAAA,CAAUQ,cAAV,CAAyBP,EAAzB,CAA6BC,GAA7B,CAAkCC,IAAlC,CADbE,CAIaL,SAAA,CAAUS,kBAAV,CAA6BR,EAA7B,CAAiCC,GAAjC,CAAsCC,IAAtC,CANyB,CAhB6E;",
"sources":["node_modules/@pedrouid/iso-crypto/dist/cjs/aes/sync.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$pedrouid$iso_crypto$dist$cjs$aes$sync\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.aesCbcDecryptSync = exports.aesCbcEncryptSync = void 0;\nconst helpers_1 = require(\"../helpers\");\nfunction aesCbcEncryptSync(iv, key, data) {\n    let result;\n    if (helpers_1.isNode()) {\n        result = helpers_1.nodeAesEncrypt(iv, key, data);\n    }\n    else {\n        result = helpers_1.fallbackAesEncrypt(iv, key, data);\n    }\n    return result;\n}\nexports.aesCbcEncryptSync = aesCbcEncryptSync;\nfunction aesCbcDecryptSync(iv, key, data) {\n    let result;\n    if (helpers_1.isNode()) {\n        result = helpers_1.nodeAesDecrypt(iv, key, data);\n    }\n    else {\n        result = helpers_1.fallbackAesDecrypt(iv, key, data);\n    }\n    return result;\n}\nexports.aesCbcDecryptSync = aesCbcDecryptSync;\n//# sourceMappingURL=sync.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","aesCbcDecryptSync","aesCbcEncryptSync","helpers_1","iv","key","data","isNode","result","nodeAesEncrypt","fallbackAesEncrypt","nodeAesDecrypt","fallbackAesDecrypt"]
}
