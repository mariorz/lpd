{
"version":3,
"file":"module$node_modules$axios$lib$core$Axios.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,wCAAf,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAarGC,QAASA,MAAK,CAACC,cAAD,CAAiB,CAC7B,IAAA,CAAKC,QAAL,CAAgBD,cAChB,KAAA,CAAKE,YAAL,CAAoB,CAClBC,QAAS,IAAIC,kBADK,CAElBC,SAAU,IAAID,kBAFI,CAFS,CAV/B,IAAIH,SAAWL,OAAA,CAAQ,wCAAR,CAAf,CACIU,MAAQV,OAAA,CAAQ,qCAAR,CADZ,CAEIQ,mBAAqBR,OAAA,CAAQ,uDAAR,CAFzB,CAGIW,gBAAkBX,OAAA,CAAQ,oDAAR,CAoBtBG;KAAA,CAAMS,SAAN,CAAgBL,OAAhB,CAA0BM,QAAgB,CAACC,MAAD,CAAA,oCAAA,CAAS,CAG3B,QAAtB,GAAI,MAAOA,OAAX,GACEA,MADF,CACWJ,KAAA,CAAMK,KAAN,CAAY,CACnBC,IAAK,MADc,CAAZ,CAEN,oCAFM,CADX,CAMAF,OAAA,CAASJ,KAAA,CAAMK,KAAN,CAAYV,QAAZ,CAAsB,CAACY,OAAQ,KAAT,CAAtB,CAAuC,IAAvC,CAA4CZ,QAA5C,CAAsDS,MAAtD,CACTA,OAAA,CAAOG,MAAP,CAAgBH,MAAA,CAAOG,MAAP,CAAcC,WAAd,EAGhB,KAAIC,MAAQ,CAACR,eAAD,CAAkBS,IAAAA,EAAlB,CACRC,OAAAA,CAAUC,OAAA,CAAQC,OAAR,CAAgBT,MAAhB,CAEd,KAAA,CAAKR,YAAL,CAAkBC,OAAlB,CAA0BiB,OAA1B,CAAkCC,QAAmC,CAACC,WAAD,CAAc,CACjFP,KAAA,CAAMQ,OAAN,CAAcD,WAAd,CAA0BE,SAA1B,CAAqCF,WAArC,CAAiDG,QAAjD,CADiF,CAAnF,CAQA,KAJA,IAAA,CAAKvB,YAAL,CAAkBG,QAAlB,CAA2Be,OAA3B,CAAmCM,QAAiC,CAACJ,WAAD,CAAc,CAChFP,KAAA,CAAMY,IAAN,CAAWL,WAAX,CAAuBE,SAAvB;AAAkCF,WAAlC,CAA8CG,QAA9C,CADgF,CAAlF,CAIA,CAAOV,KAAP,CAAaa,MAAb,CAAA,CACEX,MAAA,CAAUA,MAAA,CAAQY,IAAR,CAAad,KAAA,CAAMe,KAAN,EAAb,CAA4Bf,KAAA,CAAMe,KAAN,EAA5B,CAGZ,OAAOb,OA5B0C,CAgCnDX,MAAA,CAAMc,OAAN,CAAc,CAAC,QAAD,CAAW,KAAX,CAAkB,MAAlB,CAA0B,SAA1B,CAAd,CAAoDW,QAA4B,CAAClB,MAAD,CAAS,CAEvFd,KAAA,CAAMS,SAAN,CAAgBK,MAAhB,CAAA,CAA0B,QAAQ,CAACD,GAAD,CAAMF,MAAN,CAAc,CAC9C,MAAO,KAAA,CAAKP,OAAL,CAAaG,KAAA,CAAMK,KAAN,CAAYD,MAAZ,EAAsB,EAAtB,CAA0B,CACpCG,MADoC,CAEvCD,GAFuC,CAA1B,CAAb,CADuC,CAFuC,CAAzF,CAUAN,MAAA,CAAMc,OAAN,CAAc,CAAC,MAAD,CAAS,KAAT,CAAgB,OAAhB,CAAd,CAAwCY,QAA8B,CAACnB,MAAD,CAAS,CAE7Ed,KAAA,CAAMS,SAAN,CAAgBK,MAAhB,CAAA,CAA0B,QAAQ,CAACD,GAAD,CAAMqB,IAAN,CAAYvB,MAAZ,CAAoB,CACpD,MAAO,KAAA,CAAKP,OAAL,CAAaG,KAAA,CAAMK,KAAN,CAAYD,MAAZ,EAAsB,EAAtB,CAA0B,CACpCG,MADoC,CAEvCD,GAFuC,CAGtCqB,IAHsC,CAA1B,CAAb,CAD6C,CAFuB,CAA/E,CAWApC,OAAA,CAAOC,OAAP,CAAiBC,KA/EoF;",
"sources":["node_modules/axios/lib/core/Axios.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$axios$lib$core$Axios\"] = function(global,require,module,exports) {\n'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Axios","instanceConfig","defaults","interceptors","request","InterceptorManager","response","utils","dispatchRequest","prototype","Axios.prototype.request","config","merge","url","method","toLowerCase","chain","undefined","promise","Promise","resolve","forEach","unshiftRequestInterceptors","interceptor","unshift","fulfilled","rejected","pushResponseInterceptors","push","length","then","shift","forEachMethodNoData","forEachMethodWithData","data"]
}
