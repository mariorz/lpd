{
"version":3,
"file":"module$node_modules$eth_block_tracker$src$polling.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/eth-block-tracker/src/polling.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$eth_block_tracker$src$polling\"] = function(global,require,module,exports) {\nconst pify = require('pify')\nconst BaseBlockTracker = require('./base')\n\nconst sec = 1000\n\nclass PollingBlockTracker extends BaseBlockTracker {\n\n  constructor (opts = {}) {\n    // parse + validate args\n    if (!opts.provider) throw new Error('PollingBlockTracker - no provider specified.')\n    const pollingInterval = opts.pollingInterval || 20 * sec\n    const retryTimeout = opts.retryTimeout || pollingInterval / 10\n    const keepEventLoopActive = opts.keepEventLoopActive !== undefined ? opts.keepEventLoopActive : true\n    const setSkipCacheFlag = opts.setSkipCacheFlag || false\n    // BaseBlockTracker constructor\n    super(Object.assign({\n      blockResetDuration: pollingInterval,\n    }, opts))\n    // config\n    this._provider = opts.provider\n    this._pollingInterval = pollingInterval\n    this._retryTimeout = retryTimeout\n    this._keepEventLoopActive = keepEventLoopActive\n    this._setSkipCacheFlag = setSkipCacheFlag\n  }\n\n  //\n  // public\n  //\n\n  // trigger block polling\n  async checkForLatestBlock () {\n    await this._updateLatestBlock()\n    return await this.getLatestBlock()\n  }\n\n  //\n  // private\n  //\n\n  _start () {\n    this._performSync().catch(err => this.emit('error', err))\n  }\n\n  async _performSync () {\n    while (this._isRunning) {\n      try {\n        await this._updateLatestBlock()\n        await timeout(this._pollingInterval, !this._keepEventLoopActive)\n      } catch (err) {\n        const newErr = new Error(`PollingBlockTracker - encountered an error while attempting to update latest block:\\n${err.stack}`)\n        try {\n          this.emit('error', newErr)\n        } catch (emitErr) {\n          console.error(newErr)\n        }\n        await timeout(this._retryTimeout, !this._keepEventLoopActive)\n      }\n    }\n  }\n\n  async _updateLatestBlock () {\n    // fetch + set latest block\n    const latestBlock = await this._fetchLatestBlock()\n    this._newPotentialLatest(latestBlock)\n  }\n\n  async _fetchLatestBlock () {\n    const req = { jsonrpc: \"2.0\", id: 1, method: 'eth_blockNumber', params: [] }\n    if (this._setSkipCacheFlag) req.skipCache = true\n    const res = await pify((cb) => this._provider.sendAsync(req, cb))()\n    if (res.error) throw new Error(`PollingBlockTracker - encountered error fetching block:\\n${res.error}`)\n    return res.result\n  }\n\n}\n\nmodule.exports = PollingBlockTracker\n\nfunction timeout (duration, unref) {\n  return new Promise(resolve => {\n    const timoutRef = setTimeout(resolve, duration)\n    // don't keep process open\n    if (timoutRef.unref && unref) {\n      timoutRef.unref()\n    }\n  })\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","timeout","duration","unref","Promise","resolve","timoutRef","setTimeout","pify","BaseBlockTracker","PollingBlockTracker","constructor","opts","provider","Error","pollingInterval","retryTimeout","keepEventLoopActive","undefined","setSkipCacheFlag","Object","assign","blockResetDuration","_provider","_pollingInterval","_retryTimeout","_keepEventLoopActive","_setSkipCacheFlag","checkForLatestBlock","_updateLatestBlock","getLatestBlock","_start","_performSync","catch","err","emit","_isRunning","newErr","stack","emitErr","console","error","latestBlock","_fetchLatestBlock","_newPotentialLatest","req","jsonrpc","id","method","params","skipCache","res","cb","sendAsync","result"]
}
