shadow$provide.module$node_modules$$ethersproject$networks$lib$index=function(global,require,module,exports){function ethDefaultProvider(network$jscomp$0){var func=function(providers,options){null==options&&(options={});var providerList=[];if(providers.InfuraProvider)try{providerList.push(new providers.InfuraProvider(network$jscomp$0,options.infura))}catch(error){}if(providers.EtherscanProvider)try{providerList.push(new providers.EtherscanProvider(network$jscomp$0,options.etherscan))}catch(error){}if(providers.AlchemyProvider)try{providerList.push(new providers.AlchemyProvider(network$jscomp$0,
options.alchemy))}catch(error){}if(providers.PocketProvider)try{providerList.push(new providers.PocketProvider(network$jscomp$0))}catch(error){}if(providers.CloudflareProvider)try{providerList.push(new providers.CloudflareProvider(network$jscomp$0))}catch(error){}if(0===providerList.length)return null;if(providers.FallbackProvider){var quorum=1;null!=options.quorum?quorum=options.quorum:"homestead"===network$jscomp$0&&(quorum=2);return new providers.FallbackProvider(providerList,quorum)}return providerList[0]};
func.renetwork=function(network){return ethDefaultProvider(network)};return func}function etcDefaultProvider(url,network$jscomp$0){var func=function(providers,options){return providers.JsonRpcProvider?new providers.JsonRpcProvider(url,network$jscomp$0):null};func.renetwork=function(network){return etcDefaultProvider(url,network)};return func}Object.defineProperty(exports,"__esModule",{value:!0});exports.getNetwork=void 0;global=require("module$node_modules$$ethersproject$logger$lib$index");require=
require("module$node_modules$$ethersproject$networks$lib$_version");var logger=new global.Logger(require.version);require={chainId:1,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"homestead",_defaultProvider:ethDefaultProvider("homestead")};global={chainId:3,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"ropsten",_defaultProvider:ethDefaultProvider("ropsten")};module={chainId:63,name:"classicMordor",_defaultProvider:etcDefaultProvider("https://www.ethercluster.com/mordor",
"classicMordor")};var networks={unspecified:{chainId:0,name:"unspecified"},homestead:require,mainnet:require,morden:{chainId:2,name:"morden"},ropsten:global,testnet:global,rinkeby:{chainId:4,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"rinkeby",_defaultProvider:ethDefaultProvider("rinkeby")},kovan:{chainId:42,name:"kovan",_defaultProvider:ethDefaultProvider("kovan")},goerli:{chainId:5,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"goerli",_defaultProvider:ethDefaultProvider("goerli")},
classic:{chainId:61,name:"classic",_defaultProvider:etcDefaultProvider("https://www.ethercluster.com/etc","classic")},classicMorden:{chainId:62,name:"classicMorden"},classicMordor:module,classicTestnet:module,classicKotti:{chainId:6,name:"classicKotti",_defaultProvider:etcDefaultProvider("https://www.ethercluster.com/kotti","classicKotti")}};exports.getNetwork=function(network){if(null==network)return null;if("number"===typeof network){for(var name_1 in networks){var standard_1=networks[name_1];if(standard_1.chainId===
network)return{name:standard_1.name,chainId:standard_1.chainId,ensAddress:standard_1.ensAddress||null,_defaultProvider:standard_1._defaultProvider||null}}return{chainId:network,name:"unknown"}}if("string"===typeof network)return network=networks[network],null==network?null:{name:network.name,chainId:network.chainId,ensAddress:network.ensAddress,_defaultProvider:network._defaultProvider||null};name_1=networks[network.name];if(!name_1)return"number"!==typeof network.chainId&&logger.throwArgumentError("invalid network chainId",
"network",network),network;0!==network.chainId&&network.chainId!==name_1.chainId&&logger.throwArgumentError("network chainId mismatch","network",network);standard_1=network._defaultProvider||null;null==standard_1&&name_1._defaultProvider&&(standard_1=(standard_1=name_1._defaultProvider)&&"function"===typeof standard_1.renetwork?name_1._defaultProvider.renetwork(network):name_1._defaultProvider);return{name:network.name,chainId:name_1.chainId,ensAddress:network.ensAddress||name_1.ensAddress||null,
_defaultProvider:standard_1}}}
//# sourceMappingURL=module$node_modules$$ethersproject$networks$lib$index.js.map
