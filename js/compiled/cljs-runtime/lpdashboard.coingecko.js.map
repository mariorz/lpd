{"version":3,"sources":["lpdashboard/coingecko.cljs"],"mappings":"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","names":["lpdashboard.coingecko/<token-prices","addresses","c__27667__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__27668__auto__","switch__27575__auto__","state_27962","state_val_27963","inst_27942","inst_27941","inst_27938","inst_27939","inst_27940","inst_27943","inst_27944","inst_27945","cljs.core/PersistentHashMap","inst_27946","statearr-27999","cljs.core.async.impl.ioc-helpers/take!","inst_27948","inst_27949","inst_27950","p1__27934#","inst_27951","inst_27952","p1__27935#","inst_27953","inst_27954","inst_27955","inst_27956","inst_27957","p1__27936#","inst_27958","inst_27959","inst_27960","cljs.core.async.impl.ioc-helpers/return-chan","statearr-28047","state-machine__27576__auto__","ret-value__27577__auto__","result__27578__auto__","cljs.core/keyword-identical?","ex__27579__auto__","e28051","statearr-28052","cljs.core/seq","statearr-28055","cljs.core/first","state__27669__auto__","statearr-28060","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","base-url","addy-args","goog.string/urlEncode","cljs.core.apply","cljs.core/str","clojure.string.join","full-url","data","cljs_http.client.get","data-sans-ts","lpdashboard.utils/update-values","cljs.core.dissoc","data'","cljs.core.merge_with","n","js/module$node_modules$bignumber_DOT_js$bignumber","cljs.core/zipmap","cljs.core.map","cljs.core/name","cljs.core/keys","clojure.set/rename-keys","cljs.core/vals"],"sourcesContent":["(ns lpdashboard.coingecko\n  (:require [cljs.core.async :refer [go]]\n            [cljs.core.async.interop :refer-macros [<p!]]\n            [cljs-http.client :as http]\n            [bignumber.js :as BigNumber]\n            [bignumber.core]\n            [goog.string :as string]\n            [goog.uri.utils :as uri]\n            [lpdashboard.utils :as u]))\n\n\n(defn <token-prices\n  [addresses]\n  (go (let [base-url (str \"https://api.coingecko.com/\"\n                          \"api/v3/simple/token_price/ethereum?\"\n                          \"vs_currencies=usd%2Ceth&include_last_updated_at=true\"\n                          \"&contract_addresses=\")\n            addy-args (string/urlEncode\n                       (apply str (clojure.string-join \",\" addresses)))\n            full-url (str base-url addy-args)\n            data (:body\n                  (<! (http/get\n                       full-url\n                       {:with-credentials? false})))\n            data-sans-ts (u/update-values\n                          data\n                          #(dissoc % :last_updated_at))\n            data' (merge-with data\n                              (u/update-values\n                               data-sans-ts\n                               #(u/update-values % (fn [n] (BigNumber. (str n))))))]\n        (zipmap\n         (map name (keys data'))\n         (map #(clojure.set/rename-keys % {:last_updated_at :ts\n                                           :usd \"usd\"\n                                           :eth \"eth\"})\n              (vals data'))))))\n\n#_(go (def token-prices (<! (<coingecko-token-prices token-ids))))\n\n"]}