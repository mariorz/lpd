shadow$provide.module$node_modules$qrcode$lib$core$version=function(global,require,module,exports){function getTotalBitsFromDataArray(segments,version){var totalBits=0;segments.forEach(function(data){var reservedBits=Mode.getCharCountIndicator(data.mode,version)+4;totalBits+=reservedBits+data.getBitsLength()});return totalBits}var Utils=require("module$node_modules$qrcode$lib$core$utils"),ECCode=require("module$node_modules$qrcode$lib$core$error_correction_code"),ECLevel=require("module$node_modules$qrcode$lib$core$error_correction_level"),
Mode=require("module$node_modules$qrcode$lib$core$mode"),VersionCheck=require("module$node_modules$qrcode$lib$core$version_check"),isArray=require("module$node_modules$isarray$index"),G18_BCH=Utils.getBCHDigit(7973);exports.from=function(value,defaultValue){return VersionCheck.isValid(value)?parseInt(value,10):defaultValue};exports.getCapacity=function(version,errorCorrectionLevel,mode){if(!VersionCheck.isValid(version))throw Error("Invalid QR Code version");"undefined"===typeof mode&&(mode=Mode.BYTE);
var totalCodewords=Utils.getSymbolTotalCodewords(version);errorCorrectionLevel=ECCode.getTotalCodewordsCount(version,errorCorrectionLevel);totalCodewords=8*(totalCodewords-errorCorrectionLevel);if(mode===Mode.MIXED)return totalCodewords;version=totalCodewords-(Mode.getCharCountIndicator(mode,version)+4);switch(mode){case Mode.NUMERIC:return Math.floor(version/10*3);case Mode.ALPHANUMERIC:return Math.floor(version/11*2);case Mode.KANJI:return Math.floor(version/13);default:return Math.floor(version/
8)}};exports.getBestVersionForData=function(data,errorCorrectionLevel){var seg;errorCorrectionLevel=ECLevel.from(errorCorrectionLevel,ECLevel.M);if(isArray(data)){if(1<data.length){a:{for(seg=1;40>=seg;seg++)if(getTotalBitsFromDataArray(data,seg)<=exports.getCapacity(seg,errorCorrectionLevel,Mode.MIXED)){errorCorrectionLevel=seg;break a}errorCorrectionLevel=void 0}return errorCorrectionLevel}if(0===data.length)return 1;seg=data[0]}else seg=data;a:{data=seg.mode;seg=seg.getLength();for(var currentVersion=
1;40>=currentVersion;currentVersion++)if(seg<=exports.getCapacity(currentVersion,errorCorrectionLevel,data)){errorCorrectionLevel=currentVersion;break a}errorCorrectionLevel=void 0}return errorCorrectionLevel};exports.getEncodedBits=function(version){if(!VersionCheck.isValid(version)||7>version)throw Error("Invalid QR Code version");for(var d=version<<12;0<=Utils.getBCHDigit(d)-G18_BCH;)d^=7973<<Utils.getBCHDigit(d)-G18_BCH;return version<<12|d}}
//# sourceMappingURL=module$node_modules$qrcode$lib$core$version.js.map
