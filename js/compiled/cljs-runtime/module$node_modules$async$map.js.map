{
"version":3,
"file":"module$node_modules$async$map.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,6BAAf,CAAkD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1FC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAMIC,OAAAA,CAM0C,CAR1CC,MAQ0C,CAR5BP,OAAA,CAAQ,+CAAR,CAQ4B,GANJO,MAMI,CAAWC,UAAX,CANJD,MAMI,CAA8B,CAAEE,QANpCF,MAMkC,CAFxEG,QAAAA,CAE0C,CAJ1CC,OAI0C,CAJnCX,OAAA,CAAQ,wCAAR,CAImC,GAFXW,OAEW,CAAWH,UAAX,CAFXG,OAEW,CAA8B,CAAEF,QAF3CE,OAEyC,CAsC5ET,QAAA,CAAQO,OAAR,CAAkB,CAAC,CAAA,CAAGH,MAAH,CAAgBG,OAAjB,EAA0BC,OAA1B,CAAgCD,OAAhC,CAClBR,OAAA,CAAOC,OAAP,CAAiBA,OAAA,CAAQ,SAAR,CAtDyE;",
"sources":["node_modules/async/map.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$async$map\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _doParallel = require('./internal/doParallel');\n\nvar _doParallel2 = _interopRequireDefault(_doParallel);\n\nvar _map = require('./internal/map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callback\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @example\n *\n * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n *     // results is now an array of stats for each file\n * });\n */\nexports.default = (0, _doParallel2.default)(_map2.default);\nmodule.exports = exports['default'];\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","_doParallel2","_doParallel","__esModule","default","_map2","_map"]
}
