shadow$provide.module$node_modules$$ethersproject$address$lib$index=function(global,require,module,exports){function getChecksumAddress(address){bytes_1.isHexString(address,20)||logger.throwArgumentError("invalid address","address",address);address=address.toLowerCase();address=address.substring(2).split("");for(var expanded=new Uint8Array(40),i=0;40>i;i++)expanded[i]=address[i].charCodeAt(0);expanded=bytes_1.arrayify(keccak256_1.keccak256(expanded));for(i=0;40>i;i+=2)8<=expanded[i>>1]>>4&&(address[i]=
address[i].toUpperCase()),8<=(expanded[i>>1]&15)&&(address[i+1]=address[i+1].toUpperCase());return"0x"+address.join("")}function ibanChecksum(address){address=address.toUpperCase();address=address.substring(4)+address.substring(0,2)+"00";for(address=address.split("").map(function(c){return ibanLookup[c]}).join("");address.length>=safeDigits;){var block=address.substring(0,safeDigits);address=parseInt(block,10)%97+address.substring(block.length)}for(address=String(98-parseInt(address,10)%97);2>address.length;)address=
"0"+address;return address}function getAddress(address){var result=null;"string"!==typeof address&&logger.throwArgumentError("invalid address","address",address);if(address.match(/^(0x)?[0-9a-fA-F]{40}$/))"0x"!==address.substring(0,2)&&(address="0x"+address),result=getChecksumAddress(address),address.match(/([A-F].*[a-f])|([a-f].*[A-F])/)&&result!==address&&logger.throwArgumentError("bad address checksum","address",address);else if(address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){address.substring(2,
4)!==ibanChecksum(address)&&logger.throwArgumentError("bad icap checksum","address",address);for(result=bignumber_1._base36To16(address.substring(4));40>result.length;)result="0"+result;result=getChecksumAddress("0x"+result)}else logger.throwArgumentError("invalid address","address",address);return result}Object.defineProperty(exports,"__esModule",{value:!0});exports.getCreate2Address=exports.getContractAddress=exports.getIcapAddress=exports.isAddress=exports.getAddress=void 0;var bytes_1=require("module$node_modules$$ethersproject$bytes$lib$index"),
bignumber_1=require("module$node_modules$$ethersproject$bignumber$lib$index"),keccak256_1=require("module$node_modules$$ethersproject$keccak256$lib$index"),rlp_1=require("module$node_modules$$ethersproject$rlp$lib$index");global=require("module$node_modules$$ethersproject$logger$lib$index");require=require("module$node_modules$$ethersproject$address$lib$_version");var logger=new global.Logger(require.version),ibanLookup={};for(require=0;10>require;require++)ibanLookup[String(require)]=String(require);
for(require=0;26>require;require++)ibanLookup[String.fromCharCode(65+require)]=String(10+require);var safeDigits=Math.floor(Math.log10?Math.log10(9007199254740991):Math.log(9007199254740991)/Math.LN10);exports.getAddress=getAddress;exports.isAddress=function(address){try{return getAddress(address),!0}catch(error){}return!1};exports.getIcapAddress=function(address){for(address=bignumber_1._base16To36(getAddress(address).substring(2)).toUpperCase();30>address.length;)address="0"+address;return"XE"+
ibanChecksum("XE00"+address)+address};exports.getContractAddress=function(transaction){var from=null;try{from=getAddress(transaction.from)}catch(error){logger.throwArgumentError("missing from address","transaction",transaction)}transaction=bytes_1.stripZeros(bytes_1.arrayify(bignumber_1.BigNumber.from(transaction.nonce).toHexString()));return getAddress(bytes_1.hexDataSlice(keccak256_1.keccak256(rlp_1.encode([from,transaction])),12))};exports.getCreate2Address=function(from,salt,initCodeHash){32!==
bytes_1.hexDataLength(salt)&&logger.throwArgumentError("salt must be 32 bytes","salt",salt);32!==bytes_1.hexDataLength(initCodeHash)&&logger.throwArgumentError("initCodeHash must be 32 bytes","initCodeHash",initCodeHash);return getAddress(bytes_1.hexDataSlice(keccak256_1.keccak256(bytes_1.concat(["0xff",getAddress(from),salt,initCodeHash])),12))}}
//# sourceMappingURL=module$node_modules$$ethersproject$address$lib$index.js.map
