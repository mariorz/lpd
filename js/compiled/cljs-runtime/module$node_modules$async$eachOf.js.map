{
"version":3,
"file":"module$node_modules$async$eachOf.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAe,gCAAf,CAAqD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA4C7FC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAP,CAAWC,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAGrCG,QAASA,gBAAe,CAACC,IAAD,CAAOC,QAAP,CAAiBC,QAAjB,CAA2B,CAS/CC,QAASA,iBAAgB,CAACC,GAAD,CAAMC,KAAN,CAAa,CAC9BD,GAAJ,CACIF,QAAA,CAASE,GAAT,CADJ,EAEW,EAAEE,SAFb,GAE2BC,MAF3B,EAEqCF,KAFrC,GAE+CG,WAF/C,CAE2DV,OAF3D,GAGII,QAAA,CAAS,IAAT,CAJ8B,CARtCA,QAAA,CAAW,CAAC,CAAA,CAAGO,MAAH,CAAUX,OAAX,EAAoBI,QAApB,EAAgCQ,MAAhC,CAAuCZ,OAAvC,CADoC,KAE3Ca,MAAQ,CAFmC,CAG3CL,UAAY,CAH+B,CAI3CC,OAASP,IAATO,CAAcA,MAalB,KAZe,CAYf,GAZIA,MAYJ,EAXIL,QAAA,CAAS,IAAT,CAWJ,CAAOS,KAAP,CAAeJ,MAAf,CAAuBI,KAAA,EAAvB,CACIV,QAAA,CAASD,IAAA,CAAKW,KAAL,CAAT;AAAsBA,KAAtB,CAA6B,CAAC,CAAA,CAAGC,UAAH,CAAcd,OAAf,EAAwBK,gBAAxB,CAA7B,CAlB2C,CA5CnDU,MAAA,CAAOC,cAAP,CAAsBpB,OAAtB,CAA+B,YAA/B,CAA6C,CACzCW,MAAO,CAAA,CADkC,CAA7C,CAIAX,QAAA,CAAQI,OAAR,CAAkBiB,QAAS,CAACf,IAAD,CAAOC,QAAP,CAAiBC,QAAjB,CAA2B,CAElD,CAD2B,CAAC,CAAA,CAAGc,aAAH,CAAiBlB,OAAlB,EAA2BE,IAA3B,CAAAiB,CAAmClB,eAAnCkB,CAAqDC,aAChF,EAAqBlB,IAArB,CAA2B,CAAC,CAAA,CAAGmB,WAAH,CAAerB,OAAhB,EAAyBG,QAAzB,CAA3B,CAA+DC,QAA/D,CAFkD,CAKlDkB,OAAAA,CAAe5B,OAAA,CAAQ,wCAAR,CAEnB,KAAIwB,cAAgBrB,sBAAA,CAAuByB,MAAvB,CAEhBC,OAAAA,CAAa7B,OAAA,CAAQ,8CAAR,CAEjB,KAAIgB,YAAcb,sBAAA,CAAuB0B,MAAvB,CAEdC,OAAAA,CAAe9B,OAAA,CAAQ,uCAAR,CAEf+B;MAAAA,CAAgB5B,sBAAA,CAAuB2B,MAAvB,CAEpB,KAAIE,SAAWhC,OAAA,CAAQ,4CAAR,CAEXiC,SAAAA,CAAY9B,sBAAA,CAAuB6B,QAAvB,CAEhB,KAAIE,MAAQlC,OAAA,CAAQ,iCAAR,CAAZ,CAEIkB,OAASf,sBAAA,CAAuB+B,KAAvB,CAETC,MAAAA,CAAQnC,OAAA,CAAQ,yCAAR,CAEZ,KAAIiB,OAASd,sBAAA,CAAuBgC,KAAvB,CAETC,MAAAA,CAAYpC,OAAA,CAAQ,6CAAR,CAEhB,KAAIoB,WAAajB,sBAAA,CAAuBiC,KAAvB,CAEbC,QAAAA,CAAarC,OAAA,CAAQ,8CAAR,CAEjB;IAAI2B,YAAcxB,sBAAA,CAAuBkC,OAAvB,CAAlB,CA4BIX,cAAgB,CAAC,CAAA,CAAGO,QAAH,CAAa3B,OAAd,EAAuByB,MAAvB,CAAqCzB,OAArC,CAA8CgC,QAA9C,CAyCpBrC,OAAA,CAAOC,OAAP,CAAiBA,OAAA,CAAQ,SAAR,CA/G4E;",
"sources":["node_modules/async/eachOf.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$async$eachOf\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (coll, iteratee, callback) {\n    var eachOfImplementation = (0, _isArrayLike2.default)(coll) ? eachOfArrayLike : eachOfGeneric;\n    eachOfImplementation(coll, (0, _wrapAsync2.default)(iteratee), callback);\n};\n\nvar _isArrayLike = require('lodash/isArrayLike');\n\nvar _isArrayLike2 = _interopRequireDefault(_isArrayLike);\n\nvar _breakLoop = require('./internal/breakLoop');\n\nvar _breakLoop2 = _interopRequireDefault(_breakLoop);\n\nvar _eachOfLimit = require('./eachOfLimit');\n\nvar _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);\n\nvar _doLimit = require('./internal/doLimit');\n\nvar _doLimit2 = _interopRequireDefault(_doLimit);\n\nvar _noop = require('lodash/noop');\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nvar _once = require('./internal/once');\n\nvar _once2 = _interopRequireDefault(_once);\n\nvar _onlyOnce = require('./internal/onlyOnce');\n\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = (0, _once2.default)(callback || _noop2.default);\n    var index = 0,\n        completed = 0,\n        length = coll.length;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err) {\n            callback(err);\n        } else if (++completed === length || value === _breakLoop2.default) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, (0, _onlyOnce2.default)(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nvar eachOfGeneric = (0, _doLimit2.default)(_eachOfLimit2.default, Infinity);\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nmodule.exports = exports['default'];\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","eachOfArrayLike","coll","iteratee","callback","iteratorCallback","err","value","completed","length","_breakLoop2","_once2","_noop2","index","_onlyOnce2","Object","defineProperty","exports.default","_isArrayLike2","eachOfImplementation","eachOfGeneric","_wrapAsync2","_isArrayLike","_breakLoop","_eachOfLimit","_eachOfLimit2","_doLimit","_doLimit2","_noop","_once","_onlyOnce","_wrapAsync","Infinity"]
}
