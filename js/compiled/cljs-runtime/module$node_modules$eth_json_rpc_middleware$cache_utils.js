shadow$provide.module$node_modules$eth_json_rpc_middleware$cache_utils=function(global,require,module,exports){function canCache(payload){return"never"!==cacheTypeForPayload(payload)}function paramsWithoutBlockTag(payload){const index=blockTagParamIndex(payload);return index>=payload.params.length?payload.params:"eth_getBlockByNumber"===payload.method?payload.params.slice(1):payload.params.slice(0,index)}function blockTagParamIndex(payload){switch(payload.method){case "eth_getStorageAt":return 2;
case "eth_getBalance":case "eth_getCode":case "eth_getTransactionCount":case "eth_call":return 1;case "eth_getBlockByNumber":return 0}}function cacheTypeForPayload(payload){switch(payload.method){case "web3_clientVersion":case "web3_sha3":case "eth_protocolVersion":case "eth_getBlockTransactionCountByHash":case "eth_getUncleCountByBlockHash":case "eth_getCode":case "eth_getBlockByHash":case "eth_getTransactionByHash":case "eth_getTransactionByBlockHashAndIndex":case "eth_getTransactionReceipt":case "eth_getUncleByBlockHashAndIndex":case "eth_getCompilers":case "eth_compileLLL":case "eth_compileSolidity":case "eth_compileSerpent":case "shh_version":case "test_permaCache":return"perma";
case "eth_getBlockByNumber":case "eth_getBlockTransactionCountByNumber":case "eth_getUncleCountByBlockNumber":case "eth_getTransactionByBlockNumberAndIndex":case "eth_getUncleByBlockNumberAndIndex":case "test_forkCache":return"fork";case "eth_gasPrice":case "eth_blockNumber":case "eth_getBalance":case "eth_getStorageAt":case "eth_getTransactionCount":case "eth_call":case "eth_estimateGas":case "eth_getFilterLogs":case "eth_getLogs":case "test_blockCache":return"block";case "net_version":case "net_peerCount":case "net_listening":case "eth_syncing":case "eth_sign":case "eth_coinbase":case "eth_mining":case "eth_hashrate":case "eth_accounts":case "eth_sendTransaction":case "eth_sendRawTransaction":case "eth_newFilter":case "eth_newBlockFilter":case "eth_newPendingTransactionFilter":case "eth_uninstallFilter":case "eth_getFilterChanges":case "eth_getWork":case "eth_submitWork":case "eth_submitHashrate":case "db_putString":case "db_getString":case "db_putHex":case "db_getHex":case "shh_post":case "shh_newIdentity":case "shh_hasIdentity":case "shh_newGroup":case "shh_addToGroup":case "shh_newFilter":case "shh_uninstallFilter":case "shh_getFilterChanges":case "shh_getMessages":case "test_neverCache":return"never"}}
const stringify=require("module$node_modules$json_stable_stringify$index");module.exports={cacheIdentifierForPayload:function(payload,skipBlockRef){skipBlockRef=skipBlockRef?paramsWithoutBlockTag(payload):payload.params;return canCache(payload)?payload.method+":"+stringify(skipBlockRef):null},canCache,blockTagForPayload:function(payload){let index=blockTagParamIndex(payload);return index>=payload.params.length?null:payload.params[index]},paramsWithoutBlockTag,blockTagParamIndex,cacheTypeForPayload}}
//# sourceMappingURL=module$node_modules$eth_json_rpc_middleware$cache_utils.js.map
