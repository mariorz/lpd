{"version":3,"sources":["revert/charts.cljs"],"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","names":["revert.charts/hover-layer","y-field","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","revert.charts/bar-layer","p__57595","map__57596","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","seq57592","G__57593","cljs.core/first","cljs.core/next","G__57594","self__4723__auto__","y-title","show-labels","y-min","y-max","decimals","cljs.core.concat","and__4115__auto__","revert.charts/line-layer","p__57601","map__57602","seq57598","G__57599","G__57600","revert.charts/make-line-plot-concat","pool-hist","line-points","revert.charts.line_layer"],"sourcesContent":["(ns revert.charts\n  (:require\n   [oz.core :as oz]\n   [react-sparklines :as sparklines]))\n\n\n(defn hover-layer\n  [y-field]\n  [{:transform [{:filter {:and [\"index.timestamp\",\n                                {:selection \"index\"}]}}]\n    :mark {:type \"text\" :color \"white\"}\n\n    :encoding {:y {:value 15}\n               :x {:field :timestamp\n                   :type \"temporal\"}\n               :text {:field y-field\n                      :type \"quantitative\"\n                      :format \",.2f\"}}}\n   {:transform [{:filter\n                 {:and [\"index.timestamp\", {:selection \"index\"}]}}]\n    :mark {:type \"rule\" :color \"green\"}\n    :encoding {:x {:field :timestamp,\n                   :type \"temporal\"}\n               :opacity {:value 0.5}}}\n   {:selection {:index {:type \"single\",\n                        :on \"mousemove\",\n                        :encodings [\"x\"],\n                        :clear \"mouseout\"\n                        :nearest true}}\n    :width 900\n    :height 75\n    :mark {:type \"point\"}\n    :encoding {:x  {:field :timestamp,\n                    :type \"temporal\"}\n               :y {:value 15},\n               :opacity {:value 0.0}}}])\n\n\n(defn bar-layer\n  [y-field y-title & {:keys [show-labels y-min y-max decimals]\n                      :or {show-labels false y-min false y-max false decimals false}}]\n  {:width 900\n   :height 75\n   :title {:text y-title\n           :align \"left\"\n           :anchor \"middle\"\n           :font \"monospace\"\n           :dx -450\n           :fontWeight 800\n           ;;:fontSize 12\n           :orient \"top\"\n           :color \"#E8F9EE\"}\n   :layer (concat\n           [{:encoding {:x {:field :timestamp\n                            :type \"ordinal\"\n                            :title nil\n                            :axis {:labels show-labels\n                                   :format \"\"}}\n                        :y {:field y-field\n                            :title nil\n                            :titleFontSize 20\n                            :scale (if (and y-min y-max)\n                                     {:domain [y-min,y-max]}\n                                     {})\n                            ;;:scale {:domain [0, 100]}\n                            :axis {;;:labelAlign \"right\"\n                                   :orient \"right\"\n                                   :labelFont \"monospace\"\n                                   :labelColor \"#E8F9EE\"\n                                   ;;:labelExpr \"datum.label\"\n                                   :format (if decimals\n                                             \",.2f\" \",.0f\")\n                                   }\n\n                            :type \"quantitative\"}}\n             :mark {:type \"bar\" :color \"#485256\"}}]\n           (hover-layer y-field))})\n\n\n(defn line-layer\n  [y-field y-title & {:keys [show-labels y-min y-max decimals]\n                      :or {show-labels false y-min false y-max false decimals false}}]\n  {:width 900\n   :height 75\n   :title {:text y-title\n           :align \"left\"\n           :anchor \"middle\"\n           :font \"monospace\"\n           :dx -450\n           :fontWeight 800\n           ;;:fontSize 12\n           :orient \"top\"\n           :color \"#E8F9EE\"}\n   :layer (concat\n           [{:encoding {:x {:field :timestamp\n                            :type \"temporal\"\n                            :title nil\n                            ;;:scale {:nice false}\n                            :axis {:labels show-labels\n                                   :format \"\"}}\n                        :y {:field y-field\n                            :title nil\n                            :titleFontSize 20\n                            :scale (if (and y-min y-max)\n                                     {:domain [y-min,y-max]}\n                                     {})\n                            ;;:scale {:domain [0, 100]}\n                            :axis {;;:labelAlign \"right\"\n                                   :orient \"right\"\n                                   :labelFont \"monospace\"\n                                   :labelColor \"#E8F9EE\"\n                                   ;;:labelExpr \"datum.label\"\n                                   :format (if decimals\n                                             \",.2f\" \",.0f\")\n                                   }\n\n                            :type \"quantitative\"}}\n             :mark {:type \"line\" :color \"#485256\"}}\n            {:encoding {:x {:field :timestamp\n                            :type \"temporal\"\n                            :title nil}\n                        :y {:field y-field\n                            :title nil\n                            :titleFontSize 20\n                            :scale (if (and y-min y-max)\n                                     {:domain [y-min,y-max]}\n                                     {})\n                            ;;:scale {:domain [0, 100]}\n                            :axis {;;:labelAlign \"right\"\n                                   :orient \"right\"\n                                   :labelFont \"monospace\"\n                                   :labelColor \"#E8F9EE\"\n                                   ;;:labelExpr \"datum.label\"\n                                   :format (if decimals\n                                             \",.2f\" \",.0f\")\n                                   }\n\n                            :type \"quantitative\"}}\n             :mark {:type \"area\" :color \"#182429\"}}]\n           (hover-layer y-field))})\n\n\n(defn make-line-plot-concat\n  [pool-hist]\n  (let [line-points pool-hist]\n    {:data {:values line-points}\n     :config {:background \"#031116\"\n              :concat {:spacing 2}\n              :style {:cell {:stroke \"transparent\"}}\n              :axis {:tickColor \"#111\"\n                     ;;:ticks nil\n                     :gridColor \"#657b83\"\n                     :gridOpacity 0.25\n                     :labelColor \"#657b83\"\n                     :titleColor \"#657b83\"}}\n     :resolve {:scale {:y \"independent\"}}\n     :encoding {:x {:field :timestamp, :type \"temporal\"}}\n     :vconcat [(bar-layer :volume-usd-derived \"Volumes (USD)\")\n               (line-layer :reserve-usd \"Reserves (USD)\")\n               (line-layer :vol-res-ratio \"Ratio V / R\" :decimals true)\n               (line-layer :token0-price (str (:token0-symbol (first line-points)) \" Price\"))\n               (line-layer :token1-price (str (:token1-symbol (first line-points)) \" Price\"))\n               (line-layer :price-divergence \"Price Divergence %\")\n               (line-layer :usd-diff \"PnL vs HODL %\" :show-labels true)]}))\n\n"]}