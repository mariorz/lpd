{
"version":3,
"file":"module$node_modules$web3_provider_engine$subproviders$hooked_wallet.js",
"lineCount":30,
"mappings":"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",
"sources":["node_modules/web3-provider-engine/subproviders/hooked-wallet.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_provider_engine$subproviders$hooked_wallet\"] = function(global,require,module,exports) {\n/*\n * Emulate 'eth_accounts' / 'eth_sendTransaction' using 'eth_sendRawTransaction'\n *\n * The two callbacks a user needs to implement are:\n * - getAccounts() -- array of addresses supported\n * - signTransaction(tx) -- sign a raw transaction object\n */\n\nconst waterfall = require('async/waterfall')\nconst parallel = require('async/parallel')\nconst inherits = require('util').inherits\nconst ethUtil = require('ethereumjs-util')\nconst sigUtil = require('eth-sig-util')\nconst extend = require('xtend')\nconst Semaphore = require('semaphore')\nconst Subprovider = require('./subprovider.js')\nconst estimateGas = require('../util/estimate-gas.js')\nconst hexRegex = /^[0-9A-Fa-f]+$/g\n\nmodule.exports = HookedWalletSubprovider\n\n// handles the following RPC methods:\n//   eth_coinbase\n//   eth_accounts\n//   eth_sendTransaction\n//   eth_sign\n//   eth_signTypedData\n//   eth_signTypedData_v3\n//   eth_signTypedData_v4\n//   personal_sign\n//   eth_decryptMessage\n//   encryption_public_key\n//   personal_ecRecover\n//   parity_postTransaction\n//   parity_checkRequest\n//   parity_defaultAccount\n\n//\n// Tx Signature Flow\n//\n// handleRequest: eth_sendTransaction\n//   validateTransaction (basic validity check)\n//     validateSender (checks that sender is in accounts)\n//   processTransaction (sign tx and submit to network)\n//     approveTransaction (UI approval hook)\n//     checkApproval\n//     finalizeAndSubmitTx (tx signing)\n//       nonceLock.take (bottle neck to ensure atomic nonce)\n//         fillInTxExtras (set fallback gasPrice, nonce, etc)\n//         signTransaction (perform the signature)\n//         publishTransaction (publish signed tx to network)\n//\n\n\ninherits(HookedWalletSubprovider, Subprovider)\n\nfunction HookedWalletSubprovider(opts){\n  const self = this\n  // control flow\n  self.nonceLock = Semaphore(1)\n\n  // data lookup\n  if (opts.getAccounts) self.getAccounts = opts.getAccounts\n  // high level override\n  if (opts.processTransaction) self.processTransaction = opts.processTransaction\n  if (opts.processMessage) self.processMessage = opts.processMessage\n  if (opts.processPersonalMessage) self.processPersonalMessage = opts.processPersonalMessage\n  if (opts.processTypedMessage) self.processTypedMessage = opts.processTypedMessage\n  // approval hooks\n  self.approveTransaction = opts.approveTransaction || self.autoApprove\n  self.approveMessage = opts.approveMessage || self.autoApprove\n  self.approvePersonalMessage = opts.approvePersonalMessage || self.autoApprove\n  self.approveDecryptMessage = opts.approveDecryptMessage || self.autoApprove\n  self.approveEncryptionPublicKey = opts.approveEncryptionPublicKey || self.autoApprove\n  self.approveTypedMessage = opts.approveTypedMessage || self.autoApprove\n  // actually perform the signature\n  if (opts.signTransaction) self.signTransaction = opts.signTransaction  || mustProvideInConstructor('signTransaction')\n  if (opts.signMessage) self.signMessage = opts.signMessage  || mustProvideInConstructor('signMessage')\n  if (opts.signPersonalMessage) self.signPersonalMessage = opts.signPersonalMessage  || mustProvideInConstructor('signPersonalMessage')\n  if (opts.decryptMessage) self.decryptMessage = opts.decryptMessage  || mustProvideInConstructor('decryptMessage')\n  if (opts.encryptionPublicKey) self.encryptionPublicKey = opts.encryptionPublicKey  || mustProvideInConstructor('encryptionPublicKey')\n  if (opts.signTypedMessage) self.signTypedMessage = opts.signTypedMessage  || mustProvideInConstructor('signTypedMessage')\n  if (opts.recoverPersonalSignature) self.recoverPersonalSignature = opts.recoverPersonalSignature\n  // publish to network\n  if (opts.publishTransaction) self.publishTransaction = opts.publishTransaction\n  // gas options\n  self.estimateGas = opts.estimateGas || self.estimateGas\n  self.getGasPrice = opts.getGasPrice || self.getGasPrice\n}\n\nHookedWalletSubprovider.prototype.handleRequest = function(payload, next, end){\n  const self = this\n  self._parityRequests = {}\n  self._parityRequestCount = 0\n\n  // switch statement is not block scoped\n  // sp we cant repeat var declarations\n  let txParams, msgParams, extraParams\n  let message, address\n\n  switch(payload.method) {\n\n    case 'eth_coinbase':\n      // process normally\n      self.getAccounts(function(err, accounts){\n        if (err) return end(err)\n        let result = accounts[0] || null\n        end(null, result)\n      })\n      return\n\n    case 'eth_accounts':\n      // process normally\n      self.getAccounts(function(err, accounts){\n        if (err) return end(err)\n        end(null, accounts)\n      })\n      return\n\n    case 'eth_sendTransaction':\n      txParams = payload.params[0]\n      waterfall([\n        (cb) => self.validateTransaction(txParams, cb),\n        (cb) => self.processTransaction(txParams, cb),\n      ], end)\n      return\n\n    case 'eth_signTransaction':\n      txParams = payload.params[0]\n      waterfall([\n        (cb) => self.validateTransaction(txParams, cb),\n        (cb) => self.processSignTransaction(txParams, cb),\n      ], end)\n      return\n\n    case 'eth_sign':\n      // process normally\n      address = payload.params[0]\n      message = payload.params[1]\n      // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n      // good place for metadata\n      extraParams = payload.params[2] || {}\n      msgParams = extend(extraParams, {\n        from: address,\n        data: message,\n      })\n      waterfall([\n        (cb) => self.validateMessage(msgParams, cb),\n        (cb) => self.processMessage(msgParams, cb),\n      ], end)\n      return\n\n    case 'personal_sign':\n      return (function(){\n        // process normally\n        const first = payload.params[0]\n        const second = payload.params[1]\n\n        // We initially incorrectly ordered these parameters.\n        // To gracefully respect users who adopted this API early,\n        // we are currently gracefully recovering from the wrong param order\n        // when it is clearly identifiable.\n        //\n        // That means when the first param is definitely an address,\n        // and the second param is definitely not, but is hex.\n        if (resemblesData(second) && resemblesAddress(first)) {\n          let warning = `The eth_personalSign method requires params ordered `\n          warning += `[message, address]. This was previously handled incorrectly, `\n          warning += `and has been corrected automatically. `\n          warning += `Please switch this param order for smooth behavior in the future.`\n          console.warn(warning)\n\n          address = payload.params[0]\n          message = payload.params[1]\n        } else {\n          message = payload.params[0]\n          address = payload.params[1]\n        }\n\n        // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n        // good place for metadata\n        extraParams = payload.params[2] || {}\n        msgParams = extend(extraParams, {\n          from: address,\n          data: message,\n        })\n        waterfall([\n          (cb) => self.validatePersonalMessage(msgParams, cb),\n          (cb) => self.processPersonalMessage(msgParams, cb),\n        ], end)\n      })()\n\n    case 'eth_decryptMessage':\n      return (function(){\n        // process normally\n        const first = payload.params[0]\n        const second = payload.params[1]\n\n        // We initially incorrectly ordered these parameters.\n        // To gracefully respect users who adopted this API early,\n        // we are currently gracefully recovering from the wrong param order\n        // when it is clearly identifiable.\n        //\n        // That means when the first param is definitely an address,\n        // and the second param is definitely not, but is hex.\n        if (resemblesData(second) && resemblesAddress(first)) {\n          let warning = `The eth_decryptMessage method requires params ordered `\n          warning += `[message, address]. This was previously handled incorrectly, `\n          warning += `and has been corrected automatically. `\n          warning += `Please switch this param order for smooth behavior in the future.`\n          console.warn(warning)\n\n          address = payload.params[0]\n          message = payload.params[1]\n        } else {\n          message = payload.params[0]\n          address = payload.params[1]\n        }\n\n        // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n        // good place for metadata\n        extraParams = payload.params[2] || {}\n        msgParams = extend(extraParams, {\n          from: address,\n          data: message,\n        })\n        waterfall([\n          (cb) => self.validateDecryptMessage(msgParams, cb),\n          (cb) => self.processDecryptMessage(msgParams, cb),\n        ], end)\n      })()\n      \n    case 'encryption_public_key':\n      return (function(){\n        const address = payload.params[0]\n        \n        waterfall([\n          (cb) => self.validateEncryptionPublicKey(address, cb),\n          (cb) => self.processEncryptionPublicKey(address, cb),\n        ], end)\n      })()\n      \n    case 'personal_ecRecover':\n      return (function(){    \n        message = payload.params[0]\n        let signature = payload.params[1]\n        // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n        // good place for metadata\n        extraParams = payload.params[2] || {}\n        msgParams = extend(extraParams, {\n          sig: signature,\n          data: message,\n        })\n        self.recoverPersonalSignature(msgParams, end)\n      })()\n\n    case 'eth_signTypedData':\n    case 'eth_signTypedData_v3':\n    case 'eth_signTypedData_v4':\n      return (function(){ \n        // process normally\n      \n        const first = payload.params[0]\n        const second = payload.params[1]\n\n        if (resemblesAddress(first)) {\n          address = first\n          message = second\n        } else {\n          message = first\n          address = second\n        }\n\n        extraParams = payload.params[2] || {}\n        msgParams = extend(extraParams, {\n          from: address,\n          data: message,\n        })\n        waterfall([\n          (cb) => self.validateTypedMessage(msgParams, cb),\n          (cb) => self.processTypedMessage(msgParams, cb),\n        ], end)\n      })()\n\n    case 'parity_postTransaction':\n      txParams = payload.params[0]\n      self.parityPostTransaction(txParams, end)\n      return\n\n    case 'parity_postSign':\n      address = payload.params[0]\n      message = payload.params[1]\n      self.parityPostSign(address, message, end)\n      return\n\n    case 'parity_checkRequest':\n      return (function(){\n        const requestId = payload.params[0]\n        self.parityCheckRequest(requestId, end)\n      })()\n\n    case 'parity_defaultAccount':\n      self.getAccounts(function(err, accounts){\n        if (err) return end(err)\n        const account = accounts[0] || null\n        end(null, account)\n      })\n      return\n\n    default:\n      next()\n      return\n\n  }\n}\n\n//\n// data lookup\n//\n\nHookedWalletSubprovider.prototype.getAccounts = function(cb) {\n  cb(null, [])\n}\n\n\n//\n// \"process\" high level flow\n//\n\nHookedWalletSubprovider.prototype.processTransaction = function(txParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveTransaction(txParams, cb),\n    (didApprove, cb) => self.checkApproval('transaction', didApprove, cb),\n    (cb) => self.finalizeAndSubmitTx(txParams, cb),\n  ], cb)\n}\n\n\nHookedWalletSubprovider.prototype.processSignTransaction = function(txParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveTransaction(txParams, cb),\n    (didApprove, cb) => self.checkApproval('transaction', didApprove, cb),\n    (cb) => self.finalizeTx(txParams, cb),\n  ], cb)\n}\n\nHookedWalletSubprovider.prototype.processMessage = function(msgParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveMessage(msgParams, cb),\n    (didApprove, cb) => self.checkApproval('message', didApprove, cb),\n    (cb) => self.signMessage(msgParams, cb),\n  ], cb)\n}\n\nHookedWalletSubprovider.prototype.processPersonalMessage = function(msgParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approvePersonalMessage(msgParams, cb),\n    (didApprove, cb) => self.checkApproval('message', didApprove, cb),\n    (cb) => self.signPersonalMessage(msgParams, cb),\n  ], cb)\n}\n\nHookedWalletSubprovider.prototype.processDecryptMessage = function(msgParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveDecryptMessage(msgParams, cb),\n    (didApprove, cb) => self.checkApproval('decryptMessage', didApprove, cb),\n    (cb) => self.decryptMessage(msgParams, cb),\n  ], cb)\n}\n\nHookedWalletSubprovider.prototype.processEncryptionPublicKey = function(msgParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveEncryptionPublicKey(msgParams, cb),\n    (didApprove, cb) => self.checkApproval('encryptionPublicKey', didApprove, cb),\n    (cb) => self.encryptionPublicKey(msgParams, cb),\n  ], cb)\n}\n\nHookedWalletSubprovider.prototype.processTypedMessage = function(msgParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveTypedMessage(msgParams, cb),\n    (didApprove, cb) => self.checkApproval('message', didApprove, cb),\n    (cb) => self.signTypedMessage(msgParams, cb),\n  ], cb)\n}\n\n//\n// approval\n//\n\nHookedWalletSubprovider.prototype.autoApprove = function(txParams, cb) {\n  cb(null, true)\n}\n\nHookedWalletSubprovider.prototype.checkApproval = function(type, didApprove, cb) {\n  cb( didApprove ? null : new Error('User denied '+type+' signature.') )\n}\n\n//\n// parity\n//\n\nHookedWalletSubprovider.prototype.parityPostTransaction = function(txParams, cb) {\n  const self = this\n\n  // get next id\n  const count = self._parityRequestCount\n  const reqId = `0x${count.toString(16)}`\n  self._parityRequestCount++\n\n  self.emitPayload({\n    method: 'eth_sendTransaction',\n    params: [txParams],\n  }, function(error, res){\n    if (error) {\n      self._parityRequests[reqId] = { error }\n      return\n    }\n    const txHash = res.result\n    self._parityRequests[reqId] = txHash\n  })\n\n  cb(null, reqId)\n}\n\n\nHookedWalletSubprovider.prototype.parityPostSign = function(address, message, cb) {\n  const self = this\n\n  // get next id\n  const count = self._parityRequestCount\n  const reqId = `0x${count.toString(16)}`\n  self._parityRequestCount++\n\n  self.emitPayload({\n    method: 'eth_sign',\n    params: [address, message],\n  }, function(error, res){\n    if (error) {\n      self._parityRequests[reqId] = { error }\n      return\n    }\n    const result = res.result\n    self._parityRequests[reqId] = result\n  })\n\n  cb(null, reqId)\n}\n\nHookedWalletSubprovider.prototype.parityCheckRequest = function(reqId, cb) {\n  const self = this\n  const result = self._parityRequests[reqId] || null\n  // tx not handled yet\n  if (!result) return cb(null, null)\n  // tx was rejected (or other error)\n  if (result.error) return cb(result.error)\n  // tx sent\n  cb(null, result)\n}\n\n//\n// signature and recovery\n//\n\nHookedWalletSubprovider.prototype.recoverPersonalSignature = function(msgParams, cb) {\n  let senderHex\n  try {\n    senderHex = sigUtil.recoverPersonalSignature(msgParams)\n  } catch (err) {\n    return cb(err)\n  }\n  cb(null, senderHex)\n}\n\n//\n// validation\n//\n\nHookedWalletSubprovider.prototype.validateTransaction = function(txParams, cb){\n  const self = this\n  // shortcut: undefined sender is invalid\n  if (txParams.from === undefined) return cb(new Error(`Undefined address - from address required to sign transaction.`))\n  self.validateSender(txParams.from, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to sign transaction for this address: \"${txParams.from}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validateMessage = function(msgParams, cb){\n  const self = this\n  if (msgParams.from === undefined) return cb(new Error(`Undefined address - from address required to sign message.`))\n  self.validateSender(msgParams.from, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to sign message for this address: \"${msgParams.from}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validatePersonalMessage = function(msgParams, cb){\n  const self = this\n  if (msgParams.from === undefined) return cb(new Error(`Undefined address - from address required to sign personal message.`))\n  if (msgParams.data === undefined) return cb(new Error(`Undefined message - message required to sign personal message.`))\n  if (!isValidHex(msgParams.data)) return cb(new Error(`HookedWalletSubprovider - validateMessage - message was not encoded as hex.`))\n  self.validateSender(msgParams.from, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to sign message for this address: \"${msgParams.from}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validateDecryptMessage = function(msgParams, cb){\n  const self = this\n  if (msgParams.from === undefined) return cb(new Error(`Undefined address - from address required to decrypt message.`))\n  if (msgParams.data === undefined) return cb(new Error(`Undefined message - message required to decrypt message.`))\n  if (!isValidHex(msgParams.data)) return cb(new Error(`HookedWalletSubprovider - validateDecryptMessage - message was not encoded as hex.`))\n  self.validateSender(msgParams.from, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to decrypt message for this address: \"${msgParams.from}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validateEncryptionPublicKey = function(address, cb){\n  const self = this\n\n  self.validateSender(address, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to obtain encryption public key for this address: \"${address}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validateTypedMessage = function(msgParams, cb){\n  if (msgParams.from === undefined) return cb(new Error(`Undefined address - from address required to sign typed data.`))\n  if (msgParams.data === undefined) return cb(new Error(`Undefined data - message required to sign typed data.`))\n  this.validateSender(msgParams.from, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to sign message for this address: \"${msgParams.from}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validateSender = function(senderAddress, cb){\n  const self = this\n  // shortcut: undefined sender is invalid\n  if (!senderAddress) return cb(null, false)\n  self.getAccounts(function(err, accounts){\n    if (err) return cb(err)\n    const senderIsValid = (accounts.map(toLowerCase).indexOf(senderAddress.toLowerCase()) !== -1)\n    cb(null, senderIsValid)\n  })\n}\n\n//\n// tx helpers\n//\n\nHookedWalletSubprovider.prototype.finalizeAndSubmitTx = function(txParams, cb) {\n  const self = this\n  // can only allow one tx to pass through this flow at a time\n  // so we can atomically consume a nonce\n  self.nonceLock.take(function(){\n    waterfall([\n      self.fillInTxExtras.bind(self, txParams),\n      self.signTransaction.bind(self),\n      self.publishTransaction.bind(self),\n    ], function(err, txHash){\n      self.nonceLock.leave()\n      if (err) return cb(err)\n      cb(null, txHash)\n    })\n  })\n}\n\nHookedWalletSubprovider.prototype.finalizeTx = function(txParams, cb) {\n  const self = this\n  // can only allow one tx to pass through this flow at a time\n  // so we can atomically consume a nonce\n  self.nonceLock.take(function(){\n    waterfall([\n      self.fillInTxExtras.bind(self, txParams),\n      self.signTransaction.bind(self),\n    ], function(err, signedTx){\n      self.nonceLock.leave()\n      if (err) return cb(err)\n      cb(null, {raw: signedTx, tx: txParams})\n    })\n  })\n}\n\nHookedWalletSubprovider.prototype.publishTransaction = function(rawTx, cb) {\n  const self = this\n  self.emitPayload({\n    method: 'eth_sendRawTransaction',\n    params: [rawTx],\n  }, function(err, res){\n    if (err) return cb(err)\n    cb(null, res.result)\n  })\n}\n\nHookedWalletSubprovider.prototype.estimateGas = function(txParams, cb) {\n  const self = this\n  estimateGas(self.engine, txParams, cb)\n}\n\nHookedWalletSubprovider.prototype.getGasPrice = function(cb) {\n  const self = this\n  self.emitPayload({ method: 'eth_gasPrice', params: [] }, function (err, res) {\n    if (err) return cb(err)\n    cb(null, res.result)\n  })\n}\n\nHookedWalletSubprovider.prototype.fillInTxExtras = function(txParams, cb){\n  const self = this\n  const address = txParams.from\n  // console.log('fillInTxExtras - address:', address)\n\n  const tasks = {}\n\n  if (txParams.gasPrice === undefined) {\n    // console.log(\"need to get gasprice\")\n    tasks.gasPrice = self.getGasPrice.bind(self)\n  }\n\n  if (txParams.nonce === undefined) {\n    // console.log(\"need to get nonce\")\n    tasks.nonce = self.emitPayload.bind(self, { method: 'eth_getTransactionCount', params: [address, 'pending'] })\n  }\n\n  if (txParams.gas === undefined) {\n    // console.log(\"need to get gas\")\n    tasks.gas = self.estimateGas.bind(self, cloneTxParams(txParams))\n  }\n\n  parallel(tasks, function(err, taskResults) {\n    if (err) return cb(err)\n\n    const result = {}\n    if (taskResults.gasPrice) result.gasPrice = taskResults.gasPrice\n    if (taskResults.nonce) result.nonce = taskResults.nonce.result\n    if (taskResults.gas) result.gas = taskResults.gas\n\n    cb(null, extend(txParams, result))\n  })\n}\n\n// util\n\n// we use this to clean any custom params from the txParams\nfunction cloneTxParams(txParams){\n  return {\n    from: txParams.from,\n    to: txParams.to,\n    value: txParams.value,\n    data: txParams.data,\n    gas: txParams.gas,\n    gasPrice: txParams.gasPrice,\n    nonce: txParams.nonce,\n  }\n}\n\nfunction toLowerCase(string){\n  return string.toLowerCase()\n}\n\nfunction resemblesAddress (string) {\n  const fixed = ethUtil.addHexPrefix(string)\n  const isValid = ethUtil.isValidAddress(fixed)\n  return isValid\n}\n\n// Returns true if resembles hex data\n// but definitely not a valid address.\nfunction resemblesData (string) {\n  const fixed = ethUtil.addHexPrefix(string)\n  const isValidAddress = ethUtil.isValidAddress(fixed)\n  return !isValidAddress && isValidHex(string)\n}\n\nfunction isValidHex(data) {\n  const isString = typeof data === 'string'\n  if (!isString) return false\n  const isHexPrefixed = data.slice(0,2) === '0x'\n  if (!isHexPrefixed) return false\n  const nonPrefixed = data.slice(2)\n  const isValid = nonPrefixed.match(hexRegex)\n  return isValid\n}\n\nfunction mustProvideInConstructor(methodName) {\n  return function(params, cb) {\n    cb(new Error('ProviderEngine - HookedWalletSubprovider - Must provide \"' + methodName + '\" fn in constructor options'))\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","HookedWalletSubprovider","opts","self","nonceLock","Semaphore","getAccounts","processTransaction","processMessage","processPersonalMessage","processTypedMessage","approveTransaction","autoApprove","approveMessage","approvePersonalMessage","approveDecryptMessage","approveEncryptionPublicKey","approveTypedMessage","signTransaction","mustProvideInConstructor","signMessage","signPersonalMessage","decryptMessage","encryptionPublicKey","signTypedMessage","recoverPersonalSignature","publishTransaction","estimateGas","getGasPrice","toLowerCase","string","resemblesAddress","fixed","ethUtil","addHexPrefix","isValid","isValidAddress","resemblesData","isValidHex","data","slice","nonPrefixed","match","hexRegex","methodName","params","cb","Error","waterfall","parallel","inherits","sigUtil","extend","Subprovider","prototype","handleRequest","HookedWalletSubprovider.prototype.handleRequest","payload","next","end","_parityRequests","_parityRequestCount","txParams","msgParams","extraParams","message","address","method","err","accounts","validateTransaction","processSignTransaction","from","validateMessage","first","second","console","warn","warning","validatePersonalMessage","validateDecryptMessage","processDecryptMessage","validateEncryptionPublicKey","processEncryptionPublicKey","signature","sig","validateTypedMessage","parityPostTransaction","parityPostSign","parityCheckRequest","requestId","HookedWalletSubprovider.prototype.getAccounts","HookedWalletSubprovider.prototype.processTransaction","didApprove","checkApproval","finalizeAndSubmitTx","HookedWalletSubprovider.prototype.processSignTransaction","finalizeTx","HookedWalletSubprovider.prototype.processMessage","HookedWalletSubprovider.prototype.processPersonalMessage","HookedWalletSubprovider.prototype.processDecryptMessage","HookedWalletSubprovider.prototype.processEncryptionPublicKey","HookedWalletSubprovider.prototype.processTypedMessage","HookedWalletSubprovider.prototype.autoApprove","HookedWalletSubprovider.prototype.checkApproval","type","HookedWalletSubprovider.prototype.parityPostTransaction","reqId","toString","emitPayload","error","res","result","HookedWalletSubprovider.prototype.parityPostSign","HookedWalletSubprovider.prototype.parityCheckRequest","HookedWalletSubprovider.prototype.recoverPersonalSignature","senderHex","HookedWalletSubprovider.prototype.validateTransaction","undefined","validateSender","senderIsValid","HookedWalletSubprovider.prototype.validateMessage","HookedWalletSubprovider.prototype.validatePersonalMessage","HookedWalletSubprovider.prototype.validateDecryptMessage","HookedWalletSubprovider.prototype.validateEncryptionPublicKey","HookedWalletSubprovider.prototype.validateTypedMessage","HookedWalletSubprovider.prototype.validateSender","senderAddress","map","indexOf","HookedWalletSubprovider.prototype.finalizeAndSubmitTx","take","fillInTxExtras","bind","txHash","leave","HookedWalletSubprovider.prototype.finalizeTx","signedTx","raw","tx","HookedWalletSubprovider.prototype.publishTransaction","rawTx","HookedWalletSubprovider.prototype.estimateGas","engine","HookedWalletSubprovider.prototype.getGasPrice","HookedWalletSubprovider.prototype.fillInTxExtras","tasks","gasPrice","nonce","gas","to","value","taskResults"]
}
