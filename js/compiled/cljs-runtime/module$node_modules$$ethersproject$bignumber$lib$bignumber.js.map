{
"version":3,
"file":"module$node_modules$$ethersproject$bignumber$lib$bignumber.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/@ethersproject/bignumber/lib/bignumber.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$ethersproject$bignumber$lib$bignumber\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._base16To36 = exports._base36To16 = exports.BigNumber = exports.isBigNumberish = void 0;\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar BN = bn_js_1.default.BN;\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar _constructorGuard = {};\nvar MAX_SAFE = 0x1fffffffffffff;\nfunction isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        bytes_1.isHexString(value) ||\n        (typeof (value) === \"bigint\") ||\n        bytes_1.isBytes(value));\n}\nexports.isBigNumberish = isBigNumberish;\n// Only warn about passing 10 into radix once\nvar _warnedToStringRadix = false;\nvar BigNumber = /** @class */ (function () {\n    function BigNumber(constructorGuard, hex) {\n        var _newTarget = this.constructor;\n        logger.checkNew(_newTarget, BigNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    BigNumber.prototype.fromTwos = function (value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    };\n    BigNumber.prototype.toTwos = function (value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    };\n    BigNumber.prototype.abs = function () {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    };\n    BigNumber.prototype.add = function (other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    };\n    BigNumber.prototype.sub = function (other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    };\n    BigNumber.prototype.div = function (other) {\n        var o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division by zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    };\n    BigNumber.prototype.mul = function (other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    };\n    BigNumber.prototype.mod = function (other) {\n        var value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot modulo negative values\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    };\n    BigNumber.prototype.pow = function (other) {\n        var value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot raise to negative values\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    };\n    BigNumber.prototype.and = function (other) {\n        var value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'and' negative values\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    };\n    BigNumber.prototype.or = function (other) {\n        var value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'or' negative values\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    };\n    BigNumber.prototype.xor = function (other) {\n        var value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'xor' negative values\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    };\n    BigNumber.prototype.mask = function (value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot mask negative values\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    };\n    BigNumber.prototype.shl = function (value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    };\n    BigNumber.prototype.shr = function (value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    };\n    BigNumber.prototype.eq = function (other) {\n        return toBN(this).eq(toBN(other));\n    };\n    BigNumber.prototype.lt = function (other) {\n        return toBN(this).lt(toBN(other));\n    };\n    BigNumber.prototype.lte = function (other) {\n        return toBN(this).lte(toBN(other));\n    };\n    BigNumber.prototype.gt = function (other) {\n        return toBN(this).gt(toBN(other));\n    };\n    BigNumber.prototype.gte = function (other) {\n        return toBN(this).gte(toBN(other));\n    };\n    BigNumber.prototype.isNegative = function () {\n        return (this._hex[0] === \"-\");\n    };\n    BigNumber.prototype.isZero = function () {\n        return toBN(this).isZero();\n    };\n    BigNumber.prototype.toNumber = function () {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    };\n    BigNumber.prototype.toString = function () {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            }\n            else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", logger_1.Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n            else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", logger_1.Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n        }\n        return toBN(this).toString(10);\n    };\n    BigNumber.prototype.toHexString = function () {\n        return this._hex;\n    };\n    BigNumber.prototype.toJSON = function (key) {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    };\n    BigNumber.from = function (value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        var anyValue = value;\n        if (typeof (anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n        if (bytes_1.isBytes(anyValue)) {\n            return BigNumber.from(bytes_1.hexlify(anyValue));\n        }\n        if (anyValue) {\n            // Hexable interface (takes piority)\n            if (anyValue.toHexString) {\n                var hex = anyValue.toHexString();\n                if (typeof (hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n            }\n            else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                var hex = anyValue._hex;\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n                if (typeof (hex) === \"string\") {\n                    if (bytes_1.isHexString(hex) || (hex[0] === \"-\" && bytes_1.isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    };\n    BigNumber.isBigNumber = function (value) {\n        return !!(value && value._isBigNumber);\n    };\n    return BigNumber;\n}());\nexports.BigNumber = BigNumber;\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have mulitple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    var hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    var params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger.throwError(fault, logger_1.Logger.errors.NUMERIC_FAULT, params);\n}\n// value should have no prefix\nfunction _base36To16(value) {\n    return (new BN(value, 36)).toString(16);\n}\nexports._base36To16 = _base36To16;\n// value should have no prefix\nfunction _base16To36(value) {\n    return (new BN(value, 16)).toString(36);\n}\nexports._base16To36 = _base16To36;\n//# sourceMappingURL=bignumber.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","toHex","value","toString","substring","logger","throwArgumentError","length","toBigNumber","BigNumber","from","toBN","hex","toHexString","BN","throwFault","fault","operation","params","throwError","logger_1","Logger","errors","NUMERIC_FAULT","__importDefault","mod","__esModule","Object","defineProperty","_base16To36","_base36To16","isBigNumberish","bn_js_1","default","bytes_1","_version_1","version","_constructorGuard","isBigNumber","match","isHexString","isBytes","_warnedToStringRadix","constructorGuard","checkNew","constructor","UNSUPPORTED_OPERATION","_hex","_isBigNumber","freeze","prototype","fromTwos","BigNumber.prototype.fromTwos","toTwos","BigNumber.prototype.toTwos","abs","BigNumber.prototype.abs","add","BigNumber.prototype.add","other","sub","BigNumber.prototype.sub","div","BigNumber.prototype.div","o","isZero","mul","BigNumber.prototype.mul","BigNumber.prototype.mod","isNeg","umod","pow","BigNumber.prototype.pow","and","BigNumber.prototype.and","isNegative","or","BigNumber.prototype.or","xor","BigNumber.prototype.xor","mask","BigNumber.prototype.mask","maskn","shl","BigNumber.prototype.shl","shln","shr","BigNumber.prototype.shr","shrn","eq","BigNumber.prototype.eq","lt","BigNumber.prototype.lt","lte","BigNumber.prototype.lte","gt","BigNumber.prototype.gt","gte","BigNumber.prototype.gte","BigNumber.prototype.isNegative","BigNumber.prototype.isZero","toNumber","BigNumber.prototype.toNumber","error","BigNumber.prototype.toString","arguments","warn","UNEXPECTED_ARGUMENT","BigNumber.prototype.toHexString","toJSON","BigNumber.prototype.toJSON","key","type","BigNumber.from","MAX_SAFE","String","hexlify","BigNumber.isBigNumber"]
}
