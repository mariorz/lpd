{
"version":3,
"file":"module$node_modules$$ethersproject$networks$lib$index.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/@ethersproject/networks/lib/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$ethersproject$networks$lib$index\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNetwork = void 0;\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\n;\nfunction isRenetworkable(value) {\n    return (value && typeof (value.renetwork) === \"function\");\n}\nfunction ethDefaultProvider(network) {\n    var func = function (providers, options) {\n        if (options == null) {\n            options = {};\n        }\n        var providerList = [];\n        if (providers.InfuraProvider) {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            }\n            catch (error) { }\n        }\n        if (providers.EtherscanProvider) {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            }\n            catch (error) { }\n        }\n        if (providers.AlchemyProvider) {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            }\n            catch (error) { }\n        }\n        if (providers.PocketProvider) {\n            try {\n                providerList.push(new providers.PocketProvider(network));\n            }\n            catch (error) { }\n        }\n        if (providers.CloudflareProvider) {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            }\n            catch (error) { }\n        }\n        if (providerList.length === 0) {\n            return null;\n        }\n        if (providers.FallbackProvider) {\n            var quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            }\n            else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n        return providerList[0];\n    };\n    func.renetwork = function (network) {\n        return ethDefaultProvider(network);\n    };\n    return func;\n}\nfunction etcDefaultProvider(url, network) {\n    var func = function (providers, options) {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n        return null;\n    };\n    func.renetwork = function (network) {\n        return etcDefaultProvider(url, network);\n    };\n    return func;\n}\nvar homestead = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nvar ropsten = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nvar classicMordor = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\nvar networks = {\n    unspecified: {\n        chainId: 0,\n        name: \"unspecified\"\n    },\n    homestead: homestead,\n    mainnet: homestead,\n    morden: {\n        chainId: 2,\n        name: \"morden\"\n    },\n    ropsten: ropsten,\n    testnet: ropsten,\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/etc\", \"classic\")\n    },\n    classicMorden: {\n        chainId: 62,\n        name: \"classicMorden\",\n    },\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nfunction getNetwork(network) {\n    // No network (null)\n    if (network == null) {\n        return null;\n    }\n    if (typeof (network) === \"number\") {\n        for (var name_1 in networks) {\n            var standard_1 = networks[name_1];\n            if (standard_1.chainId === network) {\n                return {\n                    name: standard_1.name,\n                    chainId: standard_1.chainId,\n                    ensAddress: (standard_1.ensAddress || null),\n                    _defaultProvider: (standard_1._defaultProvider || null)\n                };\n            }\n        }\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n    if (typeof (network) === \"string\") {\n        var standard_2 = networks[network];\n        if (standard_2 == null) {\n            return null;\n        }\n        return {\n            name: standard_2.name,\n            chainId: standard_2.chainId,\n            ensAddress: standard_2.ensAddress,\n            _defaultProvider: (standard_2._defaultProvider || null)\n        };\n    }\n    var standard = networks[network.name];\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof (network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    var defaultProvider = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        }\n        else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\nexports.getNetwork = getNetwork;\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","ethDefaultProvider","network","func","providers","options","providerList","InfuraProvider","push","infura","error","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","CloudflareProvider","length","FallbackProvider","quorum","renetwork","func.renetwork","etcDefaultProvider","url","JsonRpcProvider","Object","defineProperty","value","getNetwork","logger_1","_version_1","logger","Logger","version","homestead","chainId","ensAddress","name","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","classic","classicMorden","classicTestnet","classicKotti","name_1","standard_1","standard_2","standard","throwArgumentError","defaultProvider"]
}
