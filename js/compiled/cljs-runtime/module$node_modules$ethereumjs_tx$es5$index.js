shadow$provide.module$node_modules$ethereumjs_tx$es5$index=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";var ethUtil=require("module$node_modules$ethereumjs_util$dist$index"),fees=require("module$node_modules$ethereum_common$params_json"),BN=ethUtil.BN,N_DIV_2=new BN("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0",16);global=function(){function Transaction(data){if(!(this instanceof Transaction))throw new TypeError("Cannot call a class as a function");
data=data||{};var fields=[{name:"nonce",length:32,allowLess:!0,default:new Buffer([])},{name:"gasPrice",length:32,allowLess:!0,default:new Buffer([])},{name:"gasLimit",alias:"gas",length:32,allowLess:!0,default:new Buffer([])},{name:"to",allowZero:!0,length:20,default:new Buffer([])},{name:"value",length:32,allowLess:!0,default:new Buffer([])},{name:"data",alias:"input",allowZero:!0,default:new Buffer([])},{name:"v",allowZero:!0,default:new Buffer([28])},{name:"r",length:32,allowZero:!0,allowLess:!0,
default:new Buffer([])},{name:"s",length:32,allowZero:!0,allowLess:!0,default:new Buffer([])}];ethUtil.defineProperties(this,fields,data);Object.defineProperty(this,"from",{enumerable:!0,configurable:!0,get:this.getSenderAddress.bind(this)});fields=ethUtil.bufferToInt(this.v);fields=Math.floor((fields-35)/2);0>fields&&(fields=0);this._chainId=fields||data.chainId||0;this._homestead=!0}Transaction.prototype.toCreationAddress=function(){return""===this.to.toString("hex")};Transaction.prototype.hash=
function(includeSignature){void 0===includeSignature&&(includeSignature=!0);if(includeSignature)includeSignature=this.raw;else if(0<this._chainId){var raw=this.raw.slice();this.v=this._chainId;this.s=this.r=0;includeSignature=this.raw;this.raw=raw}else includeSignature=this.raw.slice(0,6);return ethUtil.rlphash(includeSignature)};Transaction.prototype.getChainId=function(){return this._chainId};Transaction.prototype.getSenderAddress=function(){if(this._from)return this._from;var pubkey=this.getSenderPublicKey();
return this._from=ethUtil.publicToAddress(pubkey)};Transaction.prototype.getSenderPublicKey=function(){if(!(this._senderPubKey&&this._senderPubKey.length||this.verifySignature()))throw Error("Invalid Signature");return this._senderPubKey};Transaction.prototype.verifySignature=function(){var msgHash=this.hash(!1);if(this._homestead&&1===(new BN(this.s)).cmp(N_DIV_2))return!1;try{var v=ethUtil.bufferToInt(this.v);0<this._chainId&&(v-=2*this._chainId+8);this._senderPubKey=ethUtil.ecrecover(msgHash,v,
this.r,this.s)}catch(e){return!1}return!!this._senderPubKey};Transaction.prototype.sign=function(privateKey){var msgHash=this.hash(!1);privateKey=ethUtil.ecsign(msgHash,privateKey);0<this._chainId&&(privateKey.v+=2*this._chainId+8);Object.assign(this,privateKey)};Transaction.prototype.getDataFee=function(){for(var data=this.raw[5],cost=new BN(0),i=0;i<data.length;i++)0===data[i]?cost.iaddn(fees.txDataZeroGas.v):cost.iaddn(fees.txDataNonZeroGas.v);return cost};Transaction.prototype.getBaseFee=function(){var fee=
this.getDataFee().iaddn(fees.txGas.v);this._homestead&&this.toCreationAddress()&&fee.iaddn(fees.txCreation.v);return fee};Transaction.prototype.getUpfrontCost=function(){return(new BN(this.gasLimit)).imul(new BN(this.gasPrice)).iadd(new BN(this.value))};Transaction.prototype.validate=function(stringError){var errors=[];this.verifySignature()||errors.push("Invalid Signature");0<this.getBaseFee().cmp(new BN(this.gasLimit))&&errors.push(["gas limit is too low. Need at least "+this.getBaseFee()]);return void 0===
stringError||!1===stringError?0===errors.length:errors.join(" ")};return Transaction}();module.exports=global}
//# sourceMappingURL=module$node_modules$ethereumjs_tx$es5$index.js.map
