{
"version":3,
"file":"module$node_modules$axios$lib$adapters$xhr.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/axios/lib/adapters/xhr.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$axios$lib$adapters$xhr\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","utils","settle","buildURL","parseHeaders","isURLSameOrigin","createError","module.exports","config","Promise","dispatchXhrRequest","resolve","reject","requestData","data","requestHeaders","headers","isFormData","request","XMLHttpRequest","auth","Authorization","btoa","username","password","open","method","toUpperCase","url","params","paramsSerializer","timeout","onreadystatechange","request.onreadystatechange","readyState","status","responseURL","indexOf","responseHeaders","getAllResponseHeaders","response","responseData","responseType","responseText","statusText","onerror","request.onerror","ontimeout","request.ontimeout","isStandardBrowserEnv","cookies","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","setRequestHeader","val","key","toLowerCase","e","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","onCanceled","cancel","abort","send"]
}
