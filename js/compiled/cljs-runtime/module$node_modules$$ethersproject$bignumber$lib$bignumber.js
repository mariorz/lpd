shadow$provide.module$node_modules$$ethersproject$bignumber$lib$bignumber=function(global,require,module,exports){function toHex(value){if("string"!==typeof value)return toHex(value.toString(16));if("-"===value[0])return value=value.substring(1),"-"===value[0]&&logger.throwArgumentError("invalid hex","value",value),value=toHex(value),"0x00"===value?value:"-"+value;"0x"!==value.substring(0,2)&&(value="0x"+value);if("0x"===value)return"0x00";for(value.length%2&&(value="0x0"+value.substring(2));4<value.length&&
"0x00"===value.substring(0,4);)value="0x"+value.substring(4);return value}function toBigNumber(value){return BigNumber$jscomp$0.from(toHex(value))}function toBN(value){value=BigNumber$jscomp$0.from(value).toHexString();return"-"===value[0]?new BN("-"+value.substring(3),16):new BN(value.substring(2),16)}function throwFault(fault,operation,value){operation={fault,operation};null!=value&&(operation.value=value);return logger.throwError(fault,logger_1.Logger.errors.NUMERIC_FAULT,operation)}global=this&&
this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});exports._base16To36=exports._base36To16=exports.BigNumber=exports.isBigNumberish=void 0;var BN=global(require("module$node_modules$bn_DOT_js$lib$bn")).default.BN,bytes_1=require("module$node_modules$$ethersproject$bytes$lib$index"),logger_1=require("module$node_modules$$ethersproject$logger$lib$index");require=require("module$node_modules$$ethersproject$bignumber$lib$_version");
var logger=new logger_1.Logger(require.version),_constructorGuard={};exports.isBigNumberish=function(value){return null!=value&&(BigNumber$jscomp$0.isBigNumber(value)||"number"===typeof value&&0===value%1||"string"===typeof value&&!!value.match(/^-?[0-9]+$/)||bytes_1.isHexString(value)||"bigint"===typeof value||bytes_1.isBytes(value))};var _warnedToStringRadix=!1,BigNumber$jscomp$0=function(){function BigNumber(constructorGuard,hex){logger.checkNew(this.constructor,BigNumber);constructorGuard!==_constructorGuard&&
logger.throwError("cannot call constructor directly; use BigNumber.from",logger_1.Logger.errors.UNSUPPORTED_OPERATION,{operation:"new (BigNumber)"});this._hex=hex;this._isBigNumber=!0;Object.freeze(this)}BigNumber.prototype.fromTwos=function(value){return toBigNumber(toBN(this).fromTwos(value))};BigNumber.prototype.toTwos=function(value){return toBigNumber(toBN(this).toTwos(value))};BigNumber.prototype.abs=function(){return"-"===this._hex[0]?BigNumber.from(this._hex.substring(1)):this};BigNumber.prototype.add=
function(other){return toBigNumber(toBN(this).add(toBN(other)))};BigNumber.prototype.sub=function(other){return toBigNumber(toBN(this).sub(toBN(other)))};BigNumber.prototype.div=function(other){BigNumber.from(other).isZero()&&throwFault("division by zero","div");return toBigNumber(toBN(this).div(toBN(other)))};BigNumber.prototype.mul=function(other){return toBigNumber(toBN(this).mul(toBN(other)))};BigNumber.prototype.mod=function(other){other=toBN(other);other.isNeg()&&throwFault("cannot modulo negative values",
"mod");return toBigNumber(toBN(this).umod(other))};BigNumber.prototype.pow=function(other){other=toBN(other);other.isNeg()&&throwFault("cannot raise to negative values","pow");return toBigNumber(toBN(this).pow(other))};BigNumber.prototype.and=function(other){other=toBN(other);(this.isNegative()||other.isNeg())&&throwFault("cannot 'and' negative values","and");return toBigNumber(toBN(this).and(other))};BigNumber.prototype.or=function(other){other=toBN(other);(this.isNegative()||other.isNeg())&&throwFault("cannot 'or' negative values",
"or");return toBigNumber(toBN(this).or(other))};BigNumber.prototype.xor=function(other){other=toBN(other);(this.isNegative()||other.isNeg())&&throwFault("cannot 'xor' negative values","xor");return toBigNumber(toBN(this).xor(other))};BigNumber.prototype.mask=function(value){(this.isNegative()||0>value)&&throwFault("cannot mask negative values","mask");return toBigNumber(toBN(this).maskn(value))};BigNumber.prototype.shl=function(value){(this.isNegative()||0>value)&&throwFault("cannot shift negative values",
"shl");return toBigNumber(toBN(this).shln(value))};BigNumber.prototype.shr=function(value){(this.isNegative()||0>value)&&throwFault("cannot shift negative values","shr");return toBigNumber(toBN(this).shrn(value))};BigNumber.prototype.eq=function(other){return toBN(this).eq(toBN(other))};BigNumber.prototype.lt=function(other){return toBN(this).lt(toBN(other))};BigNumber.prototype.lte=function(other){return toBN(this).lte(toBN(other))};BigNumber.prototype.gt=function(other){return toBN(this).gt(toBN(other))};
BigNumber.prototype.gte=function(other){return toBN(this).gte(toBN(other))};BigNumber.prototype.isNegative=function(){return"-"===this._hex[0]};BigNumber.prototype.isZero=function(){return toBN(this).isZero()};BigNumber.prototype.toNumber=function(){try{return toBN(this).toNumber()}catch(error){throwFault("overflow","toNumber",this.toString())}return null};BigNumber.prototype.toString=function(){0<arguments.length&&(10===arguments[0]?_warnedToStringRadix||(_warnedToStringRadix=!0,logger.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")):
16===arguments[0]?logger.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()",logger_1.Logger.errors.UNEXPECTED_ARGUMENT,{}):logger.throwError("BigNumber.toString does not accept parameters",logger_1.Logger.errors.UNEXPECTED_ARGUMENT,{}));return toBN(this).toString(10)};BigNumber.prototype.toHexString=function(){return this._hex};BigNumber.prototype.toJSON=function(key){return{type:"BigNumber",hex:this.toHexString()}};BigNumber.from=function(value){if(value instanceof
BigNumber)return value;if("string"===typeof value)return value.match(/^-?0x[0-9a-f]+$/i)?new BigNumber(_constructorGuard,toHex(value)):value.match(/^-?[0-9]+$/)?new BigNumber(_constructorGuard,toHex(new BN(value))):logger.throwArgumentError("invalid BigNumber string","value",value);if("number"===typeof value)return value%1&&throwFault("underflow","BigNumber.from",value),(9007199254740991<=value||-9007199254740991>=value)&&throwFault("overflow","BigNumber.from",value),BigNumber.from(String(value));
if("bigint"===typeof value)return BigNumber.from(value.toString());if(bytes_1.isBytes(value))return BigNumber.from(bytes_1.hexlify(value));if(value)if(value.toHexString){var hex=value.toHexString();if("string"===typeof hex)return BigNumber.from(hex)}else if(hex=value._hex,null==hex&&"BigNumber"===value.type&&(hex=value.hex),"string"===typeof hex&&(bytes_1.isHexString(hex)||"-"===hex[0]&&bytes_1.isHexString(hex.substring(1))))return BigNumber.from(hex);return logger.throwArgumentError("invalid BigNumber value",
"value",value)};BigNumber.isBigNumber=function(value){return!(!value||!value._isBigNumber)};return BigNumber}();exports.BigNumber=BigNumber$jscomp$0;exports._base36To16=function(value){return(new BN(value,36)).toString(16)};exports._base16To36=function(value){return(new BN(value,16)).toString(36)}}
//# sourceMappingURL=module$node_modules$$ethersproject$bignumber$lib$bignumber.js.map
