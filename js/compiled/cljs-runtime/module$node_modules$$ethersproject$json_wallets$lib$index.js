shadow$provide.module$node_modules$$ethersproject$json_wallets$lib$index=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.decryptJsonWalletSync=exports.decryptJsonWallet=exports.getJsonWalletAddress=exports.isKeystoreWallet=exports.isCrowdsaleWallet=exports.encryptKeystore=exports.decryptKeystoreSync=exports.decryptKeystore=exports.decryptCrowdsale=void 0;var crowdsale_1=require("module$node_modules$$ethersproject$json_wallets$lib$crowdsale");
Object.defineProperty(exports,"decryptCrowdsale",{enumerable:!0,get:function(){return crowdsale_1.decrypt}});var inspect_1=require("module$node_modules$$ethersproject$json_wallets$lib$inspect");Object.defineProperty(exports,"getJsonWalletAddress",{enumerable:!0,get:function(){return inspect_1.getJsonWalletAddress}});Object.defineProperty(exports,"isCrowdsaleWallet",{enumerable:!0,get:function(){return inspect_1.isCrowdsaleWallet}});Object.defineProperty(exports,"isKeystoreWallet",{enumerable:!0,get:function(){return inspect_1.isKeystoreWallet}});
var keystore_1=require("module$node_modules$$ethersproject$json_wallets$lib$keystore");Object.defineProperty(exports,"decryptKeystore",{enumerable:!0,get:function(){return keystore_1.decrypt}});Object.defineProperty(exports,"decryptKeystoreSync",{enumerable:!0,get:function(){return keystore_1.decryptSync}});Object.defineProperty(exports,"encryptKeystore",{enumerable:!0,get:function(){return keystore_1.encrypt}});exports.decryptJsonWallet=function(json,password,progressCallback){return inspect_1.isCrowdsaleWallet(json)?
(progressCallback&&progressCallback(0),json=crowdsale_1.decrypt(json,password),progressCallback&&progressCallback(1),Promise.resolve(json)):inspect_1.isKeystoreWallet(json)?keystore_1.decrypt(json,password,progressCallback):Promise.reject(Error("invalid JSON wallet"))};exports.decryptJsonWalletSync=function(json,password){if(inspect_1.isCrowdsaleWallet(json))return crowdsale_1.decrypt(json,password);if(inspect_1.isKeystoreWallet(json))return keystore_1.decryptSync(json,password);throw Error("invalid JSON wallet");
}}
//# sourceMappingURL=module$node_modules$$ethersproject$json_wallets$lib$index.js.map
