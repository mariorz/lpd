{
"version":3,
"file":"module$node_modules$create_hmac$browser.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,uCAAf,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAapGC,QAASA,KAAK,CAACC,GAAD,CAAMC,GAAN,CAAW,CACvBC,IAAA,CAAKC,IAAL,CAAU,IAAV,CAAgB,QAAhB,CACmB,SAAnB,GAAI,MAAOF,IAAX,GACEA,GADF,CACQG,MAAA,CAAOC,IAAP,CAAYJ,GAAZ,CADR,CAIA,KAAIK,UAAqB,QAAT,GAACN,GAAD,EAA6B,QAA7B,GAAqBA,GAArB,CAAyC,GAAzC,CAA+C,EAE/D,KAAA,CAAKO,IAAL,CAAYP,GACZ,KAAA,CAAKQ,IAAL,CAAYP,GACRA,IAAJ,CAAQQ,MAAR,CAAiBH,SAAjB,CAEEL,GAFF,CAEQ,CADa,QAARS,GAAAV,GAAAU,CAAmB,IAAIC,SAAvBD,CAAqCE,GAAA,CAAIZ,GAAJ,CAC1C,EAAKa,MAAL,CAAYZ,GAAZ,CAAA,CAAiBa,MAAjB,EAFR,CAGWb,GAHX,CAGeQ,MAHf,CAGwBH,SAHxB,GAIEL,GAJF,CAIQG,MAAA,CAAOW,MAAP,CAAc,CAACd,GAAD,CAAMe,KAAN,CAAd,CAA4BV,SAA5B,CAJR,CAUA,KAHA,IAAIW,KAAO,IAAPA,CAAYC,KAAZD,CAAoBb,MAAA,CAAOe,WAAP,CAAmBb,SAAnB,CAAxB,CACIc,KAAO,IAAPA,CAAYC,KAAZD,CAAoBhB,MAAA,CAAOe,WAAP,CAAmBb,SAAnB,CADxB;AAGSgB,EAAI,CAAb,CAAgBA,CAAhB,CAAoBhB,SAApB,CAA+BgB,CAAA,EAA/B,CACEL,IAAA,CAAKK,CAAL,CACA,CADUrB,GAAA,CAAIqB,CAAJ,CACV,CADmB,EACnB,CAAAF,IAAA,CAAKE,CAAL,CAAA,CAAUrB,GAAA,CAAIqB,CAAJ,CAAV,CAAmB,EAErB,KAAA,CAAKC,KAAL,CAAqB,QAAR,GAAAvB,GAAA,CAAmB,IAAIW,SAAvB,CAAqCC,GAAA,CAAIZ,GAAJ,CAClD,KAAA,CAAKuB,KAAL,CAAWV,MAAX,CAAkBI,IAAlB,CAzBuB,CAXrBO,MAAAA,CAAW5B,OAAA,CAAQ,+CAAR,CACf,KAAI6B,OAAS7B,OAAA,CAAQ,wCAAR,CAAb,CACIM,KAAON,OAAA,CAAQ,uCAAR,CADX,CAEIQ,OAASR,OAAA,CAAQ,uCAAR,CAATQ,CAAgCA,MAFpC,CAGIsB,IAAM9B,OAAA,CAAQ,qCAAR,CAHV,CAIIe,UAAYf,OAAA,CAAQ,qCAAR,CAJhB,CAMIgB,IAAMhB,OAAA,CAAQ,sCAAR,CANV;AAQIoB,MAAQZ,MAAA,CAAOuB,KAAP,CAAa,GAAb,CA8BZH,OAAA,CAASzB,IAAT,CAAeG,IAAf,CAEAH,KAAA,CAAK6B,SAAL,CAAeC,OAAf,CAAyBC,QAAS,CAACC,IAAD,CAAO,CACvC,IAAA,CAAKR,KAAL,CAAWV,MAAX,CAAkBkB,IAAlB,CADuC,CAIzChC,KAAA,CAAK6B,SAAL,CAAeI,MAAf,CAAwBC,QAAS,EAAG,CAClC,IAAIC,EAAI,IAAA,CAAKX,KAAL,CAAWT,MAAX,EAER,OAAO,CADkB,QAAdJ,GAAA,IAAAA,CAAKH,IAALG,CAAyB,IAAIC,SAA7BD,CAA2CE,GAAA,CAAI,IAAJ,CAASL,IAAT,CAC/C,EAAKM,MAAL,CAAY,IAAZ,CAAiBQ,KAAjB,CAAA,CAAwBR,MAAxB,CAA+BqB,CAA/B,CAAA,CAAkCpB,MAAlC,EAH2B,CAMpCjB,OAAA,CAAOC,OAAP,CAAiBqC,QAAoB,CAACnC,GAAD,CAAMC,GAAN,CAAW,CAC9CD,GAAA,CAAMA,GAAA,CAAIoC,WAAJ,EACN,OAAY,QAAZ,GAAIpC,GAAJ,EAAgC,WAAhC,GAAwBA,GAAxB,CACS,IAAID,IAAJ,CAAS,QAAT,CAAmBE,GAAnB,CADT,CAGY,KAAZ,GAAID,GAAJ,CACS,IAAIyB,MAAJ,CAAWC,GAAX,CAAgBzB,GAAhB,CADT,CAGO,IAAIF,IAAJ,CAASC,GAAT,CAAcC,GAAd,CARuC,CArDoD;",
"sources":["node_modules/create-hmac/browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$create_hmac$browser\"] = function(global,require,module,exports) {\n'use strict'\nvar inherits = require('inherits')\nvar Legacy = require('./legacy')\nvar Base = require('cipher-base')\nvar Buffer = require('safe-buffer').Buffer\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\n\nvar sha = require('sha.js')\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Hmac","alg","key","Base","call","Buffer","from","blocksize","_alg","_key","length","hash","RIPEMD160","sha","update","digest","concat","ZEROS","ipad","_ipad","allocUnsafe","opad","_opad","i","_hash","inherits","Legacy","md5","alloc","prototype","_update","Hmac.prototype._update","data","_final","Hmac.prototype._final","h","module.exports","toLowerCase"]
}
