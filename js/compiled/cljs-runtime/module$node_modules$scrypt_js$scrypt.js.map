{
"version":3,
"file":"module$node_modules$scrypt_js$scrypt.js",
"lineCount":17,
"mappings":"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",
"sources":["node_modules/scrypt-js/scrypt.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$scrypt_js$scrypt\"] = function(global,require,module,exports) {\n\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n\n};"],
"names":["shadow$provide","global","require","module","exports","root","SHA256","m","blocks","p","off","len","length","a","h0","b","h1","c","h2","d","h3","e","h4","f","h5","g","h6","h","h7","u","i","j","w","t1","t2","K","Uint32Array","bytesLeft","bitLenHi","bitLenLo","numZeros","slice","push","PBKDF2_HMAC_SHA256_OneIter","password","salt","dkLen","incrementCounter","innerLen","inner","Array","outerKey","dk","concat","blockmix_salsa8","BY","Yi","r","x","_X","arraycopy","D","S","Si","B","R","src","srcPos","dest","destPos","checkBufferish","o","v","ensureInteger","value","name","Error","_scrypt","N","callback","prototype","call","XY","V","totalOps","currentOp","lastPercent10","stop","state","i0","i1","Bi","limit","parseInt","nextTick","setImmediate","setTimeout","incrementalSMix","steps","percent10","derivedKey","undefined","lib","scrypt","progressCallback","Promise","resolve","reject","lastProgress","error","progress","key","Uint8Array","syncScrypt","define","amd"]
}
